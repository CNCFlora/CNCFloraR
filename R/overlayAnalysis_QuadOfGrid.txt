# Carregando pacotes ####
library(sf)
library(rvest)
library(raster)
library(rgeos)
library(dplyr)
library(stringr)
library(tidyr)
library(rlist)
library(units)
library(spdplyr)
library(exactextractr)
library(installr)
library(tibble)

# Função customFloor
customCeiling <- function(x, Decimals=1) {
  x2<-x*10^Decimals
  ceiling(x2)/10^Decimals
}
customFloor <- function(x, Decimals=1) {
  x2<-x*10^Decimals
  floor(x2)/10^Decimals
}

# Paths dos Mapas
MapBiomas_Brazil_set <- NULL
for(ANO in 1985:2020){
  MapBiomas_Brazil_set_ <- paste0("D:/MapBiomas_Brazil_6.0_30m/MapBiomas_Brazil_6.0_", ANO, "_30m.tif")
  MapBiomas_Brazil_set <- rbind (MapBiomas_Brazil_set, MapBiomas_Brazil_set_)
}

# Species
ESPECIE <- "ESPECIEselect"


# Initial background log ####

if(
  
  file.exists(
    
    paste0(
      
      sub("Packages/CNCFloraR", "", getwd()),
      "/CNCFlora_data/outputs/overlayAnalysis logs/QuadOfGrid/",
      ESPECIE,
      ".csv"
      
    )
    
  ) == F
  
){
  
  backgroundJobs_log <- data.frame(
    
    job = "Overlay analysis - QuadOfGrid",
    species = ESPECIE,
    start = format(Sys.Date(), "%d/%m/%Y"),
    end = ""
    
  )
  
  write.csv2(
    
    data.frame(
      
      job = "Overlay analysis - QuadOfGrid",
      species = ESPECIE,
      start = format(Sys.Date(), "%d/%m/%Y"),
      end = ""
      
    ),
    paste0(
      
      sub("Packages/CNCFloraR", "", getwd()),
      "/CNCFlora_data/outputs/overlayAnalysis logs/QuadOfGrid/",
      ESPECIE,
      ".csv"
      
    ),
    row.names = F
    
  )
  
} else {
  
  backgroundJobs_log <- data.table::fread(
    
    paste0(
      
      sub("Packages/CNCFloraR", "", getwd()),
      "/CNCFlora_data/outputs/overlayAnalysis logs/QuadOfGrid/",
      ESPECIE,
      ".csv"
      
    )
    
  )
  
}

tryCatch(
  
  expr = {
    
    REGISTROS <- paste0(
      
      sub("Packages/CNCFloraR", "", getwd()),
      "/CNCFlora_data/inputs/occurrences/oldSystem/",
      ESPECIE,
      ".html"
      
    )
    
    input<-read_html(REGISTROS)
    
    final_output <- NULL
    for(mapaMapBiomas in MapBiomas_Brazil_set){
      
      
      MapBiomas_ANO <- str_extract(mapaMapBiomas, "[0-9][0-9][0-9][0-9]")
      MapBiomas_Brazil <- raster(mapaMapBiomas)
      
      # Obtenção do status de validação dos registros ####
      registros<-input %>% html_nodes(".label-valid") %>% html_text()
      registros<-str_extract(registros, "\\w+")
      
      # Obtenção do status de validação SIG ####
      validation_SIG<-input %>% html_nodes(".label-sig") %>% html_text()
      validation_SIG<-str_extract(validation_SIG, "\\w+\\s\\w+")
      
      # Obtenção dos códigos URN ####
      URNs<-input %>% html_nodes("a") %>% html_attr("name")
      URNs<-as.data.frame(URNs)
      URNs<-URNs %>% drop_na()
      URNs<-as.data.frame(URNs[-1,])
      toDelete <- seq(2, nrow(URNs), 2)
      URNs<-as.data.frame(URNs[toDelete,])
      
      # Obtenção dos Estados ####
      ESTADOS<-input %>% html_nodes("#stateProvince") %>% html_attr("value")
      ESTADOS<-toupper(ESTADOS)
      ESTADOS <- sub("AMAPA", "AMAPÁ",ESTADOS)
      ESTADOS <- sub("CEARA", "CEARÁ",ESTADOS)
      ESTADOS <- sub("ESPIRITO SANTO", "ESPÍRITO SANTO",ESTADOS)
      ESTADOS <- sub("GOIAS", "GOIÁS",ESTADOS)
      ESTADOS <- sub("MARANHAO", "MARANHÃO",ESTADOS)
      ESTADOS <- sub("PARAIBA", "PARAÍBA",ESTADOS)
      ESTADOS <- sub("PARANA", "PARANÁ",ESTADOS)
      ESTADOS <- sub("PARA", "PARÁ",ESTADOS)
      ESTADOS <- sub("PARÁNÁ", "PARANÁ",ESTADOS)
      ESTADOS <- sub("PIAUI", "PIAUÍ",ESTADOS)
      ESTADOS <- sub("RONDONIA", "RONDÔNIA",ESTADOS)
      ESTADOS <- sub("SAO PAULO", "SÃO PAULO",ESTADOS)
      ESTADOS <- str_trim(ESTADOS, side = c("both"))
      
      # Obtenção dos municípios ####
      MUNICIPIOS<-input %>% html_nodes("#municipality") %>% html_attr("value")
      MUNICIPIOS <- str_trim(MUNICIPIOS, side = c("both"))
      MUNICIPIOS <- toupper(MUNICIPIOS)
      
      # Obtenção das coordenadas geográficas ####
      #' Adicionar na linha 84 do script do HTML
      coords<-input %>% html_elements(".col-md-6") %>% html_elements("input") %>% html_attr("value")
      coords2 <- matrix(coords, ncol = 6, byrow = TRUE)
      coords_df <- as.data.frame(coords2)
      coords_df<-coords_df[,-6]
      coords_df<-coords_df[,-5]
      coords_df<-coords_df %>% dplyr::select(V2, V1, V3, V4)
      coords_df<-data.frame(coords_df,URNs,registros,validation_SIG,ESTADOS,MUNICIPIOS)
      colnames(coords_df) <- c("lon","lat","precision","protocol","URNs","Validade","Validade_SIG","ESTADOS","MUNICIPIOS")
      
      # Triagem dos registros válidos ####
      coords_df_valid <- coords_df %>% filter(Validade=="Válido" & Validade_SIG=="SIG OK")
      
      # Verificação do grau da coordenada ####
      coords_df_valid$Degree_zone <- sub("\\..*", "", coords_df_valid$lon)
      coords_df_valid$Degree_zone <- sub("^$", "EMPTY", coords_df_valid$Degree_zone)
      
      coords_df_valid$UTMzone <- grepl("-",coords_df_valid$lat)
      coords_df_valid$UTMzone <- sub(TRUE, "S", coords_df_valid$UTMzone)
      coords_df_valid$UTMzone <- sub(FALSE, "N", coords_df_valid$UTMzone)
      
      coords_df_valid$Degree_zone <- sub("-", "", coords_df_valid$Degree_zone)
      
      EMPTY_row<-grep("EMPTY", coords_df_valid$Degree_zone)
      
      coords_df_valid$UTMzone[EMPTY_row]<-""
      coords_df_valid$Degree_zone[EMPTY_row]<-""
      
      # Verificação da Zona UTM ####
      coords_df_valid_n_row <- as.numeric(1:(length(coords_df_valid$Degree_zone)))
      
      
      for(i in coords_df_valid_n_row){
        coords_df_valid$UTMzone[i]<-paste(ceiling((-as.numeric(coords_df_valid$Degree_zone[i])+180)/6),coords_df_valid$UTMzone[i], sep = "")
      }
      coords_df_valid$UTMzone<-sub("NA","",coords_df_valid$UTMzone)
      
      # Apagamento das coordenadas vazias ####
      coords_df_valid <- coords_df_valid %>% mutate_all(na_if,"")
      for(i in coords_df_valid_n_row){
        if(is.na(coords_df_valid$precision[i])){
          coords_df_valid <- coords_df_valid[-i,]}
      }
      
      # Estipulação do Sistema de Coordenadas Geograficas Projetado para UTM/WGS84 ####
      coords_df_valid$CRS <- coords_df_valid$UTMzone
      coords_df_valid$CRS <- sub("18S", "+proj=utm +zone=18 +south +datum=WGS84", coords_df_valid$CRS)
      coords_df_valid$CRS <- sub("19S", "+proj=utm +zone=19 +south +datum=WGS84", coords_df_valid$CRS)
      coords_df_valid$CRS <- sub("20S", "+proj=utm +zone=20 +south +datum=WGS84", coords_df_valid$CRS)
      coords_df_valid$CRS <- sub("21S", "+proj=utm +zone=21 +south +datum=WGS84", coords_df_valid$CRS)
      coords_df_valid$CRS <- sub("22S", "+proj=utm +zone=22 +south +datum=WGS84", coords_df_valid$CRS)
      coords_df_valid$CRS <- sub("23S", "+proj=utm +zone=23 +south +datum=WGS84", coords_df_valid$CRS)
      coords_df_valid$CRS <- sub("24S", "+proj=utm +zone=24 +south +datum=WGS84", coords_df_valid$CRS)
      coords_df_valid$CRS <- sub("25S", "+proj=utm +zone=25 +south +datum=WGS84", coords_df_valid$CRS)
      
      coords_df_valid$CRS <- sub("18N", "+proj=utm +zone=18 +north +datum=WGS84", coords_df_valid$CRS)
      coords_df_valid$CRS <- sub("19N", "+proj=utm +zone=19 +north +datum=WGS84", coords_df_valid$CRS)
      coords_df_valid$CRS <- sub("20N", "+proj=utm +zone=20 +north +datum=WGS84", coords_df_valid$CRS)
      coords_df_valid$CRS <- sub("21N", "+proj=utm +zone=21 +north +datum=WGS84", coords_df_valid$CRS)
      coords_df_valid$CRS <- sub("22N", "+proj=utm +zone=22 +north +datum=WGS84", coords_df_valid$CRS)
      coords_df_valid$CRS <- sub("23N", "+proj=utm +zone=23 +north +datum=WGS84", coords_df_valid$CRS)
      coords_df_valid$CRS <- sub("24N", "+proj=utm +zone=24 +north +datum=WGS84", coords_df_valid$CRS)
      coords_df_valid$CRS <- sub("25N", "+proj=utm +zone=25 +north +datum=WGS84", coords_df_valid$CRS)
      
      # Apagamento das coordenadas com precisão de centroide de município ####
      coords_df_valid_AOO <- coords_df_valid %>% filter (!str_detect(precision, "[C|c]entr[o|ó]ide"))
      
      # Criação do dataframe das coordenadas geográficas (AOO) ####
      coords_df_valid_AOO[,1] <- as.numeric(coords_df_valid_AOO[,1])
      coords_df_valid_AOO[,2] <- as.numeric(coords_df_valid_AOO[,2])
      if(dplyr::count(coords_df_valid_AOO)==0){sites_AOO<-NA} else{
        sites_AOO <- SpatialPointsDataFrame(coords_df_valid_AOO[,1:2], coords_df_valid_AOO[,3:11])
      }
      
      # Criação do dataframe das coordenadas geográficas (EOO) ####
      coords_df_valid[,1] <- as.numeric(coords_df_valid[,1])
      coords_df_valid[,2] <- as.numeric(coords_df_valid[,2])
      if(dplyr::count(coords_df_valid)==0){sites<-NA} else{
        sites <- SpatialPointsDataFrame(coords_df_valid[,1:2], coords_df_valid[,3:11])
      }
      
      # EOO
      if(is.na(sites)==T|nrow(unique(data.frame(lat=coords_df_valid$lat, lon=coords_df_valid$lon))) < 3){
        EOO <- 0
        area_EOO_km2 <- 0
      } else {
        EOO <- gConvexHull(sites)
        area_EOO_km2 <- area(EOO)
      }
      
      # Diferença de área AOO com/sem centroide de municípios
      sites_as_sf<-st_as_sf(sites)
      if(as.numeric(nrow(unique(sites@coords)))==1){
        sites_grid<-gBuffer(as_Spatial(sites_as_sf), byid = TRUE, capStyle = "SQUARE", width = 0.01)
        sites_grid_AOO<-st_as_sf(sites_grid)
      } else{
        sites_grid<-st_make_grid(sites_as_sf, cellsize = .02)
        sites_grid_AOO<-sites_grid[sites_as_sf]
      }
      AOO_area_c_centr_mun<-round(sum(st_area(sites_grid_AOO)*10000))
      
      if(is.na(sites_AOO)==T){
        AOO_area_s_centr_mun<-0
      } else{
        sites_AOO_as_sf<-st_as_sf(sites_AOO)
        if(as.numeric(nrow(unique(sites_AOO@coords)))==1){
          sites_AOO_grid<-gBuffer(as_Spatial(sites_AOO_as_sf), byid = TRUE, capStyle = "SQUARE", width = 0.01)
          sites_AOO_grid_AOO<-st_as_sf(sites_AOO_grid)
        } else{
          sites_AOO_grid<-st_make_grid(sites_AOO_as_sf, cellsize = .02)
          sites_AOO_grid_AOO<-sites_AOO_grid[sites_AOO_as_sf]
        }
        AOO_area_s_centr_mun<-round(sum(st_area(sites_AOO_grid_AOO)*10000))
      }
      
      if(AOO_area_s_centr_mun == 0){} else{
        
        if(length(st_dimension(sites_AOO_grid_AOO)) == 1){
          
          data_sites_AOO_grid_AOO <-
            if(is.null(nrow(sites_AOO_grid_AOO)) == T){
              
              data.frame(ID = paste0("ID", 1))
              
            } else{
              
              data.frame(ID = paste0("ID", 1:nrow(sites_AOO_grid_AOO)))
              
            }
          
          row.names(data_sites_AOO_grid_AOO) <-
            if(is.null(nrow(sites_AOO_grid_AOO)) == T){
              
              paste0("ID", 1)
              
            } else{
              
              paste0("ID", 1:nrow(sites_AOO_grid_AOO))
              
            }
          
          
          if(is.null(nrow(sites_AOO_grid_AOO)) == T){
            
            st_sf(data.frame(ID = "ID1", geom = sites_AOO_grid_AOO))
            
          } else{
            
            row.names(sites_AOO_grid_AOO) <- paste0("ID", 1:nrow(sites_AOO_grid_AOO))
            
          }
          
          sites_AOO_grid_AOO <- SpatialPolygonsDataFrame(as_Spatial(sites_AOO_grid_AOO),
                                                         data = data_sites_AOO_grid_AOO)
          
        } else {
          
          data_sites_AOO_grid_AOO <- data.frame(ID = paste0("ID", 1:length(sites_AOO_grid_AOO)))
          row.names(data_sites_AOO_grid_AOO) <- paste0("ID", 1:length(sites_AOO_grid_AOO))
          sites_AOO_grid_AOO <- SpatialPolygonsDataFrame(as_Spatial(sites_AOO_grid_AOO),
                                                         data = data_sites_AOO_grid_AOO)
          
        }
        
        # Estabelecimento do Grid (AOO) ####
        if(is.na(sites_AOO)==T){
          final_output_mapbiomas_urbano <- data.frame(Species = ESPECIE,
                                                      Classe = "Infraestrutura Urbana",
                                                      Area_AOO_sites_km2 = NA,
                                                      Area_AOO_km2 = NA,
                                                      Porcentagem_AOO = NA,
                                                      AOO_util_km2 = NA,
                                                      Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_urbano)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_urbano)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_mineracao <- data.frame(Species = ESPECIE,
                                                         Classe = "Mineração",
                                                         Area_AOO_sites_km2 = NA,
                                                         Area_AOO_km2 = NA,
                                                         Porcentagem_AOO = NA,
                                                         AOO_util_km2 = NA,
                                                         Fonte="MapBiomas"
          )
          colnames(final_output_mapbiomas_mineracao)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_mineracao)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_silvicultura <- data.frame(Species = ESPECIE,
                                                            Classe = "Silvicultura",
                                                            Area_AOO_sites_km2 = NA,
                                                            Area_AOO_km2 = NA,
                                                            Porcentagem_AOO = NA,
                                                            AOO_util_km2 = NA,
                                                            Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_silvicultura)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_silvicultura)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_outras_lavouras_temporarias <- data.frame(Species = ESPECIE,
                                                                           Classe = "Outras lavouras temporárias",
                                                                           Area_AOO_sites_km2 = NA,
                                                                           Area_AOO_km2 = NA,
                                                                           Porcentagem_AOO = NA,
                                                                           AOO_util_km2 = NA,
                                                                           Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_outras_lavouras_temporarias)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_outras_lavouras_temporarias)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_soja <- data.frame(Species = ESPECIE,
                                                    Classe = "Soja",
                                                    Area_AOO_sites_km2 = NA,
                                                    Area_AOO_km2 = NA,
                                                    Porcentagem_AOO = NA,
                                                    AOO_util_km2 = NA,
                                                    Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_soja)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_soja)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_cana <- data.frame(Species = ESPECIE,
                                                    Classe = "Cana-de-açúcar",
                                                    Area_AOO_sites_km2 = NA,
                                                    Area_AOO_km2 = NA,
                                                    Porcentagem_AOO = NA,
                                                    AOO_util_km2 = NA,
                                                    Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_cana)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_cana)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_lavouras_perenes <- data.frame(Species = ESPECIE,
                                                                Classe = "Lavouras perenes",
                                                                Area_AOO_sites_km2 = NA,
                                                                Area_AOO_km2 = NA,
                                                                Porcentagem_AOO = NA,
                                                                AOO_util_km2 = NA,
                                                                Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_lavouras_perenes)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_lavouras_perenes)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_pastagem <- data.frame(Species = ESPECIE,
                                                        Classe = "Pastagem",
                                                        Area_AOO_sites_km2 = NA,
                                                        Area_AOO_km2 = NA,
                                                        Porcentagem_AOO = NA,
                                                        AOO_util_km2 = NA,
                                                        Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_pastagem)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_pastagem)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_mosaic_past_agric <- data.frame(Species = ESPECIE,
                                                                 Classe = "Mosaico Agricultura e Pastagem",
                                                                 Area_AOO_sites_km2 = NA,
                                                                 Area_AOO_km2 = NA,
                                                                 Porcentagem_AOO = NA,
                                                                 AOO_util_km2 = NA,
                                                                 Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_mosaic_past_agric)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_mosaic_past_agric)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_floresta <- data.frame(Species = ESPECIE,
                                                        Classe = "Floresta",
                                                        Area_AOO_sites_km2 = NA,
                                                        Area_AOO_km2 = NA,
                                                        Porcentagem_AOO = NA,
                                                        AOO_util_km2 = NA,
                                                        Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_floresta)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_floresta)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_savana <- data.frame(Species = ESPECIE,
                                                      Classe =" Savana",
                                                      Area_AOO_sites_km2 = NA,
                                                      Area_AOO_km2 = NA,
                                                      Porcentagem_AOO = NA,
                                                      AOO_util_km2 = NA,
                                                      Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_savana)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_savana)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_mangue <- data.frame(Species = ESPECIE,
                                                      Classe = "Mangue",
                                                      Area_AOO_sites_km2 = NA,
                                                      Area_AOO_km2 = NA,
                                                      Porcentagem_AOO = NA,
                                                      AOO_util_km2 = NA,
                                                      Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_mangue)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_mangue)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_alagado_pantanosa <- data.frame(Species = ESPECIE,
                                                                 Classe = "Campo Alagado e Área Pantanosa",
                                                                 Area_AOO_sites_km2 = NA,
                                                                 Area_AOO_km2 = NA,
                                                                 Porcentagem_AOO = NA,
                                                                 AOO_util_km2 = NA,
                                                                 Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_alagado_pantanosa)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_alagado_pantanosa)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_campos <- data.frame(Species = ESPECIE,
                                                      Classe = "Formação Campestre",
                                                      Area_AOO_sites_km2 = NA,
                                                      Area_AOO_km2 = NA,
                                                      Porcentagem_AOO = NA,
                                                      AOO_util_km2 = NA,
                                                      Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_campos)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_campos)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_outras_nao_florestais <- data.frame(Species = ESPECIE,
                                                                     Classe = "Outras Formações não Florestais",
                                                                     Area_AOO_sites_km2 = NA,
                                                                     Area_AOO_km2 = NA,
                                                                     Porcentagem_AOO = NA,
                                                                     AOO_util_km2 = NA,
                                                                     Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_outras_nao_florestais)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_outras_nao_florestais)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_lavouras_temporarias <- data.frame(Species = ESPECIE,
                                                                    Classe = "Lavoura Temporária",
                                                                    Area_AOO_sites_km2 = NA,
                                                                    Area_AOO_km2 = NA,
                                                                    Porcentagem_AOO = NA,
                                                                    AOO_util_km2 = NA,
                                                                    Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_lavouras_temporarias)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_lavouras_temporarias)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_praia_duna_areal <- data.frame(Species = ESPECIE,
                                                                Classe = "Praia, Duna e Areal",
                                                                Area_AOO_sites_km2 = NA,
                                                                Area_AOO_km2 = NA,
                                                                Porcentagem_AOO = NA,
                                                                AOO_util_km2 = NA,
                                                                Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_praia_duna_areal)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_praia_duna_areal)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_outras_nao_vegetadas <- data.frame(Species = ESPECIE,
                                                                    Classe = "Outras Áreas não Vegetadas",
                                                                    Area_AOO_sites_km2 = NA,
                                                                    Area_AOO_km2 = NA,
                                                                    Porcentagem_AOO = NA,
                                                                    AOO_util_km2 = NA,
                                                                    Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_outras_nao_vegetadas)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_outras_nao_vegetadas)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_nao_observado <- data.frame(Species = ESPECIE,
                                                             Classe = "Não Observado",
                                                             Area_AOO_sites_km2 = NA,
                                                             Area_AOO_km2 = NA,
                                                             Porcentagem_AOO = NA,
                                                             AOO_util_km2 = NA,
                                                             Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_nao_observado)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_nao_observado)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_afloramento_rochoso <- data.frame(Species = ESPECIE,
                                                                   Classe = "Afloramento Rochoso",
                                                                   Area_AOO_sites_km2 = NA,
                                                                   Area_AOO_km2 = NA,
                                                                   Porcentagem_AOO = NA,
                                                                   AOO_util_km2 = NA,
                                                                   Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_afloramento_rochoso)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_afloramento_rochoso)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_aquicultura <- data.frame(Species = ESPECIE,
                                                           Classe = "Aquicultura",
                                                           Area_AOO_sites_km2 = NA,
                                                           Area_AOO_km2 = NA,
                                                           Porcentagem_AOO = NA,
                                                           AOO_util_km2 = NA,
                                                           Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_aquicultura)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_aquicultura)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_apicum <- data.frame(Species = ESPECIE,
                                                      Classe = "Apicum",
                                                      Area_AOO_sites_km2 = NA,
                                                      Area_AOO_km2 = NA,
                                                      Porcentagem_AOO = NA,
                                                      AOO_util_km2 = NA,
                                                      Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_apicum)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_apicum)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_rio_lago_oceano <- data.frame(Species = ESPECIE,
                                                               Classe = "Rio, Lago e Oceano",
                                                               Area_AOO_sites_km2 = NA,
                                                               Area_AOO_km2 = NA,
                                                               Porcentagem_AOO = NA,
                                                               AOO_util_km2 = NA,
                                                               Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_rio_lago_oceano)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_rio_lago_oceano)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_arroz <- data.frame(Species = ESPECIE,
                                                     Classe="Arroz",
                                                     Area_AOO_sites_km2 = NA,
                                                     Area_AOO_km2 = NA,
                                                     Porcentagem_AOO = NA,
                                                     AOO_util_km2 = NA,
                                                     Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_arroz)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_arroz)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_cafe <- data.frame(Species = ESPECIE,
                                                    Classe = "Café",
                                                    Area_AOO_sites_km2 = NA,
                                                    Area_AOO_km2 = NA,
                                                    Porcentagem_AOO = NA,
                                                    AOO_util_km2 = NA,
                                                    Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_cafe)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_cafe)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_citrus <- data.frame(Species = ESPECIE,
                                                      Classe = "Citrus",
                                                      Area_AOO_sites_km2 = NA,
                                                      Area_AOO_km2 = NA,
                                                      Porcentagem_AOO = NA,
                                                      AOO_util_km2 = NA,
                                                      Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_citrus)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_citrus)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_outras_lavouras_perenes <- data.frame(Species = ESPECIE,
                                                                       Classe = "Outras Lavouras Perenes",
                                                                       Area_AOO_sites_km2 = NA,
                                                                       Area_AOO_km2 = NA,
                                                                       Porcentagem_AOO = NA,
                                                                       AOO_util_km2 = NA,
                                                                       Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_outras_lavouras_perenes)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_outras_lavouras_perenes)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_restinga_arborizada <- data.frame(Species = ESPECIE,
                                                                   Classe = "Restinga Arborizada",
                                                                   Area_AOO_sites_km2 = NA,
                                                                   Area_AOO_km2 = NA,
                                                                   Porcentagem_AOO = NA,
                                                                   AOO_util_km2 = NA,
                                                                   Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_restinga_arborizada)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_restinga_arborizada)[c(3:6)], "_", MapBiomas_ANO)
          
        } else{
          
          # Seleção das zonas UTM
          UTM_zone <- unique(sites_AOO$UTMzone)
          CRS <- unique(coords_df_valid_AOO$CRS)
          
          if(length(UTM_zone) == 1){
            # CRS 1
            sites1 <- sites_AOO %>% filter(UTMzone == UTM_zone[1])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_1) <- CRS[1]
            sites1_sf <- st_as_sf(sites1)
            st_crs(sites1_sf) <- CRS[1]
            sites_AOO_grid_AOO_1quads <- as.data.frame(st_intersects(sites1_sf, st_as_sf(sites_AOO_grid_AOO_1)))
            if(length(which(duplicated(sites_AOO_grid_AOO_1quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_1quads <- sites_AOO_grid_AOO_1quads[-which(duplicated(sites_AOO_grid_AOO_1quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO_1[sites_AOO_grid_AOO_1quads$col.id,]
            sites_AOO_grid_AOO_1$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_1$ID))
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO_1[order(sites_AOO_grid_AOO_1$IDnumber),]
            sites_AOO_grid_AOO_1$Quad <- paste0(UTM_zone[1], "_", 1:nrow(sites_AOO_grid_AOO_1))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil1 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil1) <- CRS[1]
            
            # Intersectar Raster e coordenadas
            sites1_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_1)){
              sites1_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil1,
                                                               sites_AOO_grid_AOO_1[i,])
              sites1_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[1], "_", i), sites1_intersected_mapbiomas_)
              colnames(sites1_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites1_intersected_mapbiomas <- rbind(sites1_intersected_mapbiomas, sites1_intersected_mapbiomas_)
              sites1_intersected_mapbiomas_df <- sites1_intersected_mapbiomas
            }
          }
          
          if(length(UTM_zone) == 2){
            # CRS 1
            sites1 <- sites_AOO %>% filter(UTMzone == UTM_zone[1])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_1) <- CRS[1]
            sites1_sf <- st_as_sf(sites1)
            st_crs(sites1_sf) <- CRS[1]
            sites_AOO_grid_AOO_1quads <- as.data.frame(st_intersects(sites1_sf, st_as_sf(sites_AOO_grid_AOO_1)))
            if(length(which(duplicated(sites_AOO_grid_AOO_1quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_1quads <- sites_AOO_grid_AOO_1quads[-which(duplicated(sites_AOO_grid_AOO_1quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO_1[sites_AOO_grid_AOO_1quads$col.id,]
            sites_AOO_grid_AOO_1$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_1$ID))
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO_1[order(sites_AOO_grid_AOO_1$IDnumber),]
            sites_AOO_grid_AOO_1$Quad <- paste0(UTM_zone[1], "_", 1:nrow(sites_AOO_grid_AOO_1))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil1 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil1) <- CRS[1]
            
            # Intersectar Raster e coordenadas
            sites1_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_1)){
              sites1_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil1,
                                                               sites_AOO_grid_AOO_1[i,])
              sites1_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[1], "_", i), sites1_intersected_mapbiomas_)
              colnames(sites1_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites1_intersected_mapbiomas <- rbind(sites1_intersected_mapbiomas, sites1_intersected_mapbiomas_)
              sites1_intersected_mapbiomas_df <- sites1_intersected_mapbiomas
            }
            
            # CRS 2
            sites2 <- sites_AOO %>% filter(UTMzone == UTM_zone[2])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_2 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_2) <- CRS[2]
            sites2_sf <- st_as_sf(sites2)
            st_crs(sites2_sf) <- CRS[2]
            sites_AOO_grid_AOO_2quads <- as.data.frame(st_intersects(sites2_sf, st_as_sf(sites_AOO_grid_AOO_2)))
            if(length(which(duplicated(sites_AOO_grid_AOO_2quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_2quads <- sites_AOO_grid_AOO_2quads[-which(duplicated(sites_AOO_grid_AOO_2quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_2 <- sites_AOO_grid_AOO_2[sites_AOO_grid_AOO_2quads$col.id,]
            sites_AOO_grid_AOO_2$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_2$ID))
            sites_AOO_grid_AOO_2 <- sites_AOO_grid_AOO_2[order(sites_AOO_grid_AOO_2$IDnumber),]
            sites_AOO_grid_AOO_2$Quad <- paste0(UTM_zone[2], "_", 1:nrow(sites_AOO_grid_AOO_2))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil2 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil2) <- CRS[2]
            
            # Intersectar Raster e coordenadas
            sites2_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_2)){
              sites2_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil2,
                                                               sites_AOO_grid_AOO_2[i,])
              sites2_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[2], "_", i), sites2_intersected_mapbiomas_)
              colnames(sites2_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites2_intersected_mapbiomas <- rbind(sites2_intersected_mapbiomas, sites2_intersected_mapbiomas_)
              sites2_intersected_mapbiomas_df <- sites2_intersected_mapbiomas
            }
          }
          
          if(length(UTM_zone) == 3){
            # CRS 1
            sites1 <- sites_AOO %>% filter(UTMzone == UTM_zone[1])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_1) <- CRS[1]
            sites1_sf <- st_as_sf(sites1)
            st_crs(sites1_sf) <- CRS[1]
            sites_AOO_grid_AOO_1quads <- as.data.frame(st_intersects(sites1_sf, st_as_sf(sites_AOO_grid_AOO_1)))
            if(length(which(duplicated(sites_AOO_grid_AOO_1quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_1quads <- sites_AOO_grid_AOO_1quads[-which(duplicated(sites_AOO_grid_AOO_1quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO_1[sites_AOO_grid_AOO_1quads$col.id,]
            sites_AOO_grid_AOO_1$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_1$ID))
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO_1[order(sites_AOO_grid_AOO_1$IDnumber),]
            sites_AOO_grid_AOO_1$Quad <- paste0(UTM_zone[1], "_", 1:nrow(sites_AOO_grid_AOO_1))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil1 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil1) <- CRS[1]
            
            # Intersectar Raster e coordenadas
            sites1_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_1)){
              sites1_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil1,
                                                               sites_AOO_grid_AOO_1[i,])
              sites1_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[1], "_", i), sites1_intersected_mapbiomas_)
              colnames(sites1_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites1_intersected_mapbiomas <- rbind(sites1_intersected_mapbiomas, sites1_intersected_mapbiomas_)
              sites1_intersected_mapbiomas_df <- sites1_intersected_mapbiomas
            }
            
            # CRS 2
            sites2 <- sites_AOO %>% filter(UTMzone == UTM_zone[2])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_2 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_2) <- CRS[2]
            sites2_sf <- st_as_sf(sites2)
            st_crs(sites2_sf) <- CRS[2]
            sites_AOO_grid_AOO_2quads <- as.data.frame(st_intersects(sites2_sf, st_as_sf(sites_AOO_grid_AOO_2)))
            if(length(which(duplicated(sites_AOO_grid_AOO_2quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_2quads <- sites_AOO_grid_AOO_2quads[-which(duplicated(sites_AOO_grid_AOO_2quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_2 <- sites_AOO_grid_AOO_2[sites_AOO_grid_AOO_2quads$col.id,]
            sites_AOO_grid_AOO_2$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_2$ID))
            sites_AOO_grid_AOO_2 <- sites_AOO_grid_AOO_2[order(sites_AOO_grid_AOO_2$IDnumber),]
            sites_AOO_grid_AOO_2$Quad <- paste0(UTM_zone[2], "_", 1:nrow(sites_AOO_grid_AOO_2))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil2 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil2) <- CRS[2]
            
            # Intersectar Raster e coordenadas
            sites2_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_2)){
              sites2_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil2,
                                                               sites_AOO_grid_AOO_2[i,])
              sites2_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[2], "_", i), sites2_intersected_mapbiomas_)
              colnames(sites2_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites2_intersected_mapbiomas <- rbind(sites2_intersected_mapbiomas, sites2_intersected_mapbiomas_)
              sites2_intersected_mapbiomas_df <- sites2_intersected_mapbiomas
            }
            
            # CRS 3
            sites3 <- sites_AOO %>% filter(UTMzone == UTM_zone[3])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_3 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_3) <- CRS[3]
            sites3_sf <- st_as_sf(sites3)
            st_crs(sites3_sf) <- CRS[3]
            sites_AOO_grid_AOO_3quads <- as.data.frame(st_intersects(sites3_sf, st_as_sf(sites_AOO_grid_AOO_3)))
            if(length(which(duplicated(sites_AOO_grid_AOO_3quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_3quads <- sites_AOO_grid_AOO_3quads[-which(duplicated(sites_AOO_grid_AOO_3quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_3 <- sites_AOO_grid_AOO_3[sites_AOO_grid_AOO_3quads$col.id,]
            sites_AOO_grid_AOO_3$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_3$ID))
            sites_AOO_grid_AOO_3 <- sites_AOO_grid_AOO_3[order(sites_AOO_grid_AOO_3$IDnumber),]
            sites_AOO_grid_AOO_3$Quad <- paste0(UTM_zone[3], "_", 1:nrow(sites_AOO_grid_AOO_3))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil3 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil3) <- CRS[3]
            
            # Intersectar Raster e coordenadas
            sites3_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_3)){
              sites3_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil3,
                                                               sites_AOO_grid_AOO_3[i,])
              sites3_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[3], "_", i), sites3_intersected_mapbiomas_)
              colnames(sites3_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites3_intersected_mapbiomas <- rbind(sites3_intersected_mapbiomas, sites3_intersected_mapbiomas_)
              sites3_intersected_mapbiomas_df <- sites3_intersected_mapbiomas
            }
          }
          
          if(length(UTM_zone) == 4){
            # CRS 1
            sites1 <- sites_AOO %>% filter(UTMzone == UTM_zone[1])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_1) <- CRS[1]
            sites1_sf <- st_as_sf(sites1)
            st_crs(sites1_sf) <- CRS[1]
            sites_AOO_grid_AOO_1quads <- as.data.frame(st_intersects(sites1_sf, st_as_sf(sites_AOO_grid_AOO_1)))
            if(length(which(duplicated(sites_AOO_grid_AOO_1quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_1quads <- sites_AOO_grid_AOO_1quads[-which(duplicated(sites_AOO_grid_AOO_1quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO_1[sites_AOO_grid_AOO_1quads$col.id,]
            sites_AOO_grid_AOO_1$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_1$ID))
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO_1[order(sites_AOO_grid_AOO_1$IDnumber),]
            sites_AOO_grid_AOO_1$Quad <- paste0(UTM_zone[1], "_", 1:nrow(sites_AOO_grid_AOO_1))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil1 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil1) <- CRS[1]
            
            # Intersectar Raster e coordenadas
            sites1_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_1)){
              sites1_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil1,
                                                               sites_AOO_grid_AOO_1[i,])
              sites1_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[1], "_", i), sites1_intersected_mapbiomas_)
              colnames(sites1_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites1_intersected_mapbiomas <- rbind(sites1_intersected_mapbiomas, sites1_intersected_mapbiomas_)
              sites1_intersected_mapbiomas_df <- sites1_intersected_mapbiomas
            }
            
            # CRS 2
            sites2 <- sites_AOO %>% filter(UTMzone == UTM_zone[2])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_2 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_2) <- CRS[2]
            sites2_sf <- st_as_sf(sites2)
            st_crs(sites2_sf) <- CRS[2]
            sites_AOO_grid_AOO_2quads <- as.data.frame(st_intersects(sites2_sf, st_as_sf(sites_AOO_grid_AOO_2)))
            if(length(which(duplicated(sites_AOO_grid_AOO_2quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_2quads <- sites_AOO_grid_AOO_2quads[-which(duplicated(sites_AOO_grid_AOO_2quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_2 <- sites_AOO_grid_AOO_2[sites_AOO_grid_AOO_2quads$col.id,]
            sites_AOO_grid_AOO_2$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_2$ID))
            sites_AOO_grid_AOO_2 <- sites_AOO_grid_AOO_2[order(sites_AOO_grid_AOO_2$IDnumber),]
            sites_AOO_grid_AOO_2$Quad <- paste0(UTM_zone[2], "_", 1:nrow(sites_AOO_grid_AOO_2))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil2 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil2) <- CRS[2]
            
            # Intersectar Raster e coordenadas
            sites2_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_2)){
              sites2_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil2,
                                                               sites_AOO_grid_AOO_2[i,])
              sites2_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[2], "_", i), sites2_intersected_mapbiomas_)
              colnames(sites2_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites2_intersected_mapbiomas <- rbind(sites2_intersected_mapbiomas, sites2_intersected_mapbiomas_)
              sites2_intersected_mapbiomas_df <- sites2_intersected_mapbiomas
            }
            
            # CRS 3
            sites3 <- sites_AOO %>% filter(UTMzone == UTM_zone[3])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_3 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_3) <- CRS[3]
            sites3_sf <- st_as_sf(sites3)
            st_crs(sites3_sf) <- CRS[3]
            sites_AOO_grid_AOO_3quads <- as.data.frame(st_intersects(sites3_sf, st_as_sf(sites_AOO_grid_AOO_3)))
            if(length(which(duplicated(sites_AOO_grid_AOO_3quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_3quads <- sites_AOO_grid_AOO_3quads[-which(duplicated(sites_AOO_grid_AOO_3quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_3 <- sites_AOO_grid_AOO_3[sites_AOO_grid_AOO_3quads$col.id,]
            sites_AOO_grid_AOO_3$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_3$ID))
            sites_AOO_grid_AOO_3 <- sites_AOO_grid_AOO_3[order(sites_AOO_grid_AOO_3$IDnumber),]
            sites_AOO_grid_AOO_3$Quad <- paste0(UTM_zone[3], "_", 1:nrow(sites_AOO_grid_AOO_3))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil3 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil3) <- CRS[3]
            
            # Intersectar Raster e coordenadas
            sites3_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_3)){
              sites3_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil3,
                                                               sites_AOO_grid_AOO_3[i,])
              sites3_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[3], "_", i), sites3_intersected_mapbiomas_)
              colnames(sites3_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites3_intersected_mapbiomas <- rbind(sites3_intersected_mapbiomas, sites3_intersected_mapbiomas_)
              sites3_intersected_mapbiomas_df <- sites3_intersected_mapbiomas
            }
            
            # CRS 4
            sites4 <- sites_AOO %>% filter(UTMzone == UTM_zone[4])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_4 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_4) <- CRS[4]
            sites4_sf <- st_as_sf(sites4)
            st_crs(sites4_sf) <- CRS[4]
            sites_AOO_grid_AOO_4quads <- as.data.frame(st_intersects(sites4_sf, st_as_sf(sites_AOO_grid_AOO_4)))
            if(length(which(duplicated(sites_AOO_grid_AOO_4quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_4quads <- sites_AOO_grid_AOO_4quads[-which(duplicated(sites_AOO_grid_AOO_4quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_4 <- sites_AOO_grid_AOO_4[sites_AOO_grid_AOO_4quads$col.id,]
            sites_AOO_grid_AOO_4$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_4$ID))
            sites_AOO_grid_AOO_4 <- sites_AOO_grid_AOO_4[order(sites_AOO_grid_AOO_4$IDnumber),]
            sites_AOO_grid_AOO_4$Quad <- paste0(UTM_zone[4], "_", 1:nrow(sites_AOO_grid_AOO_4))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil4 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil4) <- CRS[4]
            
            # Intersectar Raster e coordenadas
            sites4_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_4)){
              sites4_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil4,
                                                               sites_AOO_grid_AOO_4[i,])
              sites4_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[4], "_", i), sites4_intersected_mapbiomas_)
              colnames(sites4_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites4_intersected_mapbiomas <- rbind(sites4_intersected_mapbiomas, sites4_intersected_mapbiomas_)
              sites4_intersected_mapbiomas_df <- sites4_intersected_mapbiomas
            }
          }
          
          if(length(UTM_zone) == 5){
            # CRS 1
            sites1 <- sites_AOO %>% filter(UTMzone == UTM_zone[1])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_1) <- CRS[1]
            sites1_sf <- st_as_sf(sites1)
            st_crs(sites1_sf) <- CRS[1]
            sites_AOO_grid_AOO_1quads <- as.data.frame(st_intersects(sites1_sf, st_as_sf(sites_AOO_grid_AOO_1)))
            if(length(which(duplicated(sites_AOO_grid_AOO_1quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_1quads <- sites_AOO_grid_AOO_1quads[-which(duplicated(sites_AOO_grid_AOO_1quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO_1[sites_AOO_grid_AOO_1quads$col.id,]
            sites_AOO_grid_AOO_1$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_1$ID))
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO_1[order(sites_AOO_grid_AOO_1$IDnumber),]
            sites_AOO_grid_AOO_1$Quad <- paste0(UTM_zone[1], "_", 1:nrow(sites_AOO_grid_AOO_1))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil1 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil1) <- CRS[1]
            
            # Intersectar Raster e coordenadas
            sites1_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_1)){
              sites1_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil1,
                                                               sites_AOO_grid_AOO_1[i,])
              sites1_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[1], "_", i), sites1_intersected_mapbiomas_)
              colnames(sites1_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites1_intersected_mapbiomas <- rbind(sites1_intersected_mapbiomas, sites1_intersected_mapbiomas_)
              sites1_intersected_mapbiomas_df <- sites1_intersected_mapbiomas
            }
            
            # CRS 2
            sites2 <- sites_AOO %>% filter(UTMzone == UTM_zone[2])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_2 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_2) <- CRS[2]
            sites2_sf <- st_as_sf(sites2)
            st_crs(sites2_sf) <- CRS[2]
            sites_AOO_grid_AOO_2quads <- as.data.frame(st_intersects(sites2_sf, st_as_sf(sites_AOO_grid_AOO_2)))
            if(length(which(duplicated(sites_AOO_grid_AOO_2quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_2quads <- sites_AOO_grid_AOO_2quads[-which(duplicated(sites_AOO_grid_AOO_2quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_2 <- sites_AOO_grid_AOO_2[sites_AOO_grid_AOO_2quads$col.id,]
            sites_AOO_grid_AOO_2$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_2$ID))
            sites_AOO_grid_AOO_2 <- sites_AOO_grid_AOO_2[order(sites_AOO_grid_AOO_2$IDnumber),]
            sites_AOO_grid_AOO_2$Quad <- paste0(UTM_zone[2], "_", 1:nrow(sites_AOO_grid_AOO_2))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil2 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil2) <- CRS[2]
            
            # Intersectar Raster e coordenadas
            sites2_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_2)){
              sites2_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil2,
                                                               sites_AOO_grid_AOO_2[i,])
              sites2_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[2], "_", i), sites2_intersected_mapbiomas_)
              colnames(sites2_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites2_intersected_mapbiomas <- rbind(sites2_intersected_mapbiomas, sites2_intersected_mapbiomas_)
              sites2_intersected_mapbiomas_df <- sites2_intersected_mapbiomas
            }
            
            # CRS 3
            sites3 <- sites_AOO %>% filter(UTMzone == UTM_zone[3])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_3 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_3) <- CRS[3]
            sites3_sf <- st_as_sf(sites3)
            st_crs(sites3_sf) <- CRS[3]
            sites_AOO_grid_AOO_3quads <- as.data.frame(st_intersects(sites3_sf, st_as_sf(sites_AOO_grid_AOO_3)))
            if(length(which(duplicated(sites_AOO_grid_AOO_3quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_3quads <- sites_AOO_grid_AOO_3quads[-which(duplicated(sites_AOO_grid_AOO_3quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_3 <- sites_AOO_grid_AOO_3[sites_AOO_grid_AOO_3quads$col.id,]
            sites_AOO_grid_AOO_3$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_3$ID))
            sites_AOO_grid_AOO_3 <- sites_AOO_grid_AOO_3[order(sites_AOO_grid_AOO_3$IDnumber),]
            sites_AOO_grid_AOO_3$Quad <- paste0(UTM_zone[3], "_", 1:nrow(sites_AOO_grid_AOO_3))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil3 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil3) <- CRS[3]
            
            # Intersectar Raster e coordenadas
            sites3_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_3)){
              sites3_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil3,
                                                               sites_AOO_grid_AOO_3[i,])
              sites3_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[3], "_", i), sites3_intersected_mapbiomas_)
              colnames(sites3_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites3_intersected_mapbiomas <- rbind(sites3_intersected_mapbiomas, sites3_intersected_mapbiomas_)
              sites3_intersected_mapbiomas_df <- sites3_intersected_mapbiomas
            }
            
            # CRS 4
            sites4 <- sites_AOO %>% filter(UTMzone == UTM_zone[4])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_4 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_4) <- CRS[4]
            sites4_sf <- st_as_sf(sites4)
            st_crs(sites4_sf) <- CRS[4]
            sites_AOO_grid_AOO_4quads <- as.data.frame(st_intersects(sites4_sf, st_as_sf(sites_AOO_grid_AOO_4)))
            if(length(which(duplicated(sites_AOO_grid_AOO_4quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_4quads <- sites_AOO_grid_AOO_4quads[-which(duplicated(sites_AOO_grid_AOO_4quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_4 <- sites_AOO_grid_AOO_4[sites_AOO_grid_AOO_4quads$col.id,]
            sites_AOO_grid_AOO_4$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_4$ID))
            sites_AOO_grid_AOO_4 <- sites_AOO_grid_AOO_4[order(sites_AOO_grid_AOO_4$IDnumber),]
            sites_AOO_grid_AOO_4$Quad <- paste0(UTM_zone[4], "_", 1:nrow(sites_AOO_grid_AOO_4))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil4 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil4) <- CRS[4]
            
            # Intersectar Raster e coordenadas
            sites4_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_4)){
              sites4_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil4,
                                                               sites_AOO_grid_AOO_4[i,])
              sites4_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[4], "_", i), sites4_intersected_mapbiomas_)
              colnames(sites4_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites4_intersected_mapbiomas <- rbind(sites4_intersected_mapbiomas, sites4_intersected_mapbiomas_)
              sites4_intersected_mapbiomas_df <- sites4_intersected_mapbiomas
            }
            
            # CRS 5
            sites5 <- sites_AOO %>% filter(UTMzone == UTM_zone[5])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_5 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_5) <- CRS[5]
            sites5_sf <- st_as_sf(sites5)
            st_crs(sites5_sf) <- CRS[5]
            sites_AOO_grid_AOO_5quads <- as.data.frame(st_intersects(sites5_sf, st_as_sf(sites_AOO_grid_AOO_5)))
            if(length(which(duplicated(sites_AOO_grid_AOO_5quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_5quads <- sites_AOO_grid_AOO_5quads[-which(duplicated(sites_AOO_grid_AOO_5quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_5 <- sites_AOO_grid_AOO_5[sites_AOO_grid_AOO_5quads$col.id,]
            sites_AOO_grid_AOO_5$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_5$ID))
            sites_AOO_grid_AOO_5 <- sites_AOO_grid_AOO_5[order(sites_AOO_grid_AOO_5$IDnumber),]
            sites_AOO_grid_AOO_5$Quad <- paste0(UTM_zone[5], "_", 1:nrow(sites_AOO_grid_AOO_5))
            
            # Converter raster para Zona UTM/WGS85
            MapBiomas_Brazil5 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil5) <- CRS[5]
            
            # Intersectar Raster e coordenadas
            sites5_intersected_mapbiomas<-NULL
            for(i in 5:nrow(sites_AOO_grid_AOO_5)){
              sites5_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil5,
                                                               sites_AOO_grid_AOO_5[i,])
              sites5_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[5], "_", i), sites5_intersected_mapbiomas_)
              colnames(sites5_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites5_intersected_mapbiomas <- rbind(sites5_intersected_mapbiomas, sites5_intersected_mapbiomas_)
              sites5_intersected_mapbiomas_df <- sites5_intersected_mapbiomas
            }
          }
          
          if(length(UTM_zone) == 6){
            # CRS 1
            sites1 <- sites_AOO %>% filter(UTMzone == UTM_zone[1])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_1) <- CRS[1]
            sites1_sf <- st_as_sf(sites1)
            st_crs(sites1_sf) <- CRS[1]
            sites_AOO_grid_AOO_1quads <- as.data.frame(st_intersects(sites1_sf, st_as_sf(sites_AOO_grid_AOO_1)))
            if(length(which(duplicated(sites_AOO_grid_AOO_1quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_1quads <- sites_AOO_grid_AOO_1quads[-which(duplicated(sites_AOO_grid_AOO_1quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO_1[sites_AOO_grid_AOO_1quads$col.id,]
            sites_AOO_grid_AOO_1$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_1$ID))
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO_1[order(sites_AOO_grid_AOO_1$IDnumber),]
            sites_AOO_grid_AOO_1$Quad <- paste0(UTM_zone[1], "_", 1:nrow(sites_AOO_grid_AOO_1))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil1 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil1) <- CRS[1]
            
            # Intersectar Raster e coordenadas
            sites1_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_1)){
              sites1_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil1,
                                                               sites_AOO_grid_AOO_1[i,])
              sites1_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[1], "_", i), sites1_intersected_mapbiomas_)
              colnames(sites1_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites1_intersected_mapbiomas <- rbind(sites1_intersected_mapbiomas, sites1_intersected_mapbiomas_)
              sites1_intersected_mapbiomas_df <- sites1_intersected_mapbiomas
            }
            
            # CRS 2
            sites2 <- sites_AOO %>% filter(UTMzone == UTM_zone[2])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_2 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_2) <- CRS[2]
            sites2_sf <- st_as_sf(sites2)
            st_crs(sites2_sf) <- CRS[2]
            sites_AOO_grid_AOO_2quads <- as.data.frame(st_intersects(sites2_sf, st_as_sf(sites_AOO_grid_AOO_2)))
            if(length(which(duplicated(sites_AOO_grid_AOO_2quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_2quads <- sites_AOO_grid_AOO_2quads[-which(duplicated(sites_AOO_grid_AOO_2quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_2 <- sites_AOO_grid_AOO_2[sites_AOO_grid_AOO_2quads$col.id,]
            sites_AOO_grid_AOO_2$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_2$ID))
            sites_AOO_grid_AOO_2 <- sites_AOO_grid_AOO_2[order(sites_AOO_grid_AOO_2$IDnumber),]
            sites_AOO_grid_AOO_2$Quad <- paste0(UTM_zone[2], "_", 1:nrow(sites_AOO_grid_AOO_2))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil2 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil2) <- CRS[2]
            
            # Intersectar Raster e coordenadas
            sites2_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_2)){
              sites2_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil2,
                                                               sites_AOO_grid_AOO_2[i,])
              sites2_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[2], "_", i), sites2_intersected_mapbiomas_)
              colnames(sites2_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites2_intersected_mapbiomas <- rbind(sites2_intersected_mapbiomas, sites2_intersected_mapbiomas_)
              sites2_intersected_mapbiomas_df <- sites2_intersected_mapbiomas
            }
            
            # CRS 3
            sites3 <- sites_AOO %>% filter(UTMzone == UTM_zone[3])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_3 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_3) <- CRS[3]
            sites3_sf <- st_as_sf(sites3)
            st_crs(sites3_sf) <- CRS[3]
            sites_AOO_grid_AOO_3quads <- as.data.frame(st_intersects(sites3_sf, st_as_sf(sites_AOO_grid_AOO_3)))
            if(length(which(duplicated(sites_AOO_grid_AOO_3quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_3quads <- sites_AOO_grid_AOO_3quads[-which(duplicated(sites_AOO_grid_AOO_3quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_3 <- sites_AOO_grid_AOO_3[sites_AOO_grid_AOO_3quads$col.id,]
            sites_AOO_grid_AOO_3$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_3$ID))
            sites_AOO_grid_AOO_3 <- sites_AOO_grid_AOO_3[order(sites_AOO_grid_AOO_3$IDnumber),]
            sites_AOO_grid_AOO_3$Quad <- paste0(UTM_zone[3], "_", 1:nrow(sites_AOO_grid_AOO_3))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil3 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil3) <- CRS[3]
            
            # Intersectar Raster e coordenadas
            sites3_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_3)){
              sites3_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil3,
                                                               sites_AOO_grid_AOO_3[i,])
              sites3_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[3], "_", i), sites3_intersected_mapbiomas_)
              colnames(sites3_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites3_intersected_mapbiomas <- rbind(sites3_intersected_mapbiomas, sites3_intersected_mapbiomas_)
              sites3_intersected_mapbiomas_df <- sites3_intersected_mapbiomas
            }
            
            # CRS 4
            sites4 <- sites_AOO %>% filter(UTMzone == UTM_zone[4])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_4 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_4) <- CRS[4]
            sites4_sf <- st_as_sf(sites4)
            st_crs(sites4_sf) <- CRS[4]
            sites_AOO_grid_AOO_4quads <- as.data.frame(st_intersects(sites4_sf, st_as_sf(sites_AOO_grid_AOO_4)))
            if(length(which(duplicated(sites_AOO_grid_AOO_4quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_4quads <- sites_AOO_grid_AOO_4quads[-which(duplicated(sites_AOO_grid_AOO_4quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_4 <- sites_AOO_grid_AOO_4[sites_AOO_grid_AOO_4quads$col.id,]
            sites_AOO_grid_AOO_4$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_4$ID))
            sites_AOO_grid_AOO_4 <- sites_AOO_grid_AOO_4[order(sites_AOO_grid_AOO_4$IDnumber),]
            sites_AOO_grid_AOO_4$Quad <- paste0(UTM_zone[4], "_", 1:nrow(sites_AOO_grid_AOO_4))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil4 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil4) <- CRS[4]
            
            # Intersectar Raster e coordenadas
            sites4_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_4)){
              sites4_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil4,
                                                               sites_AOO_grid_AOO_4[i,])
              sites4_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[4], "_", i), sites4_intersected_mapbiomas_)
              colnames(sites4_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites4_intersected_mapbiomas <- rbind(sites4_intersected_mapbiomas, sites4_intersected_mapbiomas_)
              sites4_intersected_mapbiomas_df <- sites4_intersected_mapbiomas
            }
            
            # CRS 5
            sites5 <- sites_AOO %>% filter(UTMzone == UTM_zone[5])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_5 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_5) <- CRS[5]
            sites5_sf <- st_as_sf(sites5)
            st_crs(sites5_sf) <- CRS[5]
            sites_AOO_grid_AOO_5quads <- as.data.frame(st_intersects(sites5_sf, st_as_sf(sites_AOO_grid_AOO_5)))
            if(length(which(duplicated(sites_AOO_grid_AOO_5quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_5quads <- sites_AOO_grid_AOO_5quads[-which(duplicated(sites_AOO_grid_AOO_5quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_5 <- sites_AOO_grid_AOO_5[sites_AOO_grid_AOO_5quads$col.id,]
            sites_AOO_grid_AOO_5$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_5$ID))
            sites_AOO_grid_AOO_5 <- sites_AOO_grid_AOO_5[order(sites_AOO_grid_AOO_5$IDnumber),]
            sites_AOO_grid_AOO_5$Quad <- paste0(UTM_zone[5], "_", 1:nrow(sites_AOO_grid_AOO_5))
            
            # Converter raster para Zona UTM/WGS85
            MapBiomas_Brazil5 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil5) <- CRS[5]
            
            # Intersectar Raster e coordenadas
            sites5_intersected_mapbiomas<-NULL
            for(i in 5:nrow(sites_AOO_grid_AOO_5)){
              sites5_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil5,
                                                               sites_AOO_grid_AOO_5[i,])
              sites5_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[5], "_", i), sites5_intersected_mapbiomas_)
              colnames(sites5_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites5_intersected_mapbiomas <- rbind(sites5_intersected_mapbiomas, sites5_intersected_mapbiomas_)
              sites5_intersected_mapbiomas_df <- sites5_intersected_mapbiomas
            }
            
            # CRS 6
            sites6 <- sites_AOO %>% filter(UTMzone == UTM_zone[6])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_6 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_6) <- CRS[6]
            sites6_sf <- st_as_sf(sites6)
            st_crs(sites6_sf) <- CRS[6]
            sites_AOO_grid_AOO_6quads <- as.data.frame(st_intersects(sites6_sf, st_as_sf(sites_AOO_grid_AOO_6)))
            if(length(which(duplicated(sites_AOO_grid_AOO_6quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_6quads <- sites_AOO_grid_AOO_6quads[-which(duplicated(sites_AOO_grid_AOO_6quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_6 <- sites_AOO_grid_AOO_6[sites_AOO_grid_AOO_6quads$col.id,]
            sites_AOO_grid_AOO_6$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_6$ID))
            sites_AOO_grid_AOO_6 <- sites_AOO_grid_AOO_6 %>% arrange(IDnumber)
            sites_AOO_grid_AOO_6$Quad <- paste0(UTM_zone[6], "_", 1:nrow(sites_AOO_grid_AOO_6))
            
            # Converter raster para Zona UTM/WGS86
            MapBiomas_Brazil6 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil6) <- CRS[6]
            
            # Intersectar Raster e coordenadas
            sites6_intersected_mapbiomas<-NULL
            for(i in 6:nrow(sites_AOO_grid_AOO_6)){
              sites6_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil6,
                                                               sites_AOO_grid_AOO_6[i,])
              sites6_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[6], "_", i), sites6_intersected_mapbiomas_)
              colnames(sites6_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites6_intersected_mapbiomas <- rbind(sites6_intersected_mapbiomas, sites6_intersected_mapbiomas_)
              sites6_intersected_mapbiomas_df <- sites6_intersected_mapbiomas
            }
          }
          
          if(length(UTM_zone) == 7){
            # CRS 1
            sites1 <- sites_AOO %>% filter(UTMzone == UTM_zone[1])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_1) <- CRS[1]
            sites1_sf <- st_as_sf(sites1)
            st_crs(sites1_sf) <- CRS[1]
            sites_AOO_grid_AOO_1quads <- as.data.frame(st_intersects(sites1_sf, st_as_sf(sites_AOO_grid_AOO_1)))
            if(length(which(duplicated(sites_AOO_grid_AOO_1quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_1quads <- sites_AOO_grid_AOO_1quads[-which(duplicated(sites_AOO_grid_AOO_1quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO_1[sites_AOO_grid_AOO_1quads$col.id,]
            sites_AOO_grid_AOO_1$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_1$ID))
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO_1[order(sites_AOO_grid_AOO_1$IDnumber),]
            sites_AOO_grid_AOO_1$Quad <- paste0(UTM_zone[1], "_", 1:nrow(sites_AOO_grid_AOO_1))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil1 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil1) <- CRS[1]
            
            # Intersectar Raster e coordenadas
            sites1_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_1)){
              sites1_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil1,
                                                               sites_AOO_grid_AOO_1[i,])
              sites1_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[1], "_", i), sites1_intersected_mapbiomas_)
              colnames(sites1_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites1_intersected_mapbiomas <- rbind(sites1_intersected_mapbiomas, sites1_intersected_mapbiomas_)
              sites1_intersected_mapbiomas_df <- sites1_intersected_mapbiomas
            }
            
            # CRS 2
            sites2 <- sites_AOO %>% filter(UTMzone == UTM_zone[2])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_2 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_2) <- CRS[2]
            sites2_sf <- st_as_sf(sites2)
            st_crs(sites2_sf) <- CRS[2]
            sites_AOO_grid_AOO_2quads <- as.data.frame(st_intersects(sites2_sf, st_as_sf(sites_AOO_grid_AOO_2)))
            if(length(which(duplicated(sites_AOO_grid_AOO_2quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_2quads <- sites_AOO_grid_AOO_2quads[-which(duplicated(sites_AOO_grid_AOO_2quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_2 <- sites_AOO_grid_AOO_2[sites_AOO_grid_AOO_2quads$col.id,]
            sites_AOO_grid_AOO_2$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_2$ID))
            sites_AOO_grid_AOO_2 <- sites_AOO_grid_AOO_2[order(sites_AOO_grid_AOO_2$IDnumber),]
            sites_AOO_grid_AOO_2$Quad <- paste0(UTM_zone[2], "_", 1:nrow(sites_AOO_grid_AOO_2))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil2 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil2) <- CRS[2]
            
            # Intersectar Raster e coordenadas
            sites2_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_2)){
              sites2_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil2,
                                                               sites_AOO_grid_AOO_2[i,])
              sites2_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[2], "_", i), sites2_intersected_mapbiomas_)
              colnames(sites2_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites2_intersected_mapbiomas <- rbind(sites2_intersected_mapbiomas, sites2_intersected_mapbiomas_)
              sites2_intersected_mapbiomas_df <- sites2_intersected_mapbiomas
            }
            
            # CRS 3
            sites3 <- sites_AOO %>% filter(UTMzone == UTM_zone[3])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_3 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_3) <- CRS[3]
            sites3_sf <- st_as_sf(sites3)
            st_crs(sites3_sf) <- CRS[3]
            sites_AOO_grid_AOO_3quads <- as.data.frame(st_intersects(sites3_sf, st_as_sf(sites_AOO_grid_AOO_3)))
            if(length(which(duplicated(sites_AOO_grid_AOO_3quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_3quads <- sites_AOO_grid_AOO_3quads[-which(duplicated(sites_AOO_grid_AOO_3quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_3 <- sites_AOO_grid_AOO_3[sites_AOO_grid_AOO_3quads$col.id,]
            sites_AOO_grid_AOO_3$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_3$ID))
            sites_AOO_grid_AOO_3 <- sites_AOO_grid_AOO_3[order(sites_AOO_grid_AOO_3$IDnumber),]
            sites_AOO_grid_AOO_3$Quad <- paste0(UTM_zone[3], "_", 1:nrow(sites_AOO_grid_AOO_3))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil3 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil3) <- CRS[3]
            
            # Intersectar Raster e coordenadas
            sites3_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_3)){
              sites3_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil3,
                                                               sites_AOO_grid_AOO_3[i,])
              sites3_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[3], "_", i), sites3_intersected_mapbiomas_)
              colnames(sites3_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites3_intersected_mapbiomas <- rbind(sites3_intersected_mapbiomas, sites3_intersected_mapbiomas_)
              sites3_intersected_mapbiomas_df <- sites3_intersected_mapbiomas
            }
            
            # CRS 4
            sites4 <- sites_AOO %>% filter(UTMzone == UTM_zone[4])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_4 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_4) <- CRS[4]
            sites4_sf <- st_as_sf(sites4)
            st_crs(sites4_sf) <- CRS[4]
            sites_AOO_grid_AOO_4quads <- as.data.frame(st_intersects(sites4_sf, st_as_sf(sites_AOO_grid_AOO_4)))
            if(length(which(duplicated(sites_AOO_grid_AOO_4quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_4quads <- sites_AOO_grid_AOO_4quads[-which(duplicated(sites_AOO_grid_AOO_4quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_4 <- sites_AOO_grid_AOO_4[sites_AOO_grid_AOO_4quads$col.id,]
            sites_AOO_grid_AOO_4$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_4$ID))
            sites_AOO_grid_AOO_4 <- sites_AOO_grid_AOO_4[order(sites_AOO_grid_AOO_4$IDnumber),]
            sites_AOO_grid_AOO_4$Quad <- paste0(UTM_zone[4], "_", 1:nrow(sites_AOO_grid_AOO_4))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil4 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil4) <- CRS[4]
            
            # Intersectar Raster e coordenadas
            sites4_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_4)){
              sites4_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil4,
                                                               sites_AOO_grid_AOO_4[i,])
              sites4_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[4], "_", i), sites4_intersected_mapbiomas_)
              colnames(sites4_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites4_intersected_mapbiomas <- rbind(sites4_intersected_mapbiomas, sites4_intersected_mapbiomas_)
              sites4_intersected_mapbiomas_df <- sites4_intersected_mapbiomas
            }
            
            # CRS 5
            sites5 <- sites_AOO %>% filter(UTMzone == UTM_zone[5])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_5 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_5) <- CRS[5]
            sites5_sf <- st_as_sf(sites5)
            st_crs(sites5_sf) <- CRS[5]
            sites_AOO_grid_AOO_5quads <- as.data.frame(st_intersects(sites5_sf, st_as_sf(sites_AOO_grid_AOO_5)))
            if(length(which(duplicated(sites_AOO_grid_AOO_5quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_5quads <- sites_AOO_grid_AOO_5quads[-which(duplicated(sites_AOO_grid_AOO_5quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_5 <- sites_AOO_grid_AOO_5[sites_AOO_grid_AOO_5quads$col.id,]
            sites_AOO_grid_AOO_5$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_5$ID))
            sites_AOO_grid_AOO_5 <- sites_AOO_grid_AOO_5[order(sites_AOO_grid_AOO_5$IDnumber),]
            sites_AOO_grid_AOO_5$Quad <- paste0(UTM_zone[5], "_", 1:nrow(sites_AOO_grid_AOO_5))
            
            # Converter raster para Zona UTM/WGS85
            MapBiomas_Brazil5 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil5) <- CRS[5]
            
            # Intersectar Raster e coordenadas
            sites5_intersected_mapbiomas<-NULL
            for(i in 5:nrow(sites_AOO_grid_AOO_5)){
              sites5_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil5,
                                                               sites_AOO_grid_AOO_5[i,])
              sites5_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[5], "_", i), sites5_intersected_mapbiomas_)
              colnames(sites5_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites5_intersected_mapbiomas <- rbind(sites5_intersected_mapbiomas, sites5_intersected_mapbiomas_)
              sites5_intersected_mapbiomas_df <- sites5_intersected_mapbiomas
            }
            
            # CRS 6
            sites6 <- sites_AOO %>% filter(UTMzone == UTM_zone[6])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_6 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_6) <- CRS[6]
            sites6_sf <- st_as_sf(sites6)
            st_crs(sites6_sf) <- CRS[6]
            sites_AOO_grid_AOO_6quads <- as.data.frame(st_intersects(sites6_sf, st_as_sf(sites_AOO_grid_AOO_6)))
            if(length(which(duplicated(sites_AOO_grid_AOO_6quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_6quads <- sites_AOO_grid_AOO_6quads[-which(duplicated(sites_AOO_grid_AOO_6quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_6 <- sites_AOO_grid_AOO_6[sites_AOO_grid_AOO_6quads$col.id,]
            sites_AOO_grid_AOO_6$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_6$ID))
            sites_AOO_grid_AOO_6 <- sites_AOO_grid_AOO_6 %>% arrange(IDnumber)
            sites_AOO_grid_AOO_6$Quad <- paste0(UTM_zone[6], "_", 1:nrow(sites_AOO_grid_AOO_6))
            
            # Converter raster para Zona UTM/WGS86
            MapBiomas_Brazil6 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil6) <- CRS[6]
            
            # Intersectar Raster e coordenadas
            sites6_intersected_mapbiomas<-NULL
            for(i in 6:nrow(sites_AOO_grid_AOO_6)){
              sites6_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil6,
                                                               sites_AOO_grid_AOO_6[i,])
              sites6_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[6], "_", i), sites6_intersected_mapbiomas_)
              colnames(sites6_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites6_intersected_mapbiomas <- rbind(sites6_intersected_mapbiomas, sites6_intersected_mapbiomas_)
              sites6_intersected_mapbiomas_df <- sites6_intersected_mapbiomas
            }
            
            # CRS 7
            sites7 <- sites_AOO %>% filter(UTMzone == UTM_zone[7])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_7 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_7) <- CRS[7]
            sites7_sf <- st_as_sf(sites7)
            st_crs(sites7_sf) <- CRS[7]
            sites_AOO_grid_AOO_7quads <- as.data.frame(st_intersects(sites7_sf, st_as_sf(sites_AOO_grid_AOO_7)))
            if(length(which(duplicated(sites_AOO_grid_AOO_7quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_7quads <- sites_AOO_grid_AOO_7quads[-which(duplicated(sites_AOO_grid_AOO_7quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_7 <- sites_AOO_grid_AOO_7[sites_AOO_grid_AOO_7quads$col.id,]
            sites_AOO_grid_AOO_7$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_7$ID))
            sites_AOO_grid_AOO_7 <- sites_AOO_grid_AOO_7[order(sites_AOO_grid_AOO_7$IDnumber),]
            sites_AOO_grid_AOO_7$Quad <- paste0(UTM_zone[7], "_", 1:nrow(sites_AOO_grid_AOO_7))
            
            # Converter raster para Zona UTM/WGS87
            MapBiomas_Brazil7 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil7) <- CRS[7]
            
            # Intersectar Raster e coordenadas
            sites7_intersected_mapbiomas<-NULL
            for(i in 7:nrow(sites_AOO_grid_AOO_7)){
              sites7_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil7,
                                                               sites_AOO_grid_AOO_7[i,])
              sites7_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[7], "_", i), sites7_intersected_mapbiomas_)
              colnames(sites7_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites7_intersected_mapbiomas <- rbind(sites7_intersected_mapbiomas, sites7_intersected_mapbiomas_)
              sites7_intersected_mapbiomas_df <- sites7_intersected_mapbiomas
            }
          }
          
          if(length(UTM_zone) == 8){
            # CRS 1
            sites1 <- sites_AOO %>% filter(UTMzone == UTM_zone[1])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_1) <- CRS[1]
            sites1_sf <- st_as_sf(sites1)
            st_crs(sites1_sf) <- CRS[1]
            sites_AOO_grid_AOO_1quads <- as.data.frame(st_intersects(sites1_sf, st_as_sf(sites_AOO_grid_AOO_1)))
            if(length(which(duplicated(sites_AOO_grid_AOO_1quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_1quads <- sites_AOO_grid_AOO_1quads[-which(duplicated(sites_AOO_grid_AOO_1quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO_1[sites_AOO_grid_AOO_1quads$col.id,]
            sites_AOO_grid_AOO_1$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_1$ID))
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO_1[order(sites_AOO_grid_AOO_1$IDnumber),]
            sites_AOO_grid_AOO_1$Quad <- paste0(UTM_zone[1], "_", 1:nrow(sites_AOO_grid_AOO_1))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil1 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil1) <- CRS[1]
            
            # Intersectar Raster e coordenadas
            sites1_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_1)){
              sites1_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil1,
                                                               sites_AOO_grid_AOO_1[i,])
              sites1_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[1], "_", i), sites1_intersected_mapbiomas_)
              colnames(sites1_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites1_intersected_mapbiomas <- rbind(sites1_intersected_mapbiomas, sites1_intersected_mapbiomas_)
              sites1_intersected_mapbiomas_df <- sites1_intersected_mapbiomas
            }
            
            # CRS 2
            sites2 <- sites_AOO %>% filter(UTMzone == UTM_zone[2])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_2 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_2) <- CRS[2]
            sites2_sf <- st_as_sf(sites2)
            st_crs(sites2_sf) <- CRS[2]
            sites_AOO_grid_AOO_2quads <- as.data.frame(st_intersects(sites2_sf, st_as_sf(sites_AOO_grid_AOO_2)))
            if(length(which(duplicated(sites_AOO_grid_AOO_2quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_2quads <- sites_AOO_grid_AOO_2quads[-which(duplicated(sites_AOO_grid_AOO_2quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_2 <- sites_AOO_grid_AOO_2[sites_AOO_grid_AOO_2quads$col.id,]
            sites_AOO_grid_AOO_2$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_2$ID))
            sites_AOO_grid_AOO_2 <- sites_AOO_grid_AOO_2[order(sites_AOO_grid_AOO_2$IDnumber),]
            sites_AOO_grid_AOO_2$Quad <- paste0(UTM_zone[2], "_", 1:nrow(sites_AOO_grid_AOO_2))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil2 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil2) <- CRS[2]
            
            # Intersectar Raster e coordenadas
            sites2_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_2)){
              sites2_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil2,
                                                               sites_AOO_grid_AOO_2[i,])
              sites2_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[2], "_", i), sites2_intersected_mapbiomas_)
              colnames(sites2_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites2_intersected_mapbiomas <- rbind(sites2_intersected_mapbiomas, sites2_intersected_mapbiomas_)
              sites2_intersected_mapbiomas_df <- sites2_intersected_mapbiomas
            }
            
            # CRS 3
            sites3 <- sites_AOO %>% filter(UTMzone == UTM_zone[3])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_3 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_3) <- CRS[3]
            sites3_sf <- st_as_sf(sites3)
            st_crs(sites3_sf) <- CRS[3]
            sites_AOO_grid_AOO_3quads <- as.data.frame(st_intersects(sites3_sf, st_as_sf(sites_AOO_grid_AOO_3)))
            if(length(which(duplicated(sites_AOO_grid_AOO_3quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_3quads <- sites_AOO_grid_AOO_3quads[-which(duplicated(sites_AOO_grid_AOO_3quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_3 <- sites_AOO_grid_AOO_3[sites_AOO_grid_AOO_3quads$col.id,]
            sites_AOO_grid_AOO_3$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_3$ID))
            sites_AOO_grid_AOO_3 <- sites_AOO_grid_AOO_3[order(sites_AOO_grid_AOO_3$IDnumber),]
            sites_AOO_grid_AOO_3$Quad <- paste0(UTM_zone[3], "_", 1:nrow(sites_AOO_grid_AOO_3))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil3 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil3) <- CRS[3]
            
            # Intersectar Raster e coordenadas
            sites3_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_3)){
              sites3_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil3,
                                                               sites_AOO_grid_AOO_3[i,])
              sites3_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[3], "_", i), sites3_intersected_mapbiomas_)
              colnames(sites3_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites3_intersected_mapbiomas <- rbind(sites3_intersected_mapbiomas, sites3_intersected_mapbiomas_)
              sites3_intersected_mapbiomas_df <- sites3_intersected_mapbiomas
            }
            
            # CRS 4
            sites4 <- sites_AOO %>% filter(UTMzone == UTM_zone[4])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_4 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_4) <- CRS[4]
            sites4_sf <- st_as_sf(sites4)
            st_crs(sites4_sf) <- CRS[4]
            sites_AOO_grid_AOO_4quads <- as.data.frame(st_intersects(sites4_sf, st_as_sf(sites_AOO_grid_AOO_4)))
            if(length(which(duplicated(sites_AOO_grid_AOO_4quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_4quads <- sites_AOO_grid_AOO_4quads[-which(duplicated(sites_AOO_grid_AOO_4quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_4 <- sites_AOO_grid_AOO_4[sites_AOO_grid_AOO_4quads$col.id,]
            sites_AOO_grid_AOO_4$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_4$ID))
            sites_AOO_grid_AOO_4 <- sites_AOO_grid_AOO_4[order(sites_AOO_grid_AOO_4$IDnumber),]
            sites_AOO_grid_AOO_4$Quad <- paste0(UTM_zone[4], "_", 1:nrow(sites_AOO_grid_AOO_4))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil4 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil4) <- CRS[4]
            
            # Intersectar Raster e coordenadas
            sites4_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_4)){
              sites4_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil4,
                                                               sites_AOO_grid_AOO_4[i,])
              sites4_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[4], "_", i), sites4_intersected_mapbiomas_)
              colnames(sites4_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites4_intersected_mapbiomas <- rbind(sites4_intersected_mapbiomas, sites4_intersected_mapbiomas_)
              sites4_intersected_mapbiomas_df <- sites4_intersected_mapbiomas
            }
            
            # CRS 5
            sites5 <- sites_AOO %>% filter(UTMzone == UTM_zone[5])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_5 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_5) <- CRS[5]
            sites5_sf <- st_as_sf(sites5)
            st_crs(sites5_sf) <- CRS[5]
            sites_AOO_grid_AOO_5quads <- as.data.frame(st_intersects(sites5_sf, st_as_sf(sites_AOO_grid_AOO_5)))
            if(length(which(duplicated(sites_AOO_grid_AOO_5quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_5quads <- sites_AOO_grid_AOO_5quads[-which(duplicated(sites_AOO_grid_AOO_5quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_5 <- sites_AOO_grid_AOO_5[sites_AOO_grid_AOO_5quads$col.id,]
            sites_AOO_grid_AOO_5$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_5$ID))
            sites_AOO_grid_AOO_5 <- sites_AOO_grid_AOO_5[order(sites_AOO_grid_AOO_5$IDnumber),]
            sites_AOO_grid_AOO_5$Quad <- paste0(UTM_zone[5], "_", 1:nrow(sites_AOO_grid_AOO_5))
            
            # Converter raster para Zona UTM/WGS85
            MapBiomas_Brazil5 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil5) <- CRS[5]
            
            # Intersectar Raster e coordenadas
            sites5_intersected_mapbiomas<-NULL
            for(i in 5:nrow(sites_AOO_grid_AOO_5)){
              sites5_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil5,
                                                               sites_AOO_grid_AOO_5[i,])
              sites5_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[5], "_", i), sites5_intersected_mapbiomas_)
              colnames(sites5_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites5_intersected_mapbiomas <- rbind(sites5_intersected_mapbiomas, sites5_intersected_mapbiomas_)
              sites5_intersected_mapbiomas_df <- sites5_intersected_mapbiomas
            }
            
            # CRS 6
            sites6 <- sites_AOO %>% filter(UTMzone == UTM_zone[6])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_6 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_6) <- CRS[6]
            sites6_sf <- st_as_sf(sites6)
            st_crs(sites6_sf) <- CRS[6]
            sites_AOO_grid_AOO_6quads <- as.data.frame(st_intersects(sites6_sf, st_as_sf(sites_AOO_grid_AOO_6)))
            if(length(which(duplicated(sites_AOO_grid_AOO_6quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_6quads <- sites_AOO_grid_AOO_6quads[-which(duplicated(sites_AOO_grid_AOO_6quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_6 <- sites_AOO_grid_AOO_6[sites_AOO_grid_AOO_6quads$col.id,]
            sites_AOO_grid_AOO_6$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_6$ID))
            sites_AOO_grid_AOO_6 <- sites_AOO_grid_AOO_6 %>% arrange(IDnumber)
            sites_AOO_grid_AOO_6$Quad <- paste0(UTM_zone[6], "_", 1:nrow(sites_AOO_grid_AOO_6))
            
            # Converter raster para Zona UTM/WGS86
            MapBiomas_Brazil6 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil6) <- CRS[6]
            
            # Intersectar Raster e coordenadas
            sites6_intersected_mapbiomas<-NULL
            for(i in 6:nrow(sites_AOO_grid_AOO_6)){
              sites6_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil6,
                                                               sites_AOO_grid_AOO_6[i,])
              sites6_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[6], "_", i), sites6_intersected_mapbiomas_)
              colnames(sites6_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites6_intersected_mapbiomas <- rbind(sites6_intersected_mapbiomas, sites6_intersected_mapbiomas_)
              sites6_intersected_mapbiomas_df <- sites6_intersected_mapbiomas
            }
            
            # CRS 7
            sites7 <- sites_AOO %>% filter(UTMzone == UTM_zone[7])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_7 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_7) <- CRS[7]
            sites7_sf <- st_as_sf(sites7)
            st_crs(sites7_sf) <- CRS[7]
            sites_AOO_grid_AOO_7quads <- as.data.frame(st_intersects(sites7_sf, st_as_sf(sites_AOO_grid_AOO_7)))
            if(length(which(duplicated(sites_AOO_grid_AOO_7quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_7quads <- sites_AOO_grid_AOO_7quads[-which(duplicated(sites_AOO_grid_AOO_7quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_7 <- sites_AOO_grid_AOO_7[sites_AOO_grid_AOO_7quads$col.id,]
            sites_AOO_grid_AOO_7$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_7$ID))
            sites_AOO_grid_AOO_7 <- sites_AOO_grid_AOO_7[order(sites_AOO_grid_AOO_7$IDnumber),]
            sites_AOO_grid_AOO_7$Quad <- paste0(UTM_zone[7], "_", 1:nrow(sites_AOO_grid_AOO_7))
            
            # Converter raster para Zona UTM/WGS87
            MapBiomas_Brazil7 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil7) <- CRS[7]
            
            # Intersectar Raster e coordenadas
            sites7_intersected_mapbiomas<-NULL
            for(i in 7:nrow(sites_AOO_grid_AOO_7)){
              sites7_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil7,
                                                               sites_AOO_grid_AOO_7[i,])
              sites7_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[7], "_", i), sites7_intersected_mapbiomas_)
              colnames(sites7_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites7_intersected_mapbiomas <- rbind(sites7_intersected_mapbiomas, sites7_intersected_mapbiomas_)
              sites7_intersected_mapbiomas_df <- sites7_intersected_mapbiomas
            }
            
            # CRS 8
            sites8 <- sites_AOO %>% filter(UTMzone == UTM_zone[8])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_8 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_8) <- CRS[8]
            sites8_sf <- st_as_sf(sites8)
            st_crs(sites8_sf) <- CRS[8]
            sites_AOO_grid_AOO_8quads <- as.data.frame(st_intersects(sites8_sf, st_as_sf(sites_AOO_grid_AOO_8)))
            if(length(which(duplicated(sites_AOO_grid_AOO_8quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_8quads <- sites_AOO_grid_AOO_8quads[-which(duplicated(sites_AOO_grid_AOO_8quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_8 <- sites_AOO_grid_AOO_8[sites_AOO_grid_AOO_8quads$col.id,]
            sites_AOO_grid_AOO_8$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_8$ID))
            sites_AOO_grid_AOO_8 <- sites_AOO_grid_AOO_8[order(sites_AOO_grid_AOO_8$IDnumber),]
            sites_AOO_grid_AOO_8$Quad <- paste0(UTM_zone[8], "_", 1:nrow(sites_AOO_grid_AOO_8))
            
            # Converter raster para Zona UTM/WGS88
            MapBiomas_Brazil8 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil8) <- CRS[8]
            
            # Intersectar Raster e coordenadas
            sites8_intersected_mapbiomas<-NULL
            for(i in 8:nrow(sites_AOO_grid_AOO_8)){
              sites8_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil8,
                                                               sites_AOO_grid_AOO_8[i,])
              sites8_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[8], "_", i), sites8_intersected_mapbiomas_)
              colnames(sites8_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites8_intersected_mapbiomas <- rbind(sites8_intersected_mapbiomas, sites8_intersected_mapbiomas_)
              sites8_intersected_mapbiomas_df <- sites8_intersected_mapbiomas
            }
          }
          
          if(length(UTM_zone) == 9){
            # CRS 1
            sites1 <- sites_AOO %>% filter(UTMzone == UTM_zone[1])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_1) <- CRS[1]
            sites1_sf <- st_as_sf(sites1)
            st_crs(sites1_sf) <- CRS[1]
            sites_AOO_grid_AOO_1quads <- as.data.frame(st_intersects(sites1_sf, st_as_sf(sites_AOO_grid_AOO_1)))
            if(length(which(duplicated(sites_AOO_grid_AOO_1quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_1quads <- sites_AOO_grid_AOO_1quads[-which(duplicated(sites_AOO_grid_AOO_1quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO_1[sites_AOO_grid_AOO_1quads$col.id,]
            sites_AOO_grid_AOO_1$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_1$ID))
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO_1[order(sites_AOO_grid_AOO_1$IDnumber),]
            sites_AOO_grid_AOO_1$Quad <- paste0(UTM_zone[1], "_", 1:nrow(sites_AOO_grid_AOO_1))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil1 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil1) <- CRS[1]
            
            # Intersectar Raster e coordenadas
            sites1_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_1)){
              sites1_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil1,
                                                               sites_AOO_grid_AOO_1[i,])
              sites1_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[1], "_", i), sites1_intersected_mapbiomas_)
              colnames(sites1_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites1_intersected_mapbiomas <- rbind(sites1_intersected_mapbiomas, sites1_intersected_mapbiomas_)
              sites1_intersected_mapbiomas_df <- sites1_intersected_mapbiomas
            }
            
            # CRS 2
            sites2 <- sites_AOO %>% filter(UTMzone == UTM_zone[2])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_2 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_2) <- CRS[2]
            sites2_sf <- st_as_sf(sites2)
            st_crs(sites2_sf) <- CRS[2]
            sites_AOO_grid_AOO_2quads <- as.data.frame(st_intersects(sites2_sf, st_as_sf(sites_AOO_grid_AOO_2)))
            if(length(which(duplicated(sites_AOO_grid_AOO_2quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_2quads <- sites_AOO_grid_AOO_2quads[-which(duplicated(sites_AOO_grid_AOO_2quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_2 <- sites_AOO_grid_AOO_2[sites_AOO_grid_AOO_2quads$col.id,]
            sites_AOO_grid_AOO_2$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_2$ID))
            sites_AOO_grid_AOO_2 <- sites_AOO_grid_AOO_2[order(sites_AOO_grid_AOO_2$IDnumber),]
            sites_AOO_grid_AOO_2$Quad <- paste0(UTM_zone[2], "_", 1:nrow(sites_AOO_grid_AOO_2))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil2 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil2) <- CRS[2]
            
            # Intersectar Raster e coordenadas
            sites2_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_2)){
              sites2_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil2,
                                                               sites_AOO_grid_AOO_2[i,])
              sites2_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[2], "_", i), sites2_intersected_mapbiomas_)
              colnames(sites2_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites2_intersected_mapbiomas <- rbind(sites2_intersected_mapbiomas, sites2_intersected_mapbiomas_)
              sites2_intersected_mapbiomas_df <- sites2_intersected_mapbiomas
            }
            
            # CRS 3
            sites3 <- sites_AOO %>% filter(UTMzone == UTM_zone[3])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_3 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_3) <- CRS[3]
            sites3_sf <- st_as_sf(sites3)
            st_crs(sites3_sf) <- CRS[3]
            sites_AOO_grid_AOO_3quads <- as.data.frame(st_intersects(sites3_sf, st_as_sf(sites_AOO_grid_AOO_3)))
            if(length(which(duplicated(sites_AOO_grid_AOO_3quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_3quads <- sites_AOO_grid_AOO_3quads[-which(duplicated(sites_AOO_grid_AOO_3quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_3 <- sites_AOO_grid_AOO_3[sites_AOO_grid_AOO_3quads$col.id,]
            sites_AOO_grid_AOO_3$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_3$ID))
            sites_AOO_grid_AOO_3 <- sites_AOO_grid_AOO_3[order(sites_AOO_grid_AOO_3$IDnumber),]
            sites_AOO_grid_AOO_3$Quad <- paste0(UTM_zone[3], "_", 1:nrow(sites_AOO_grid_AOO_3))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil3 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil3) <- CRS[3]
            
            # Intersectar Raster e coordenadas
            sites3_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_3)){
              sites3_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil3,
                                                               sites_AOO_grid_AOO_3[i,])
              sites3_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[3], "_", i), sites3_intersected_mapbiomas_)
              colnames(sites3_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites3_intersected_mapbiomas <- rbind(sites3_intersected_mapbiomas, sites3_intersected_mapbiomas_)
              sites3_intersected_mapbiomas_df <- sites3_intersected_mapbiomas
            }
            
            # CRS 4
            sites4 <- sites_AOO %>% filter(UTMzone == UTM_zone[4])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_4 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_4) <- CRS[4]
            sites4_sf <- st_as_sf(sites4)
            st_crs(sites4_sf) <- CRS[4]
            sites_AOO_grid_AOO_4quads <- as.data.frame(st_intersects(sites4_sf, st_as_sf(sites_AOO_grid_AOO_4)))
            if(length(which(duplicated(sites_AOO_grid_AOO_4quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_4quads <- sites_AOO_grid_AOO_4quads[-which(duplicated(sites_AOO_grid_AOO_4quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_4 <- sites_AOO_grid_AOO_4[sites_AOO_grid_AOO_4quads$col.id,]
            sites_AOO_grid_AOO_4$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_4$ID))
            sites_AOO_grid_AOO_4 <- sites_AOO_grid_AOO_4[order(sites_AOO_grid_AOO_4$IDnumber),]
            sites_AOO_grid_AOO_4$Quad <- paste0(UTM_zone[4], "_", 1:nrow(sites_AOO_grid_AOO_4))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil4 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil4) <- CRS[4]
            
            # Intersectar Raster e coordenadas
            sites4_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_4)){
              sites4_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil4,
                                                               sites_AOO_grid_AOO_4[i,])
              sites4_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[4], "_", i), sites4_intersected_mapbiomas_)
              colnames(sites4_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites4_intersected_mapbiomas <- rbind(sites4_intersected_mapbiomas, sites4_intersected_mapbiomas_)
              sites4_intersected_mapbiomas_df <- sites4_intersected_mapbiomas
            }
            
            # CRS 5
            sites5 <- sites_AOO %>% filter(UTMzone == UTM_zone[5])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_5 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_5) <- CRS[5]
            sites5_sf <- st_as_sf(sites5)
            st_crs(sites5_sf) <- CRS[5]
            sites_AOO_grid_AOO_5quads <- as.data.frame(st_intersects(sites5_sf, st_as_sf(sites_AOO_grid_AOO_5)))
            if(length(which(duplicated(sites_AOO_grid_AOO_5quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_5quads <- sites_AOO_grid_AOO_5quads[-which(duplicated(sites_AOO_grid_AOO_5quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_5 <- sites_AOO_grid_AOO_5[sites_AOO_grid_AOO_5quads$col.id,]
            sites_AOO_grid_AOO_5$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_5$ID))
            sites_AOO_grid_AOO_5 <- sites_AOO_grid_AOO_5[order(sites_AOO_grid_AOO_5$IDnumber),]
            sites_AOO_grid_AOO_5$Quad <- paste0(UTM_zone[5], "_", 1:nrow(sites_AOO_grid_AOO_5))
            
            # Converter raster para Zona UTM/WGS85
            MapBiomas_Brazil5 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil5) <- CRS[5]
            
            # Intersectar Raster e coordenadas
            sites5_intersected_mapbiomas<-NULL
            for(i in 5:nrow(sites_AOO_grid_AOO_5)){
              sites5_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil5,
                                                               sites_AOO_grid_AOO_5[i,])
              sites5_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[5], "_", i), sites5_intersected_mapbiomas_)
              colnames(sites5_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites5_intersected_mapbiomas <- rbind(sites5_intersected_mapbiomas, sites5_intersected_mapbiomas_)
              sites5_intersected_mapbiomas_df <- sites5_intersected_mapbiomas
            }
            
            # CRS 6
            sites6 <- sites_AOO %>% filter(UTMzone == UTM_zone[6])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_6 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_6) <- CRS[6]
            sites6_sf <- st_as_sf(sites6)
            st_crs(sites6_sf) <- CRS[6]
            sites_AOO_grid_AOO_6quads <- as.data.frame(st_intersects(sites6_sf, st_as_sf(sites_AOO_grid_AOO_6)))
            if(length(which(duplicated(sites_AOO_grid_AOO_6quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_6quads <- sites_AOO_grid_AOO_6quads[-which(duplicated(sites_AOO_grid_AOO_6quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_6 <- sites_AOO_grid_AOO_6[sites_AOO_grid_AOO_6quads$col.id,]
            sites_AOO_grid_AOO_6$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_6$ID))
            sites_AOO_grid_AOO_6 <- sites_AOO_grid_AOO_6 %>% arrange(IDnumber)
            sites_AOO_grid_AOO_6$Quad <- paste0(UTM_zone[6], "_", 1:nrow(sites_AOO_grid_AOO_6))
            
            # Converter raster para Zona UTM/WGS86
            MapBiomas_Brazil6 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil6) <- CRS[6]
            
            # Intersectar Raster e coordenadas
            sites6_intersected_mapbiomas<-NULL
            for(i in 6:nrow(sites_AOO_grid_AOO_6)){
              sites6_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil6,
                                                               sites_AOO_grid_AOO_6[i,])
              sites6_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[6], "_", i), sites6_intersected_mapbiomas_)
              colnames(sites6_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites6_intersected_mapbiomas <- rbind(sites6_intersected_mapbiomas, sites6_intersected_mapbiomas_)
              sites6_intersected_mapbiomas_df <- sites6_intersected_mapbiomas
            }
            
            # CRS 7
            sites7 <- sites_AOO %>% filter(UTMzone == UTM_zone[7])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_7 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_7) <- CRS[7]
            sites7_sf <- st_as_sf(sites7)
            st_crs(sites7_sf) <- CRS[7]
            sites_AOO_grid_AOO_7quads <- as.data.frame(st_intersects(sites7_sf, st_as_sf(sites_AOO_grid_AOO_7)))
            if(length(which(duplicated(sites_AOO_grid_AOO_7quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_7quads <- sites_AOO_grid_AOO_7quads[-which(duplicated(sites_AOO_grid_AOO_7quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_7 <- sites_AOO_grid_AOO_7[sites_AOO_grid_AOO_7quads$col.id,]
            sites_AOO_grid_AOO_7$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_7$ID))
            sites_AOO_grid_AOO_7 <- sites_AOO_grid_AOO_7[order(sites_AOO_grid_AOO_7$IDnumber),]
            sites_AOO_grid_AOO_7$Quad <- paste0(UTM_zone[7], "_", 1:nrow(sites_AOO_grid_AOO_7))
            
            # Converter raster para Zona UTM/WGS87
            MapBiomas_Brazil7 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil7) <- CRS[7]
            
            # Intersectar Raster e coordenadas
            sites7_intersected_mapbiomas<-NULL
            for(i in 7:nrow(sites_AOO_grid_AOO_7)){
              sites7_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil7,
                                                               sites_AOO_grid_AOO_7[i,])
              sites7_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[7], "_", i), sites7_intersected_mapbiomas_)
              colnames(sites7_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites7_intersected_mapbiomas <- rbind(sites7_intersected_mapbiomas, sites7_intersected_mapbiomas_)
              sites7_intersected_mapbiomas_df <- sites7_intersected_mapbiomas
            }
            
            # CRS 8
            sites8 <- sites_AOO %>% filter(UTMzone == UTM_zone[8])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_8 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_8) <- CRS[8]
            sites8_sf <- st_as_sf(sites8)
            st_crs(sites8_sf) <- CRS[8]
            sites_AOO_grid_AOO_8quads <- as.data.frame(st_intersects(sites8_sf, st_as_sf(sites_AOO_grid_AOO_8)))
            if(length(which(duplicated(sites_AOO_grid_AOO_8quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_8quads <- sites_AOO_grid_AOO_8quads[-which(duplicated(sites_AOO_grid_AOO_8quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_8 <- sites_AOO_grid_AOO_8[sites_AOO_grid_AOO_8quads$col.id,]
            sites_AOO_grid_AOO_8$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_8$ID))
            sites_AOO_grid_AOO_8 <- sites_AOO_grid_AOO_8[order(sites_AOO_grid_AOO_8$IDnumber),]
            sites_AOO_grid_AOO_8$Quad <- paste0(UTM_zone[8], "_", 1:nrow(sites_AOO_grid_AOO_8))
            
            # Converter raster para Zona UTM/WGS88
            MapBiomas_Brazil8 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil8) <- CRS[8]
            
            # Intersectar Raster e coordenadas
            sites8_intersected_mapbiomas<-NULL
            for(i in 8:nrow(sites_AOO_grid_AOO_8)){
              sites8_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil8,
                                                               sites_AOO_grid_AOO_8[i,])
              sites8_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[8], "_", i), sites8_intersected_mapbiomas_)
              colnames(sites8_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites8_intersected_mapbiomas <- rbind(sites8_intersected_mapbiomas, sites8_intersected_mapbiomas_)
              sites8_intersected_mapbiomas_df <- sites8_intersected_mapbiomas
            }
            
            # CRS 9
            sites9 <- sites_AOO %>% filter(UTMzone == UTM_zone[9])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_9 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_9) <- CRS[9]
            sites9_sf <- st_as_sf(sites9)
            st_crs(sites9_sf) <- CRS[9]
            sites_AOO_grid_AOO_9quads <- as.data.frame(st_intersects(sites9_sf, st_as_sf(sites_AOO_grid_AOO_9)))
            if(length(which(duplicated(sites_AOO_grid_AOO_9quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_9quads <- sites_AOO_grid_AOO_9quads[-which(duplicated(sites_AOO_grid_AOO_9quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_9 <- sites_AOO_grid_AOO_9[sites_AOO_grid_AOO_9quads$col.id,]
            sites_AOO_grid_AOO_9$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_9$ID))
            sites_AOO_grid_AOO_9 <- sites_AOO_grid_AOO_9[order(sites_AOO_grid_AOO_9$IDnumber),]
            sites_AOO_grid_AOO_9$Quad <- paste0(UTM_zone[9], "_", 1:nrow(sites_AOO_grid_AOO_9))
            
            # Converter raster para Zona UTM/WGS99
            MapBiomas_Brazil9 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil9) <- CRS[9]
            
            # Intersectar Raster e coordenadas
            sites9_intersected_mapbiomas<-NULL
            for(i in 9:nrow(sites_AOO_grid_AOO_9)){
              sites9_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil9,
                                                               sites_AOO_grid_AOO_9[i,])
              sites9_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[9], "_", i), sites9_intersected_mapbiomas_)
              colnames(sites9_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites9_intersected_mapbiomas <- rbind(sites9_intersected_mapbiomas, sites9_intersected_mapbiomas_)
              sites9_intersected_mapbiomas_df <- sites9_intersected_mapbiomas
            }
          }
          
          if(length(UTM_zone) == 10){
            # CRS 1
            sites1 <- sites_AOO %>% filter(UTMzone == UTM_zone[1])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_1) <- CRS[1]
            sites1_sf <- st_as_sf(sites1)
            st_crs(sites1_sf) <- CRS[1]
            sites_AOO_grid_AOO_1quads <- as.data.frame(st_intersects(sites1_sf, st_as_sf(sites_AOO_grid_AOO_1)))
            if(length(which(duplicated(sites_AOO_grid_AOO_1quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_1quads <- sites_AOO_grid_AOO_1quads[-which(duplicated(sites_AOO_grid_AOO_1quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO_1[sites_AOO_grid_AOO_1quads$col.id,]
            sites_AOO_grid_AOO_1$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_1$ID))
            sites_AOO_grid_AOO_1 <- sites_AOO_grid_AOO_1[order(sites_AOO_grid_AOO_1$IDnumber),]
            sites_AOO_grid_AOO_1$Quad <- paste0(UTM_zone[1], "_", 1:nrow(sites_AOO_grid_AOO_1))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil1 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil1) <- CRS[1]
            
            # Intersectar Raster e coordenadas
            sites1_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_1)){
              sites1_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil1,
                                                               sites_AOO_grid_AOO_1[i,])
              sites1_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[1], "_", i), sites1_intersected_mapbiomas_)
              colnames(sites1_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites1_intersected_mapbiomas <- rbind(sites1_intersected_mapbiomas, sites1_intersected_mapbiomas_)
              sites1_intersected_mapbiomas_df <- sites1_intersected_mapbiomas
            }
            
            # CRS 2
            sites2 <- sites_AOO %>% filter(UTMzone == UTM_zone[2])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_2 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_2) <- CRS[2]
            sites2_sf <- st_as_sf(sites2)
            st_crs(sites2_sf) <- CRS[2]
            sites_AOO_grid_AOO_2quads <- as.data.frame(st_intersects(sites2_sf, st_as_sf(sites_AOO_grid_AOO_2)))
            if(length(which(duplicated(sites_AOO_grid_AOO_2quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_2quads <- sites_AOO_grid_AOO_2quads[-which(duplicated(sites_AOO_grid_AOO_2quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_2 <- sites_AOO_grid_AOO_2[sites_AOO_grid_AOO_2quads$col.id,]
            sites_AOO_grid_AOO_2$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_2$ID))
            sites_AOO_grid_AOO_2 <- sites_AOO_grid_AOO_2[order(sites_AOO_grid_AOO_2$IDnumber),]
            sites_AOO_grid_AOO_2$Quad <- paste0(UTM_zone[2], "_", 1:nrow(sites_AOO_grid_AOO_2))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil2 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil2) <- CRS[2]
            
            # Intersectar Raster e coordenadas
            sites2_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_2)){
              sites2_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil2,
                                                               sites_AOO_grid_AOO_2[i,])
              sites2_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[2], "_", i), sites2_intersected_mapbiomas_)
              colnames(sites2_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites2_intersected_mapbiomas <- rbind(sites2_intersected_mapbiomas, sites2_intersected_mapbiomas_)
              sites2_intersected_mapbiomas_df <- sites2_intersected_mapbiomas
            }
            
            # CRS 3
            sites3 <- sites_AOO %>% filter(UTMzone == UTM_zone[3])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_3 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_3) <- CRS[3]
            sites3_sf <- st_as_sf(sites3)
            st_crs(sites3_sf) <- CRS[3]
            sites_AOO_grid_AOO_3quads <- as.data.frame(st_intersects(sites3_sf, st_as_sf(sites_AOO_grid_AOO_3)))
            if(length(which(duplicated(sites_AOO_grid_AOO_3quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_3quads <- sites_AOO_grid_AOO_3quads[-which(duplicated(sites_AOO_grid_AOO_3quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_3 <- sites_AOO_grid_AOO_3[sites_AOO_grid_AOO_3quads$col.id,]
            sites_AOO_grid_AOO_3$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_3$ID))
            sites_AOO_grid_AOO_3 <- sites_AOO_grid_AOO_3[order(sites_AOO_grid_AOO_3$IDnumber),]
            sites_AOO_grid_AOO_3$Quad <- paste0(UTM_zone[3], "_", 1:nrow(sites_AOO_grid_AOO_3))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil3 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil3) <- CRS[3]
            
            # Intersectar Raster e coordenadas
            sites3_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_3)){
              sites3_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil3,
                                                               sites_AOO_grid_AOO_3[i,])
              sites3_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[3], "_", i), sites3_intersected_mapbiomas_)
              colnames(sites3_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites3_intersected_mapbiomas <- rbind(sites3_intersected_mapbiomas, sites3_intersected_mapbiomas_)
              sites3_intersected_mapbiomas_df <- sites3_intersected_mapbiomas
            }
            
            # CRS 4
            sites4 <- sites_AOO %>% filter(UTMzone == UTM_zone[4])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_4 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_4) <- CRS[4]
            sites4_sf <- st_as_sf(sites4)
            st_crs(sites4_sf) <- CRS[4]
            sites_AOO_grid_AOO_4quads <- as.data.frame(st_intersects(sites4_sf, st_as_sf(sites_AOO_grid_AOO_4)))
            if(length(which(duplicated(sites_AOO_grid_AOO_4quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_4quads <- sites_AOO_grid_AOO_4quads[-which(duplicated(sites_AOO_grid_AOO_4quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_4 <- sites_AOO_grid_AOO_4[sites_AOO_grid_AOO_4quads$col.id,]
            sites_AOO_grid_AOO_4$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_4$ID))
            sites_AOO_grid_AOO_4 <- sites_AOO_grid_AOO_4[order(sites_AOO_grid_AOO_4$IDnumber),]
            sites_AOO_grid_AOO_4$Quad <- paste0(UTM_zone[4], "_", 1:nrow(sites_AOO_grid_AOO_4))
            
            # Converter raster para Zona UTM/WGS84
            MapBiomas_Brazil4 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil4) <- CRS[4]
            
            # Intersectar Raster e coordenadas
            sites4_intersected_mapbiomas<-NULL
            for(i in 1:nrow(sites_AOO_grid_AOO_4)){
              sites4_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil4,
                                                               sites_AOO_grid_AOO_4[i,])
              sites4_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[4], "_", i), sites4_intersected_mapbiomas_)
              colnames(sites4_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites4_intersected_mapbiomas <- rbind(sites4_intersected_mapbiomas, sites4_intersected_mapbiomas_)
              sites4_intersected_mapbiomas_df <- sites4_intersected_mapbiomas
            }
            
            # CRS 5
            sites5 <- sites_AOO %>% filter(UTMzone == UTM_zone[5])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_5 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_5) <- CRS[5]
            sites5_sf <- st_as_sf(sites5)
            st_crs(sites5_sf) <- CRS[5]
            sites_AOO_grid_AOO_5quads <- as.data.frame(st_intersects(sites5_sf, st_as_sf(sites_AOO_grid_AOO_5)))
            if(length(which(duplicated(sites_AOO_grid_AOO_5quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_5quads <- sites_AOO_grid_AOO_5quads[-which(duplicated(sites_AOO_grid_AOO_5quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_5 <- sites_AOO_grid_AOO_5[sites_AOO_grid_AOO_5quads$col.id,]
            sites_AOO_grid_AOO_5$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_5$ID))
            sites_AOO_grid_AOO_5 <- sites_AOO_grid_AOO_5[order(sites_AOO_grid_AOO_5$IDnumber),]
            sites_AOO_grid_AOO_5$Quad <- paste0(UTM_zone[5], "_", 1:nrow(sites_AOO_grid_AOO_5))
            
            # Converter raster para Zona UTM/WGS85
            MapBiomas_Brazil5 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil5) <- CRS[5]
            
            # Intersectar Raster e coordenadas
            sites5_intersected_mapbiomas<-NULL
            for(i in 5:nrow(sites_AOO_grid_AOO_5)){
              sites5_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil5,
                                                               sites_AOO_grid_AOO_5[i,])
              sites5_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[5], "_", i), sites5_intersected_mapbiomas_)
              colnames(sites5_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites5_intersected_mapbiomas <- rbind(sites5_intersected_mapbiomas, sites5_intersected_mapbiomas_)
              sites5_intersected_mapbiomas_df <- sites5_intersected_mapbiomas
            }
            
            # CRS 6
            sites6 <- sites_AOO %>% filter(UTMzone == UTM_zone[6])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_6 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_6) <- CRS[6]
            sites6_sf <- st_as_sf(sites6)
            st_crs(sites6_sf) <- CRS[6]
            sites_AOO_grid_AOO_6quads <- as.data.frame(st_intersects(sites6_sf, st_as_sf(sites_AOO_grid_AOO_6)))
            if(length(which(duplicated(sites_AOO_grid_AOO_6quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_6quads <- sites_AOO_grid_AOO_6quads[-which(duplicated(sites_AOO_grid_AOO_6quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_6 <- sites_AOO_grid_AOO_6[sites_AOO_grid_AOO_6quads$col.id,]
            sites_AOO_grid_AOO_6$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_6$ID))
            sites_AOO_grid_AOO_6 <- sites_AOO_grid_AOO_6 %>% arrange(IDnumber)
            sites_AOO_grid_AOO_6$Quad <- paste0(UTM_zone[6], "_", 1:nrow(sites_AOO_grid_AOO_6))
            
            # Converter raster para Zona UTM/WGS86
            MapBiomas_Brazil6 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil6) <- CRS[6]
            
            # Intersectar Raster e coordenadas
            sites6_intersected_mapbiomas<-NULL
            for(i in 6:nrow(sites_AOO_grid_AOO_6)){
              sites6_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil6,
                                                               sites_AOO_grid_AOO_6[i,])
              sites6_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[6], "_", i), sites6_intersected_mapbiomas_)
              colnames(sites6_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites6_intersected_mapbiomas <- rbind(sites6_intersected_mapbiomas, sites6_intersected_mapbiomas_)
              sites6_intersected_mapbiomas_df <- sites6_intersected_mapbiomas
            }
            
            # CRS 7
            sites7 <- sites_AOO %>% filter(UTMzone == UTM_zone[7])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_7 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_7) <- CRS[7]
            sites7_sf <- st_as_sf(sites7)
            st_crs(sites7_sf) <- CRS[7]
            sites_AOO_grid_AOO_7quads <- as.data.frame(st_intersects(sites7_sf, st_as_sf(sites_AOO_grid_AOO_7)))
            if(length(which(duplicated(sites_AOO_grid_AOO_7quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_7quads <- sites_AOO_grid_AOO_7quads[-which(duplicated(sites_AOO_grid_AOO_7quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_7 <- sites_AOO_grid_AOO_7[sites_AOO_grid_AOO_7quads$col.id,]
            sites_AOO_grid_AOO_7$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_7$ID))
            sites_AOO_grid_AOO_7 <- sites_AOO_grid_AOO_7[order(sites_AOO_grid_AOO_7$IDnumber),]
            sites_AOO_grid_AOO_7$Quad <- paste0(UTM_zone[7], "_", 1:nrow(sites_AOO_grid_AOO_7))
            
            # Converter raster para Zona UTM/WGS87
            MapBiomas_Brazil7 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil7) <- CRS[7]
            
            # Intersectar Raster e coordenadas
            sites7_intersected_mapbiomas<-NULL
            for(i in 7:nrow(sites_AOO_grid_AOO_7)){
              sites7_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil7,
                                                               sites_AOO_grid_AOO_7[i,])
              sites7_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[7], "_", i), sites7_intersected_mapbiomas_)
              colnames(sites7_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites7_intersected_mapbiomas <- rbind(sites7_intersected_mapbiomas, sites7_intersected_mapbiomas_)
              sites7_intersected_mapbiomas_df <- sites7_intersected_mapbiomas
            }
            
            # CRS 8
            sites8 <- sites_AOO %>% filter(UTMzone == UTM_zone[8])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_8 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_8) <- CRS[8]
            sites8_sf <- st_as_sf(sites8)
            st_crs(sites8_sf) <- CRS[8]
            sites_AOO_grid_AOO_8quads <- as.data.frame(st_intersects(sites8_sf, st_as_sf(sites_AOO_grid_AOO_8)))
            if(length(which(duplicated(sites_AOO_grid_AOO_8quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_8quads <- sites_AOO_grid_AOO_8quads[-which(duplicated(sites_AOO_grid_AOO_8quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_8 <- sites_AOO_grid_AOO_8[sites_AOO_grid_AOO_8quads$col.id,]
            sites_AOO_grid_AOO_8$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_8$ID))
            sites_AOO_grid_AOO_8 <- sites_AOO_grid_AOO_8[order(sites_AOO_grid_AOO_8$IDnumber),]
            sites_AOO_grid_AOO_8$Quad <- paste0(UTM_zone[8], "_", 1:nrow(sites_AOO_grid_AOO_8))
            
            # Converter raster para Zona UTM/WGS88
            MapBiomas_Brazil8 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil8) <- CRS[8]
            
            # Intersectar Raster e coordenadas
            sites8_intersected_mapbiomas<-NULL
            for(i in 8:nrow(sites_AOO_grid_AOO_8)){
              sites8_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil8,
                                                               sites_AOO_grid_AOO_8[i,])
              sites8_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[8], "_", i), sites8_intersected_mapbiomas_)
              colnames(sites8_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites8_intersected_mapbiomas <- rbind(sites8_intersected_mapbiomas, sites8_intersected_mapbiomas_)
              sites8_intersected_mapbiomas_df <- sites8_intersected_mapbiomas
            }
            
            # CRS 9
            sites9 <- sites_AOO %>% filter(UTMzone == UTM_zone[9])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_9 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_9) <- CRS[9]
            sites9_sf <- st_as_sf(sites9)
            st_crs(sites9_sf) <- CRS[9]
            sites_AOO_grid_AOO_9quads <- as.data.frame(st_intersects(sites9_sf, st_as_sf(sites_AOO_grid_AOO_9)))
            if(length(which(duplicated(sites_AOO_grid_AOO_9quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_9quads <- sites_AOO_grid_AOO_9quads[-which(duplicated(sites_AOO_grid_AOO_9quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_9 <- sites_AOO_grid_AOO_9[sites_AOO_grid_AOO_9quads$col.id,]
            sites_AOO_grid_AOO_9$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_9$ID))
            sites_AOO_grid_AOO_9 <- sites_AOO_grid_AOO_9[order(sites_AOO_grid_AOO_9$IDnumber),]
            sites_AOO_grid_AOO_9$Quad <- paste0(UTM_zone[9], "_", 1:nrow(sites_AOO_grid_AOO_9))
            
            # Converter raster para Zona UTM/WGS99
            MapBiomas_Brazil9 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil9) <- CRS[9]
            
            # Intersectar Raster e coordenadas
            sites9_intersected_mapbiomas<-NULL
            for(i in 9:nrow(sites_AOO_grid_AOO_9)){
              sites9_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil9,
                                                               sites_AOO_grid_AOO_9[i,])
              sites9_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[9], "_", i), sites9_intersected_mapbiomas_)
              colnames(sites9_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites9_intersected_mapbiomas <- rbind(sites9_intersected_mapbiomas, sites9_intersected_mapbiomas_)
              sites9_intersected_mapbiomas_df <- sites9_intersected_mapbiomas
            }
            
            # CRS 10
            sites10 <- sites_AOO %>% filter(UTMzone == UTM_zone[10])
            
            # Intersectar coordenadas e Grid
            sites_AOO_grid_AOO_10 <- sites_AOO_grid_AOO
            crs(sites_AOO_grid_AOO_10) <- CRS[10]
            sites10_sf <- st_as_sf(sites10)
            st_crs(sites10_sf) <- CRS[10]
            sites_AOO_grid_AOO_10quads <- as.data.frame(st_intersects(sites10_sf, st_as_sf(sites_AOO_grid_AOO_10)))
            if(length(which(duplicated(sites_AOO_grid_AOO_10quads$col.id), TRUE)) == 0){} else{
              sites_AOO_grid_AOO_10quads <- sites_AOO_grid_AOO_10quads[-which(duplicated(sites_AOO_grid_AOO_10quads$col.id), TRUE),]
            }
            sites_AOO_grid_AOO_10 <- sites_AOO_grid_AOO_10[sites_AOO_grid_AOO_10quads$col.id,]
            sites_AOO_grid_AOO_10$IDnumber <- as.numeric(sub("ID", "", sites_AOO_grid_AOO_10$ID))
            sites_AOO_grid_AOO_10 <- sites_AOO_grid_AOO_10[order(sites_AOO_grid_AOO_10$IDnumber),]
            sites_AOO_grid_AOO_10$Quad <- paste0(UTM_zone[10], "_", 1:nrow(sites_AOO_grid_AOO_10))
            
            # Converter raster para Zona UTM/WGS1010
            MapBiomas_Brazil10 <- MapBiomas_Brazil
            crs(MapBiomas_Brazil10) <- CRS[10]
            
            # Intersectar Raster e coordenadas
            sites10_intersected_mapbiomas<-NULL
            for(i in 10:nrow(sites_AOO_grid_AOO_10)){
              sites10_intersected_mapbiomas_ <- raster::extract(MapBiomas_Brazil10,
                                                                sites_AOO_grid_AOO_10[i,])
              sites10_intersected_mapbiomas_ <- data.frame(QuadAOO = paste0(UTM_zone[10], "_", i), sites10_intersected_mapbiomas_)
              colnames(sites10_intersected_mapbiomas_) <- c("QuadAOO", "AOO_total")
              sites10_intersected_mapbiomas <- rbind(sites10_intersected_mapbiomas, sites10_intersected_mapbiomas_)
              sites10_intersected_mapbiomas_df <- sites10_intersected_mapbiomas
            }
          }
          
          # Agregação de objetos de diferentes CRSs ####
          if(length(UTM_zone)==1){
            crs(sites_AOO_grid_AOO_1)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            sites_intersected_mapbiomas_df <- sites1_intersected_mapbiomas_df
            sites_aggregated_area_km2 <- length(sites_grid_AOO)*4
            sites_aggregated_area_ha <- length(sites_grid_AOO)*4*100
            AOO_km2 <- length(sites_AOO_grid_AOO_1)*4
            AOO_ha <- length(sites_AOO_grid_AOO_1)*4*100
            
            # # Exportando shapefile AOO
            # shapefile(sites_AOO_grid_AOO_1, paste0(getwd(), "/AOO ", ESPECIE, ".shp"), overwrite = T)
            
            # Exportando shapefile AOO_QuadOfGrid
            shapefile(
              
              sites_AOO_grid_AOO_1,
              paste0(
                
                sub("Packages/CNCFloraR", "", getwd()),
                "/CNCFlora_data/outputs/shapefiles results/AOO_QuadOfGrid/",
                ESPECIE,
                ".shp"
                
              ),
              overwrite = T
              
            )
            
            # if(area_EOO_km2 == 0){} else {
            #
            #   # EOO
            #   sites_EOO<-gConvexHull(sites)
            #   crs(sites_EOO)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            #   shapefile(sites_EOO, paste0(getwd(), "/EOO ", ESPECIE, ".shp"), overwrite=T)
            #
            #   # EOO Buffer
            #   EOOcontorno <- st_cast(st_as_sf(sites_EOO), 'MULTILINESTRING')
            #   EOOcontorno_buffer <- st_buffer(EOOcontorno, dist=0.05)
            #   st_crs(EOOcontorno_buffer)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            #   st_write(EOOcontorno_buffer, paste0(getwd(), "/EOO-buffer ", ESPECIE, ".shp"), append = F, quiet = T)
            #
            # }
            
          }
          
          if(length(UTM_zone)==2){
            crs(sites_AOO_grid_AOO_1)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_2)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            sites_AOO_grid_AOO_1$Quad <- paste0(UTM_zone[1], "_", order(sites_AOO_grid_AOO_1$IDnumber))
            sites_AOO_grid_AOO_2$Quad <- paste0(UTM_zone[2], "_", order(sites_AOO_grid_AOO_2$IDnumber))
            sites_grid_AOO <- raster::union(sites_AOO_grid_AOO_1, sites_AOO_grid_AOO_2)
            sites_intersected_mapbiomas_df <- rbind(sites1_intersected_mapbiomas_df, sites2_intersected_mapbiomas_df)
            sites_aggregated_area_km2 <- length(sites_grid_AOO)*4
            sites_aggregated_area_ha <- length(sites_grid_AOO)*4*100
            AOO_km2 <- (length(sites_AOO_grid_AOO_1) +
                          length(sites_AOO_grid_AOO_2))*4
            AOO_ha <- (length(sites_AOO_grid_AOO_1) +
                         length(sites_AOO_grid_AOO_2))*4*100
            
            # # Exportando shapefile AOO
            # shapefile(sites_grid_AOO, paste0(getwd(), "/AOO ", ESPECIE, ".shp"), overwrite = T)
            
            # Exportando shapefile AOO_QuadOfGrid
            shapefile(
              
              sites_grid_AOO,
              paste0(
                
                sub("Packages/CNCFloraR", "", getwd()),
                "/CNCFlora_data/outputs/shapefiles results/AOO_QuadOfGrid/",
                ESPECIE,
                ".shp"
                
              ),
              overwrite = T
              
            )
            
            if(area_EOO_km2 == 0){} else {
              
              # # EOO
              # sites_EOO<-gConvexHull(sites)
              # crs(sites_EOO)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
              # shapefile(sites_EOO, paste0(getwd(), "/EOO ", ESPECIE, ".shp"), overwrite=T)
              #
              # # EOO Buffer
              # sites_EOO<-gConvexHull(sites_AOO)
              # EOOcontorno <- st_cast(st_as_sf(sites_EOO), 'MULTILINESTRING')
              # EOOcontorno_buffer <- st_buffer(EOOcontorno, dist=0.05)
              # st_crs(EOOcontorno_buffer)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
              # invisible(capture.output(st_write(EOOcontorno_buffer, paste0(getwd(), "/EOO-buffer ", ESPECIE, ".shp"), append = F)))
              
            }
            
          }
          
          if(length(UTM_zone)==3){
            crs(sites_AOO_grid_AOO_1)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_2)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_3)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            sites_AOO_grid_AOO_1$Quad <- paste0(UTM_zone[1], "_", order(sites_AOO_grid_AOO_1$IDnumber))
            sites_AOO_grid_AOO_2$Quad <- paste0(UTM_zone[2], "_", order(sites_AOO_grid_AOO_2$IDnumber))
            sites_AOO_grid_AOO_3$Quad <- paste0(UTM_zone[3], "_", order(sites_AOO_grid_AOO_3$IDnumber))
            sites_grid_AOO <- raster::union(sites_AOO_grid_AOO_1, sites_AOO_grid_AOO_2) %>% raster::union(sites_AOO_grid_AOO_3)
            sites_intersected_mapbiomas_df <- rbind(sites1_intersected_mapbiomas_df, sites2_intersected_mapbiomas_df, sites3_intersected_mapbiomas_df)
            sites_aggregated_area_km2 <- length(sites_grid_AOO)*4
            sites_aggregated_area_ha <- length(sites_grid_AOO)*4*100
            AOO_km2 <- (length(sites_AOO_grid_AOO_1) +
                          length(sites_AOO_grid_AOO_2) +
                          length(sites_AOO_grid_AOO_3))*4
            AOO_ha <- (length(sites_AOO_grid_AOO_1) +
                         length(sites_AOO_grid_AOO_2) +
                         length(sites_AOO_grid_AOO_3))*4*100
            
            # # Exportando shapefile AOO
            # shapefile(sites_grid_AOO, paste0(getwd(), "/AOO ", ESPECIE, ".shp"), overwrite = T)
            
            # Exportando shapefile AOO_QuadOfGrid
            shapefile(
              
              sites_grid_AOO,
              paste0(
                
                sub("Packages/CNCFloraR", "", getwd()),
                "/CNCFlora_data/outputs/shapefiles results/AOO_QuadOfGrid/",
                ESPECIE,
                ".shp"
                
              ),
              overwrite = T
              
            )
            
            # if(area_EOO_km2 == 0){} else {
            #
            #   # EOO
            #   sites_EOO<-gConvexHull(sites)
            #   crs(sites_EOO)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            #   shapefile(sites_EOO, paste0(getwd(), "/EOO ", ESPECIE, ".shp"), overwrite=T)
            #
            #   # EOO Buffer
            #   EOOcontorno <- st_cast(st_as_sf(sites_EOO), 'MULTILINESTRING')
            #   EOOcontorno_buffer <- st_buffer(EOOcontorno, dist=0.05)
            #   st_crs(EOOcontorno_buffer)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            #   invisible(capture.output(invisible(capture.output(st_write(EOOcontorno_buffer, paste0(getwd(), "/EOO-buffer ", ESPECIE, ".shp"), append = F)))))
            #
            # }
            
          }
          
          if(length(UTM_zone)==4){
            crs(sites_AOO_grid_AOO_1)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_2)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_3)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_4)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            sites_AOO_grid_AOO_1$Quad <- paste0(UTM_zone[1], "_", order(sites_AOO_grid_AOO_1$IDnumber))
            sites_AOO_grid_AOO_2$Quad <- paste0(UTM_zone[2], "_", order(sites_AOO_grid_AOO_2$IDnumber))
            sites_AOO_grid_AOO_3$Quad <- paste0(UTM_zone[3], "_", order(sites_AOO_grid_AOO_3$IDnumber))
            sites_AOO_grid_AOO_4$Quad <- paste0(UTM_zone[4], "_", order(sites_AOO_grid_AOO_4$IDnumber))
            sites_grid_AOO <- raster::union(sites_AOO_grid_AOO_1, sites_AOO_grid_AOO_2) %>% raster::union(sites_AOO_grid_AOO_3) %>% raster::union(sites_AOO_grid_AOO_4)
            sites_intersected_mapbiomas_df <- rbind(sites1_intersected_mapbiomas_df, sites2_intersected_mapbiomas_df, sites3_intersected_mapbiomas_df, sites4_intersected_mapbiomas_df)
            sites_aggregated_area_km2 <- length(sites_grid_AOO)*4
            sites_aggregated_area_ha <- length(sites_grid_AOO)*4*100
            AOO_km2 <- (length(sites_AOO_grid_AOO_1) +
                          length(sites_AOO_grid_AOO_2) +
                          length(sites_AOO_grid_AOO_3) +
                          length(sites_AOO_grid_AOO_4))*4
            AOO_ha <- (length(sites_AOO_grid_AOO_1) +
                         length(sites_AOO_grid_AOO_2) +
                         length(sites_AOO_grid_AOO_3) +
                         length(sites_AOO_grid_AOO_4))*4*100
            
            # # Exportando shapefile AOO
            # shapefile(sites_grid_AOO, paste0(getwd(), "/AOO ", ESPECIE, ".shp"), overwrite = T)
            
            # Exportando shapefile AOO_QuadOfGrid
            shapefile(
              
              sites_grid_AOO,
              paste0(
                
                sub("Packages/CNCFloraR", "", getwd()),
                "/CNCFlora_data/outputs/shapefiles results/AOO_QuadOfGrid/",
                ESPECIE,
                ".shp"
                
              ),
              overwrite = T
              
            )
            
            # if(area_EOO_km2 == 0){} else {
            #
            #   # EOO
            #   sites_EOO<-gConvexHull(sites)
            #   crs(sites_EOO)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            #   shapefile(sites_EOO, paste0(getwd(), "/EOO ", ESPECIE, ".shp"), overwrite=T)
            #
            #   # EOO Buffer
            #   EOOcontorno <- st_cast(st_as_sf(sites_EOO), 'MULTILINESTRING')
            #   EOOcontorno_buffer <- st_buffer(EOOcontorno, dist=0.05)
            #   st_crs(EOOcontorno_buffer)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            #   invisible(capture.output(invisible(capture.output(st_write(EOOcontorno_buffer, paste0(getwd(), "/EOO-buffer ", ESPECIE, ".shp"), append = F)))))
            #
            # }
            
          }
          
          if(length(UTM_zone)==5){
            crs(sites_AOO_grid_AOO_1)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_2)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_3)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_4)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_5)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            sites_AOO_grid_AOO_1$Quad <- paste0(UTM_zone[1], "_", order(sites_AOO_grid_AOO_1$IDnumber))
            sites_AOO_grid_AOO_2$Quad <- paste0(UTM_zone[2], "_", order(sites_AOO_grid_AOO_2$IDnumber))
            sites_AOO_grid_AOO_3$Quad <- paste0(UTM_zone[3], "_", order(sites_AOO_grid_AOO_3$IDnumber))
            sites_AOO_grid_AOO_4$Quad <- paste0(UTM_zone[4], "_", order(sites_AOO_grid_AOO_4$IDnumber))
            sites_AOO_grid_AOO_5$Quad <- paste0(UTM_zone[5], "_", order(sites_AOO_grid_AOO_5$IDnumber))
            sites_grid_AOO <- raster::union(sites_AOO_grid_AOO_1, sites_AOO_grid_AOO_2) %>% raster::union(sites_AOO_grid_AOO_3) %>% raster::union(sites_AOO_grid_AOO_4) %>% raster::union(sites_AOO_grid_AOO_5)
            sites_intersected_mapbiomas_df <- rbind(sites1_intersected_mapbiomas_df, sites2_intersected_mapbiomas_df, sites3_intersected_mapbiomas_df, sites4_intersected_mapbiomas_df, sites5_intersected_mapbiomas_df)
            sites_aggregated_area_km2 <- length(sites_grid_AOO)*4
            sites_aggregated_area_ha <- length(sites_grid_AOO)*4*100
            AOO_km2 <- (length(sites_AOO_grid_AOO_1) +
                          length(sites_AOO_grid_AOO_2) +
                          length(sites_AOO_grid_AOO_3) +
                          length(sites_AOO_grid_AOO_4) +
                          length(sites_AOO_grid_AOO_5))*4
            AOO_ha <- (length(sites_AOO_grid_AOO_1) +
                         length(sites_AOO_grid_AOO_2) +
                         length(sites_AOO_grid_AOO_3) +
                         length(sites_AOO_grid_AOO_4) +
                         length(sites_AOO_grid_AOO_5))*4*100
            
            # # Exportando shapefile AOO
            # shapefile(sites_grid_AOO, paste0(getwd(), "/AOO ", ESPECIE, ".shp"), overwrite = T)
            
            # Exportando shapefile AOO_QuadOfGrid
            shapefile(
              
              sites_grid_AOO,
              paste0(
                
                sub("Packages/CNCFloraR", "", getwd()),
                "/CNCFlora_data/outputs/shapefiles results/AOO_QuadOfGrid/",
                ESPECIE,
                ".shp"
                
              ),
              overwrite = T
              
            )
            
            # if(area_EOO_km2 == 0){} else {
            #
            #   # EOO
            #   sites_EOO<-gConvexHull(sites)
            #   crs(sites_EOO)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            #   shapefile(sites_EOO, paste0(getwd(), "/EOO ", ESPECIE, ".shp"), overwrite=T)
            #
            #   # EOO Buffer
            #   EOOcontorno <- st_cast(st_as_sf(sites_EOO), 'MULTILINESTRING')
            #   EOOcontorno_buffer <- st_buffer(EOOcontorno, dist=0.05)
            #   st_crs(EOOcontorno_buffer)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            #   invisible(capture.output(invisible(capture.output(st_write(EOOcontorno_buffer, paste0(getwd(), "/EOO-buffer ", ESPECIE, ".shp"), append = F)))))
            #
            # }
            
          }
          
          if(length(UTM_zone)==6){
            crs(sites_AOO_grid_AOO_1)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_2)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_3)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_4)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_5)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_6)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            sites_AOO_grid_AOO_1$Quad <- paste0(UTM_zone[1], "_", order(sites_AOO_grid_AOO_1$IDnumber))
            sites_AOO_grid_AOO_2$Quad <- paste0(UTM_zone[2], "_", order(sites_AOO_grid_AOO_2$IDnumber))
            sites_AOO_grid_AOO_3$Quad <- paste0(UTM_zone[3], "_", order(sites_AOO_grid_AOO_3$IDnumber))
            sites_AOO_grid_AOO_4$Quad <- paste0(UTM_zone[4], "_", order(sites_AOO_grid_AOO_4$IDnumber))
            sites_AOO_grid_AOO_5$Quad <- paste0(UTM_zone[5], "_", order(sites_AOO_grid_AOO_5$IDnumber))
            sites_AOO_grid_AOO_6$Quad <- paste0(UTM_zone[6], "_", order(sites_AOO_grid_AOO_6$IDnumber))
            sites_grid_AOO <- raster::union(sites_AOO_grid_AOO_1, sites_AOO_grid_AOO_2) %>% raster::union(sites_AOO_grid_AOO_3) %>% raster::union(sites_AOO_grid_AOO_4) %>% raster::union(sites_AOO_grid_AOO_5) %>% raster::union(sites_AOO_grid_AOO_6)
            sites_intersected_mapbiomas_df <- rbind(sites1_intersected_mapbiomas_df, sites2_intersected_mapbiomas_df, sites3_intersected_mapbiomas_df, sites4_intersected_mapbiomas_df, sites5_intersected_mapbiomas_df, sites6_intersected_mapbiomas_df)
            sites_aggregated_area_km2 <- length(sites_grid_AOO)*4
            sites_aggregated_area_ha <- length(sites_grid_AOO)*4*100
            AOO_km2 <- (length(sites_AOO_grid_AOO_1) +
                          length(sites_AOO_grid_AOO_2) +
                          length(sites_AOO_grid_AOO_3) +
                          length(sites_AOO_grid_AOO_4) +
                          length(sites_AOO_grid_AOO_5) +
                          length(sites_AOO_grid_AOO_6))*4
            AOO_ha <- (length(sites_AOO_grid_AOO_1) +
                         length(sites_AOO_grid_AOO_2) +
                         length(sites_AOO_grid_AOO_3) +
                         length(sites_AOO_grid_AOO_4) +
                         length(sites_AOO_grid_AOO_5) +
                         length(sites_AOO_grid_AOO_6))*4*100
            
            # # Exportando shapefile AOO
            # shapefile(sites_grid_AOO, paste0(getwd(), "/AOO ", ESPECIE, ".shp"), overwrite = T)
            
            # Exportando shapefile AOO_QuadOfGrid
            shapefile(
              
              sites_grid_AOO,
              paste0(
                
                sub("Packages/CNCFloraR", "", getwd()),
                "/CNCFlora_data/outputs/shapefiles results/AOO_QuadOfGrid/",
                ESPECIE,
                ".shp"
                
              ),
              overwrite = T
              
            )
            
            # # EOO
            # sites_EOO<-gConvexHull(sites)
            # crs(sites_EOO)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            # shapefile(sites_EOO, paste0(getwd(), "/EOO ", ESPECIE, ".shp"), overwrite=T)
            #
            # # EOO Buffer
            # EOOcontorno <- st_cast(st_as_sf(sites_EOO), 'MULTILINESTRING')
            # EOOcontorno_buffer <- st_buffer(EOOcontorno, dist=0.05)
            # st_crs(EOOcontorno_buffer)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            # invisible(capture.output(invisible(capture.output(st_write(EOOcontorno_buffer, paste0(getwd(), "/EOO-buffer ", ESPECIE, ".shp"), append = F)))))
          }
          
          if(length(UTM_zone)==7){
            crs(sites_AOO_grid_AOO_1)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_2)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_3)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_4)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_5)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_6)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_7)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            sites_AOO_grid_AOO_1$Quad <- paste0(UTM_zone[1], "_", order(sites_AOO_grid_AOO_1$IDnumber))
            sites_AOO_grid_AOO_2$Quad <- paste0(UTM_zone[2], "_", order(sites_AOO_grid_AOO_2$IDnumber))
            sites_AOO_grid_AOO_3$Quad <- paste0(UTM_zone[3], "_", order(sites_AOO_grid_AOO_3$IDnumber))
            sites_AOO_grid_AOO_4$Quad <- paste0(UTM_zone[4], "_", order(sites_AOO_grid_AOO_4$IDnumber))
            sites_AOO_grid_AOO_5$Quad <- paste0(UTM_zone[5], "_", order(sites_AOO_grid_AOO_5$IDnumber))
            sites_AOO_grid_AOO_6$Quad <- paste0(UTM_zone[6], "_", order(sites_AOO_grid_AOO_6$IDnumber))
            sites_AOO_grid_AOO_7$Quad <- paste0(UTM_zone[7], "_", order(sites_AOO_grid_AOO_7$IDnumber))
            sites_grid_AOO <- raster::union(sites_AOO_grid_AOO_1, sites_AOO_grid_AOO_2) %>% raster::union(sites_AOO_grid_AOO_3) %>% raster::union(sites_AOO_grid_AOO_4) %>% raster::union(sites_AOO_grid_AOO_5) %>% raster::union(sites_AOO_grid_AOO_6) %>% raster::union(sites_AOO_grid_AOO_7)
            sites_intersected_mapbiomas_df <- rbind(sites1_intersected_mapbiomas_df, sites2_intersected_mapbiomas_df, sites3_intersected_mapbiomas_df, sites4_intersected_mapbiomas_df, sites5_intersected_mapbiomas_df, sites6_intersected_mapbiomas_df, sites7_intersected_mapbiomas_df)
            sites_aggregated_area_km2 <- length(sites_grid_AOO)*4
            sites_aggregated_area_ha <- length(sites_grid_AOO)*4*100
            AOO_km2 <- (length(sites_AOO_grid_AOO_1) +
                          length(sites_AOO_grid_AOO_2) +
                          length(sites_AOO_grid_AOO_3) +
                          length(sites_AOO_grid_AOO_4) +
                          length(sites_AOO_grid_AOO_5) +
                          length(sites_AOO_grid_AOO_6) +
                          length(sites_AOO_grid_AOO_7))*4
            AOO_ha <- (length(sites_AOO_grid_AOO_1) +
                         length(sites_AOO_grid_AOO_2) +
                         length(sites_AOO_grid_AOO_3) +
                         length(sites_AOO_grid_AOO_4) +
                         length(sites_AOO_grid_AOO_5) +
                         length(sites_AOO_grid_AOO_6) +
                         length(sites_AOO_grid_AOO_7))*4*100
            
            # # Exportando shapefile AOO
            # shapefile(sites_grid_AOO, paste0(getwd(), "/AOO ", ESPECIE, ".shp"), overwrite = T)
            
            # Exportando shapefile AOO_QuadOfGrid
            shapefile(
              
              sites_grid_AOO,
              paste0(
                
                sub("Packages/CNCFloraR", "", getwd()),
                "/CNCFlora_data/outputs/shapefiles results/AOO_QuadOfGrid/",
                ESPECIE,
                ".shp"
                
              ),
              overwrite = T
              
            )
            
            # if(area_EOO_km2 == 0){} else {
            #
            #   # EOO
            #   sites_EOO<-gConvexHull(sites)
            #   crs(sites_EOO)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            #   shapefile(sites_EOO, paste0(getwd(), "/EOO ", ESPECIE, ".shp"), overwrite=T)
            #
            #   # EOO Buffer
            #   EOOcontorno <- st_cast(st_as_sf(sites_EOO), 'MULTILINESTRING')
            #   EOOcontorno_buffer <- st_buffer(EOOcontorno, dist=0.05)
            #   st_crs(EOOcontorno_buffer)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            #   invisible(capture.output(st_write(EOOcontorno_buffer, paste0(getwd(), "/EOO-buffer ", ESPECIE, ".shp"), append = F)))
            #
            # }
            
          }
          
          if(length(UTM_zone)==8){
            crs(sites_AOO_grid_AOO_1)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_2)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_3)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_4)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_5)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_6)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_7)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_8)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            sites_AOO_grid_AOO_1$Quad <- paste0(UTM_zone[1], "_", order(sites_AOO_grid_AOO_1$IDnumber))
            sites_AOO_grid_AOO_2$Quad <- paste0(UTM_zone[2], "_", order(sites_AOO_grid_AOO_2$IDnumber))
            sites_AOO_grid_AOO_3$Quad <- paste0(UTM_zone[3], "_", order(sites_AOO_grid_AOO_3$IDnumber))
            sites_AOO_grid_AOO_4$Quad <- paste0(UTM_zone[4], "_", order(sites_AOO_grid_AOO_4$IDnumber))
            sites_AOO_grid_AOO_5$Quad <- paste0(UTM_zone[5], "_", order(sites_AOO_grid_AOO_5$IDnumber))
            sites_AOO_grid_AOO_6$Quad <- paste0(UTM_zone[6], "_", order(sites_AOO_grid_AOO_6$IDnumber))
            sites_AOO_grid_AOO_7$Quad <- paste0(UTM_zone[7], "_", order(sites_AOO_grid_AOO_7$IDnumber))
            sites_AOO_grid_AOO_8$Quad <- paste0(UTM_zone[8], "_", order(sites_AOO_grid_AOO_8$IDnumber))
            sites_grid_AOO <- raster::union(sites_AOO_grid_AOO_1, sites_AOO_grid_AOO_2) %>% raster::union(sites_AOO_grid_AOO_3) %>% raster::union(sites_AOO_grid_AOO_4) %>% raster::union(sites_AOO_grid_AOO_5) %>% raster::union(sites_AOO_grid_AOO_6) %>% raster::union(sites_AOO_grid_AOO_7) %>% raster::union(sites_AOO_grid_AOO_8)
            sites_intersected_mapbiomas_df <- rbind(sites1_intersected_mapbiomas_df, sites2_intersected_mapbiomas_df, sites3_intersected_mapbiomas_df, sites4_intersected_mapbiomas_df, sites5_intersected_mapbiomas_df, sites6_intersected_mapbiomas_df, sites7_intersected_mapbiomas_df, sites8_intersected_mapbiomas_df)
            sites_aggregated_area_km2 <- length(sites_grid_AOO)*4
            sites_aggregated_area_ha <- length(sites_grid_AOO)*4*100
            AOO_km2 <- (length(sites_AOO_grid_AOO_1) +
                          length(sites_AOO_grid_AOO_2) +
                          length(sites_AOO_grid_AOO_3) +
                          length(sites_AOO_grid_AOO_4) +
                          length(sites_AOO_grid_AOO_5) +
                          length(sites_AOO_grid_AOO_6) +
                          length(sites_AOO_grid_AOO_7) +
                          length(sites_AOO_grid_AOO_8))*4
            AOO_ha <- (length(sites_AOO_grid_AOO_1) +
                         length(sites_AOO_grid_AOO_2) +
                         length(sites_AOO_grid_AOO_3) +
                         length(sites_AOO_grid_AOO_4) +
                         length(sites_AOO_grid_AOO_5) +
                         length(sites_AOO_grid_AOO_6) +
                         length(sites_AOO_grid_AOO_7) +
                         length(sites_AOO_grid_AOO_8))*4*100
            
            # # Exportando shapefile AOO
            # shapefile(sites_grid_AOO, paste0(getwd(), "/AOO ", ESPECIE, ".shp"), overwrite = T)
            
            # Exportando shapefile AOO_QuadOfGrid
            shapefile(
              
              sites_grid_AOO,
              paste0(
                
                sub("Packages/CNCFloraR", "", getwd()),
                "/CNCFlora_data/outputs/shapefiles results/AOO_QuadOfGrid/",
                ESPECIE,
                ".shp"
                
              ),
              overwrite = T
              
            )
            
            # if(area_EOO_km2 == 0){} else {
            #
            #   # EOO
            #   sites_EOO<-gConvexHull(sites)
            #   crs(sites_EOO)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            #   shapefile(sites_EOO, paste0(getwd(), "/EOO ", ESPECIE, ".shp"), overwrite=T)
            #
            #   # EOO Buffer
            #   EOOcontorno <- st_cast(st_as_sf(sites_EOO), 'MULTILINESTRING')
            #   EOOcontorno_buffer <- st_buffer(EOOcontorno, dist=0.05)
            #   st_crs(EOOcontorno_buffer)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            #   invisible(capture.output(st_write(EOOcontorno_buffer, paste0(getwd(), "/EOO-buffer ", ESPECIE, ".shp"), append = F)))
            #
            # }
            
          }
          
          if(length(UTM_zone)==9){
            crs(sites_AOO_grid_AOO_1)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_2)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_3)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_4)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_5)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_6)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_7)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_8)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_9)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            sites_AOO_grid_AOO_1$Quad <- paste0(UTM_zone[1], "_", order(sites_AOO_grid_AOO_1$IDnumber))
            sites_AOO_grid_AOO_2$Quad <- paste0(UTM_zone[2], "_", order(sites_AOO_grid_AOO_2$IDnumber))
            sites_AOO_grid_AOO_3$Quad <- paste0(UTM_zone[3], "_", order(sites_AOO_grid_AOO_3$IDnumber))
            sites_AOO_grid_AOO_4$Quad <- paste0(UTM_zone[4], "_", order(sites_AOO_grid_AOO_4$IDnumber))
            sites_AOO_grid_AOO_5$Quad <- paste0(UTM_zone[5], "_", order(sites_AOO_grid_AOO_5$IDnumber))
            sites_AOO_grid_AOO_6$Quad <- paste0(UTM_zone[6], "_", order(sites_AOO_grid_AOO_6$IDnumber))
            sites_AOO_grid_AOO_7$Quad <- paste0(UTM_zone[7], "_", order(sites_AOO_grid_AOO_7$IDnumber))
            sites_AOO_grid_AOO_8$Quad <- paste0(UTM_zone[8], "_", order(sites_AOO_grid_AOO_8$IDnumber))
            sites_AOO_grid_AOO_9$Quad <- paste0(UTM_zone[9], "_", order(sites_AOO_grid_AOO_9$IDnumber))
            sites_grid_AOO <- raster::union(sites_AOO_grid_AOO_1, sites_AOO_grid_AOO_2) %>% raster::union(sites_AOO_grid_AOO_3) %>% raster::union(sites_AOO_grid_AOO_4) %>% raster::union(sites_AOO_grid_AOO_5) %>% raster::union(sites_AOO_grid_AOO_6) %>% raster::union(sites_AOO_grid_AOO_7) %>% raster::union(sites_AOO_grid_AOO_8) %>% raster::union(sites_AOO_grid_AOO_9)
            sites_intersected_mapbiomas_df <- rbind(sites1_intersected_mapbiomas_df, sites2_intersected_mapbiomas_df, sites3_intersected_mapbiomas_df, sites4_intersected_mapbiomas_df, sites5_intersected_mapbiomas_df, sites6_intersected_mapbiomas_df, sites7_intersected_mapbiomas_df, sites8_intersected_mapbiomas_df, sites9_intersected_mapbiomas_df)
            sites_aggregated_area_km2 <- length(sites_grid_AOO)*4
            sites_aggregated_area_ha <- length(sites_grid_AOO)*4*100
            AOO_km2 <- (length(sites_AOO_grid_AOO_1) +
                          length(sites_AOO_grid_AOO_2) +
                          length(sites_AOO_grid_AOO_3) +
                          length(sites_AOO_grid_AOO_4) +
                          length(sites_AOO_grid_AOO_5) +
                          length(sites_AOO_grid_AOO_6) +
                          length(sites_AOO_grid_AOO_7) +
                          length(sites_AOO_grid_AOO_8) +
                          length(sites_AOO_grid_AOO_9))*4
            AOO_ha <- (length(sites_AOO_grid_AOO_1) +
                         length(sites_AOO_grid_AOO_2) +
                         length(sites_AOO_grid_AOO_3) +
                         length(sites_AOO_grid_AOO_4) +
                         length(sites_AOO_grid_AOO_5) +
                         length(sites_AOO_grid_AOO_6) +
                         length(sites_AOO_grid_AOO_7) +
                         length(sites_AOO_grid_AOO_8) +
                         length(sites_AOO_grid_AOO_9))*4*100
            
            # # Exportando shapefile AOO
            # shapefile(sites_grid_AOO, paste0(getwd(), "/AOO ", ESPECIE, ".shp"), overwrite = T)
            
            # Exportando shapefile AOO_QuadOfGrid
            shapefile(
              
              sites_grid_AOO,
              paste0(
                
                sub("Packages/CNCFloraR", "", getwd()),
                "/CNCFlora_data/outputs/shapefiles results/AOO_QuadOfGrid/",
                ESPECIE,
                ".shp"
                
              ),
              overwrite = T
              
            )
            
            # if(area_EOO_km2 == 0){} else {
            #
            #   # EOO
            #   sites_EOO<-gConvexHull(sites)
            #   crs(sites_EOO)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            #   shapefile(sites_EOO, paste0(getwd(), "/EOO ", ESPECIE, ".shp"), overwrite=T)
            #
            #   # EOO Buffer
            #   EOOcontorno <- st_cast(st_as_sf(sites_EOO), 'MULTILINESTRING')
            #   EOOcontorno_buffer <- st_buffer(EOOcontorno, dist=0.05)
            #   st_crs(EOOcontorno_buffer)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            #   invisible(capture.output(st_write(EOOcontorno_buffer, paste0(getwd(), "/EOO-buffer ", ESPECIE, ".shp"), append = F)))
            #
            # }
            
          }
          
          if(length(UTM_zone)==10){
            crs(sites_AOO_grid_AOO_1)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_2)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_3)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_4)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_5)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_6)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_7)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_8)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_9)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            crs(sites_AOO_grid_AOO_10)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            sites_AOO_grid_AOO_1$Quad <- paste0(UTM_zone[1], "_", order(sites_AOO_grid_AOO_1$IDnumber))
            sites_AOO_grid_AOO_2$Quad <- paste0(UTM_zone[2], "_", order(sites_AOO_grid_AOO_2$IDnumber))
            sites_AOO_grid_AOO_3$Quad <- paste0(UTM_zone[3], "_", order(sites_AOO_grid_AOO_3$IDnumber))
            sites_AOO_grid_AOO_4$Quad <- paste0(UTM_zone[4], "_", order(sites_AOO_grid_AOO_4$IDnumber))
            sites_AOO_grid_AOO_5$Quad <- paste0(UTM_zone[5], "_", order(sites_AOO_grid_AOO_5$IDnumber))
            sites_AOO_grid_AOO_6$Quad <- paste0(UTM_zone[6], "_", order(sites_AOO_grid_AOO_6$IDnumber))
            sites_AOO_grid_AOO_7$Quad <- paste0(UTM_zone[7], "_", order(sites_AOO_grid_AOO_7$IDnumber))
            sites_AOO_grid_AOO_8$Quad <- paste0(UTM_zone[8], "_", order(sites_AOO_grid_AOO_8$IDnumber))
            sites_AOO_grid_AOO_9$Quad <- paste0(UTM_zone[9], "_", order(sites_AOO_grid_AOO_9$IDnumber))
            sites_AOO_grid_AOO_10$Quad <- paste0(UTM_zone[10], "_", order(sites_AOO_grid_AOO_10$IDnumber))
            sites_grid_AOO <- raster::union(sites_AOO_grid_AOO_1, sites_AOO_grid_AOO_2) %>% raster::union(sites_AOO_grid_AOO_3) %>% raster::union(sites_AOO_grid_AOO_4) %>% raster::union(sites_AOO_grid_AOO_5) %>% raster::union(sites_AOO_grid_AOO_6) %>% raster::union(sites_AOO_grid_AOO_7) %>% raster::union(sites_AOO_grid_AOO_8) %>% raster::union(sites_AOO_grid_AOO_9) %>% raster::union(sites_AOO_grid_AOO_10)
            sites_intersected_mapbiomas_df <- rbind(sites1_intersected_mapbiomas_df, sites2_intersected_mapbiomas_df, sites3_intersected_mapbiomas_df, sites4_intersected_mapbiomas_df, sites5_intersected_mapbiomas_df, sites6_intersected_mapbiomas_df, sites7_intersected_mapbiomas_df, sites8_intersected_mapbiomas_df, sites9_intersected_mapbiomas_df, sites10_intersected_mapbiomas_df)
            sites_aggregated_area_km2 <- length(sites_grid_AOO)*4
            sites_aggregated_area_ha <- length(sites_grid_AOO)*4*100
            AOO_km2 <- (length(sites_AOO_grid_AOO_1) +
                          length(sites_AOO_grid_AOO_2) +
                          length(sites_AOO_grid_AOO_3) +
                          length(sites_AOO_grid_AOO_4) +
                          length(sites_AOO_grid_AOO_5) +
                          length(sites_AOO_grid_AOO_6) +
                          length(sites_AOO_grid_AOO_7) +
                          length(sites_AOO_grid_AOO_8) +
                          length(sites_AOO_grid_AOO_9) +
                          length(sites_AOO_grid_AOO_10))*4
            AOO_ha <- (length(sites_AOO_grid_AOO_1) +
                         length(sites_AOO_grid_AOO_2) +
                         length(sites_AOO_grid_AOO_3) +
                         length(sites_AOO_grid_AOO_4) +
                         length(sites_AOO_grid_AOO_5) +
                         length(sites_AOO_grid_AOO_6) +
                         length(sites_AOO_grid_AOO_7) +
                         length(sites_AOO_grid_AOO_8) +
                         length(sites_AOO_grid_AOO_9) +
                         length(sites_AOO_grid_AOO_10))*4*100
            
            # Exportando shapefile AOO
            shapefile(
              
              sites_grid_AOO,
              paste0(
                
                sub("Packages/CNCFloraR", "", getwd()),
                "/CNCFlora_data/outputs/shapefiles results/AOO_QuadOfGrid/",
                ESPECIE,
                ".shp"
                
              ),
              overwrite = T
              
            )
            
            # if(area_EOO_km2 == 0){} else {
            #
            #   # EOO
            #   sites_EOO<-gConvexHull(sites)
            #   crs(sites_EOO)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            #   shapefile(sites_EOO, paste0(getwd(), "/EOO ", ESPECIE, ".shp"), overwrite=T)
            #
            #   # EOO Buffer
            #   EOOcontorno <- st_cast(st_as_sf(sites_EOO), 'MULTILINESTRING')
            #   EOOcontorno_buffer <- st_buffer(EOOcontorno, dist=0.05)
            #   st_crs(EOOcontorno_buffer)<-"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
            #   invisible(capture.output(st_write(EOOcontorno_buffer, paste0(getwd(), "/EOO-buffer ", ESPECIE, ".shp"), append = F)))
            #
            # }
            
          }
          
          # Contagem de quadrículas do AOO
          QuadAOO_id <- unique(sites_intersected_mapbiomas_df$QuadAOO)
          
          # Convertendo feições, de números para texto ####
          sites_intersected_mapbiomas_df$AOO_total <- sub(15, "Pastagem", sites_intersected_mapbiomas_df$AOO_total)
          sites_intersected_mapbiomas_df$AOO_total <- sub(41, "Outras lavouras temporárias", sites_intersected_mapbiomas_df$AOO_total)
          sites_intersected_mapbiomas_df$AOO_total <- sub(39, "Soja", sites_intersected_mapbiomas_df$AOO_total)
          sites_intersected_mapbiomas_df$AOO_total <- sub(20, "Cana-de-açúcar", sites_intersected_mapbiomas_df$AOO_total)
          sites_intersected_mapbiomas_df$AOO_total <- sub(36, "Lavouras perenes", sites_intersected_mapbiomas_df$AOO_total)
          sites_intersected_mapbiomas_df$AOO_total <- sub(21, "Mosaico de Agricultura e Pastagem", sites_intersected_mapbiomas_df$AOO_total)
          sites_intersected_mapbiomas_df$AOO_total <- sub(24, "Infraestrutura urbana", sites_intersected_mapbiomas_df$AOO_total)
          sites_intersected_mapbiomas_df$AOO_total <- sub(30, "Mineração", sites_intersected_mapbiomas_df$AOO_total)
          sites_intersected_mapbiomas_df$AOO_total <- sub(11, "Campo Alagado e Área Pantanosa", sites_intersected_mapbiomas_df$AOO_total)
          sites_intersected_mapbiomas_df$AOO_total <- sub(12, "Formação Campestre", sites_intersected_mapbiomas_df$AOO_total)
          sites_intersected_mapbiomas_df$AOO_total <- sub(13, "Outras Formações não Florestais", sites_intersected_mapbiomas_df$AOO_total)
          sites_intersected_mapbiomas_df$AOO_total <- sub(19, "Lavoura Temporária", sites_intersected_mapbiomas_df$AOO_total)
          sites_intersected_mapbiomas_df$AOO_total <- sub(23, "Praia, Duna e Areal", sites_intersected_mapbiomas_df$AOO_total)
          sites_intersected_mapbiomas_df$AOO_total <- sub(25, "Outras Áreas não Vegetadas", sites_intersected_mapbiomas_df$AOO_total)
          sites_intersected_mapbiomas_df$AOO_total <- sub(27, "Não Observado", sites_intersected_mapbiomas_df$AOO_total)
          sites_intersected_mapbiomas_df$AOO_total <- sub(29, "Afloramento Rochoso", sites_intersected_mapbiomas_df$AOO_total)
          sites_intersected_mapbiomas_df$AOO_total <- sub(31, "Aquicultura", sites_intersected_mapbiomas_df$AOO_total)
          sites_intersected_mapbiomas_df$AOO_total <- sub(32, "Apicum", sites_intersected_mapbiomas_df$AOO_total)
          sites_intersected_mapbiomas_df$AOO_total <- sub(33, "Rio, Lago e Oceano", sites_intersected_mapbiomas_df$AOO_total)
          sites_intersected_mapbiomas_df$AOO_total <- sub(40, "Arroz", sites_intersected_mapbiomas_df$AOO_total)
          sites_intersected_mapbiomas_df$AOO_total <- sub(46, "Café", sites_intersected_mapbiomas_df$AOO_total)
          sites_intersected_mapbiomas_df$AOO_total <- sub(47, "Citrus", sites_intersected_mapbiomas_df$AOO_total)
          sites_intersected_mapbiomas_df$AOO_total <- sub(48, "Outras Lavouras Perenes", sites_intersected_mapbiomas_df$AOO_total)
          sites_intersected_mapbiomas_df$AOO_total <- sub(49, "Restinga Arborizada", sites_intersected_mapbiomas_df$AOO_total)
          sites_intersected_mapbiomas_df$AOO_total <- sub(9, "Floresta Plantada", sites_intersected_mapbiomas_df$AOO_total)
          sites_intersected_mapbiomas_df$AOO_total <- sub(3, "Floresta", sites_intersected_mapbiomas_df$AOO_total)
          sites_intersected_mapbiomas_df$AOO_total <- sub(4, "Savana", sites_intersected_mapbiomas_df$AOO_total)
          sites_intersected_mapbiomas_df$AOO_total <- sub(5, "Mangue", sites_intersected_mapbiomas_df$AOO_total)
          
          # Filtragens das ameaças ####
          sites_intersected_mapbiomas_df_urbana <- sites_intersected_mapbiomas_df %>% filter(AOO_total == "Infraestrutura urbana")
          sites_intersected_mapbiomas_df_mineracao <- sites_intersected_mapbiomas_df %>% filter(AOO_total == "Mineração")
          sites_intersected_mapbiomas_df_silvicultura <- sites_intersected_mapbiomas_df %>% filter(AOO_total == "Floresta Plantada")
          sites_intersected_mapbiomas_df_outras_lavouras_temporarias <- sites_intersected_mapbiomas_df %>% filter(AOO_total == "Outras lavouras temporárias")
          sites_intersected_mapbiomas_df_soja <- sites_intersected_mapbiomas_df %>% filter(AOO_total == "Soja")
          sites_intersected_mapbiomas_df_cana <- sites_intersected_mapbiomas_df %>% filter(AOO_total == "Cana-de-açúcar")
          sites_intersected_mapbiomas_df_lavouras_perenes <- sites_intersected_mapbiomas_df %>% filter(AOO_total == "Lavouras perenes")
          sites_intersected_mapbiomas_df_pastagem <- sites_intersected_mapbiomas_df %>% filter(AOO_total == "Pastagem")
          sites_intersected_mapbiomas_df_mosaic_past_agric <- sites_intersected_mapbiomas_df %>% filter(AOO_total == "Mosaico de Agricultura e Pastagem")
          sites_intersected_mapbiomas_df_floresta <- sites_intersected_mapbiomas_df %>% filter(AOO_total == "Floresta")
          sites_intersected_mapbiomas_df_savana <- sites_intersected_mapbiomas_df %>% filter(AOO_total == "Savana")
          sites_intersected_mapbiomas_df_mangue <- sites_intersected_mapbiomas_df %>% filter(AOO_total == "Mangue")
          sites_intersected_mapbiomas_df_alagado_pantanosa <- sites_intersected_mapbiomas_df %>% filter(AOO_total == "Campo Alagado e Área Pantanosa")
          sites_intersected_mapbiomas_df_campos <- sites_intersected_mapbiomas_df %>% group_by(QuadAOO) %>% filter(AOO_total == "Formação Campestre")
          sites_intersected_mapbiomas_df_outras_nao_florestais <- sites_intersected_mapbiomas_df %>% filter(AOO_total == "Outras Formações não Florestais")
          sites_intersected_mapbiomas_df_lavouras_temporarias <- sites_intersected_mapbiomas_df %>% filter(AOO_total == "Lavoura Temporária")
          sites_intersected_mapbiomas_df_praia_duna_areal <- sites_intersected_mapbiomas_df %>% filter(AOO_total == "Praia, Duna e Areal")
          sites_intersected_mapbiomas_df_outras_nao_vegetadas <- sites_intersected_mapbiomas_df %>% filter(AOO_total == "Outras Áreas não Vegetadas")
          sites_intersected_mapbiomas_df_nao_observado <- sites_intersected_mapbiomas_df %>% filter(AOO_total == "Não Observado")
          sites_intersected_mapbiomas_df_afloramento_rochoso <- sites_intersected_mapbiomas_df %>% filter(AOO_total == "Afloramento Rochoso")
          sites_intersected_mapbiomas_df_aquicultura <- sites_intersected_mapbiomas_df %>% filter(AOO_total == "Aquicultura")
          sites_intersected_mapbiomas_df_apicum <- sites_intersected_mapbiomas_df %>% filter(AOO_total == "Apicum")
          sites_intersected_mapbiomas_df_rio_lago_oceano <- sites_intersected_mapbiomas_df %>% filter(AOO_total == "Rio, Lago e Oceano")
          sites_intersected_mapbiomas_df_arroz <- sites_intersected_mapbiomas_df %>% filter(AOO_total == "Arroz")
          sites_intersected_mapbiomas_df_cafe <- sites_intersected_mapbiomas_df %>% filter(AOO_total == "Café")
          sites_intersected_mapbiomas_df_citrus <- sites_intersected_mapbiomas_df %>% filter(AOO_total == "Citrus")
          sites_intersected_mapbiomas_df_outras_lavouras_perenes <- sites_intersected_mapbiomas_df %>% filter(AOO_total == "Outras Lavouras Perenes")
          sites_intersected_mapbiomas_df_restinga_arborizada <- sites_intersected_mapbiomas_df %>% filter(AOO_total == "Restinga Arborizada")
          
          # Cálculo da área das feições de ameaças ####
          sites_aggregated_area_km2_num <- 4
          count_area_sites_intersected_mapbiomas_df <- sites_intersected_mapbiomas_df %>% dplyr::group_by(QuadAOO) %>% count()
          
          ## Infraestrutura urbana
          count_area_sites_intersected_mapbiomas_df_urbana <- sites_intersected_mapbiomas_df_urbana %>% dplyr::group_by(QuadAOO) %>% count()
          
          QuadAOO_id_FALSEorTRUE <- NULL
          for(i in QuadAOO_id){
            if(nrow(count_area_sites_intersected_mapbiomas_df_urbana %>%
                    filter(QuadAOO == i)) == 0){
              QuadAOO_id_isZero <- T
            } else{
              QuadAOO_id_isZero <- F
            }
            QuadAOO_id_FALSEorTRUE_ <- data.frame(QuadAOO_id = i, isZero = QuadAOO_id_isZero)
            QuadAOO_id_FALSEorTRUE <- rbind(QuadAOO_id_FALSEorTRUE, QuadAOO_id_FALSEorTRUE_)
          }
          if(any(QuadAOO_id_FALSEorTRUE$isZero) == F){} else {
            count_area_sites_intersected_mapbiomas_df_urbana <- rbind(count_area_sites_intersected_mapbiomas_df_urbana,
                                                                      data.frame(QuadAOO = QuadAOO_id_FALSEorTRUE$QuadAOO_id[QuadAOO_id_FALSEorTRUE$isZero == T],
                                                                                 n = 0))
          }
          
          area_km2_urbana <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_urbana$QuadAOO,
            n = count_area_sites_intersected_mapbiomas_df_urbana$n * sites_aggregated_area_km2_num/count_area_sites_intersected_mapbiomas_df$n
          )
          porc_area_km2_urbana <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_urbana$QuadAOO,
            n = area_km2_urbana$n*100/sites_aggregated_area_km2_num
          )
          
          ## Mineração
          count_area_sites_intersected_mapbiomas_df_mineracao <- sites_intersected_mapbiomas_df_mineracao %>% dplyr::group_by(QuadAOO) %>% count()
          
          QuadAOO_id_FALSEorTRUE <- NULL
          for(i in QuadAOO_id){
            if(nrow(count_area_sites_intersected_mapbiomas_df_mineracao %>%
                    filter(QuadAOO == i)) == 0){
              QuadAOO_id_isZero <- T
            } else{
              QuadAOO_id_isZero <- F
            }
            QuadAOO_id_FALSEorTRUE_ <- data.frame(QuadAOO_id = i, isZero = QuadAOO_id_isZero)
            QuadAOO_id_FALSEorTRUE <- rbind(QuadAOO_id_FALSEorTRUE, QuadAOO_id_FALSEorTRUE_)
          }
          if(any(QuadAOO_id_FALSEorTRUE$isZero) == F){} else {
            count_area_sites_intersected_mapbiomas_df_mineracao <- rbind(count_area_sites_intersected_mapbiomas_df_mineracao,
                                                                         data.frame(QuadAOO = QuadAOO_id_FALSEorTRUE$QuadAOO_id[QuadAOO_id_FALSEorTRUE$isZero == T],
                                                                                    n = 0))
          }
          
          area_km2_mineracao <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_mineracao$QuadAOO,
            n = count_area_sites_intersected_mapbiomas_df_mineracao$n * sites_aggregated_area_km2_num/count_area_sites_intersected_mapbiomas_df$n
          )
          porc_area_km2_mineracao <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_mineracao$QuadAOO,
            n = area_km2_mineracao$n*100/sites_aggregated_area_km2_num
          )
          
          ## Silvicultura
          count_area_sites_intersected_mapbiomas_df_silvicultura <- sites_intersected_mapbiomas_df_silvicultura %>% dplyr::group_by(QuadAOO) %>% count()
          
          QuadAOO_id_FALSEorTRUE <- NULL
          for(i in QuadAOO_id){
            if(nrow(count_area_sites_intersected_mapbiomas_df_silvicultura %>%
                    filter(QuadAOO == i)) == 0){
              QuadAOO_id_isZero <- T
            } else{
              QuadAOO_id_isZero <- F
            }
            QuadAOO_id_FALSEorTRUE_ <- data.frame(QuadAOO_id = i, isZero = QuadAOO_id_isZero)
            QuadAOO_id_FALSEorTRUE <- rbind(QuadAOO_id_FALSEorTRUE, QuadAOO_id_FALSEorTRUE_)
          }
          if(any(QuadAOO_id_FALSEorTRUE$isZero) == F){} else {
            count_area_sites_intersected_mapbiomas_df_silvicultura <- rbind(count_area_sites_intersected_mapbiomas_df_silvicultura,
                                                                            data.frame(QuadAOO = QuadAOO_id_FALSEorTRUE$QuadAOO_id[QuadAOO_id_FALSEorTRUE$isZero == T],
                                                                                       n = 0))
          }
          
          area_km2_silvicultura <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_silvicultura$QuadAOO,
            n = count_area_sites_intersected_mapbiomas_df_silvicultura$n * sites_aggregated_area_km2_num/count_area_sites_intersected_mapbiomas_df$n
          )
          porc_area_km2_silvicultura <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_silvicultura$QuadAOO,
            n = area_km2_silvicultura$n*100/sites_aggregated_area_km2_num
          )
          
          ## Outras lavouras temporárias
          count_area_sites_intersected_mapbiomas_df_outras_lavouras_temporarias <- sites_intersected_mapbiomas_df_outras_lavouras_temporarias %>% dplyr::group_by(QuadAOO) %>% count()
          
          QuadAOO_id_FALSEorTRUE <- NULL
          for(i in QuadAOO_id){
            if(nrow(count_area_sites_intersected_mapbiomas_df_outras_lavouras_temporarias %>%
                    filter(QuadAOO == i)) == 0){
              QuadAOO_id_isZero <- T
            } else{
              QuadAOO_id_isZero <- F
            }
            QuadAOO_id_FALSEorTRUE_ <- data.frame(QuadAOO_id = i, isZero = QuadAOO_id_isZero)
            QuadAOO_id_FALSEorTRUE <- rbind(QuadAOO_id_FALSEorTRUE, QuadAOO_id_FALSEorTRUE_)
          }
          if(any(QuadAOO_id_FALSEorTRUE$isZero) == F){} else {
            count_area_sites_intersected_mapbiomas_df_outras_lavouras_temporarias <- rbind(count_area_sites_intersected_mapbiomas_df_outras_lavouras_temporarias,
                                                                                           data.frame(QuadAOO = QuadAOO_id_FALSEorTRUE$QuadAOO_id[QuadAOO_id_FALSEorTRUE$isZero == T],
                                                                                                      n = 0))
          }
          
          area_km2_outras_lavouras_temporarias <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_outras_lavouras_temporarias$QuadAOO,
            n = count_area_sites_intersected_mapbiomas_df_outras_lavouras_temporarias$n * sites_aggregated_area_km2_num/count_area_sites_intersected_mapbiomas_df$n
          )
          porc_area_km2_outras_lavouras_temporarias <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_outras_lavouras_temporarias$QuadAOO,
            n = area_km2_outras_lavouras_temporarias$n*100/sites_aggregated_area_km2_num
          )
          
          ## Soja
          count_area_sites_intersected_mapbiomas_df_soja <- sites_intersected_mapbiomas_df_soja %>% dplyr::group_by(QuadAOO) %>% count()
          
          QuadAOO_id_FALSEorTRUE <- NULL
          for(i in QuadAOO_id){
            if(nrow(count_area_sites_intersected_mapbiomas_df_soja %>%
                    filter(QuadAOO == i)) == 0){
              QuadAOO_id_isZero <- T
            } else{
              QuadAOO_id_isZero <- F
            }
            QuadAOO_id_FALSEorTRUE_ <- data.frame(QuadAOO_id = i, isZero = QuadAOO_id_isZero)
            QuadAOO_id_FALSEorTRUE <- rbind(QuadAOO_id_FALSEorTRUE, QuadAOO_id_FALSEorTRUE_)
          }
          if(any(QuadAOO_id_FALSEorTRUE$isZero) == F){} else {
            count_area_sites_intersected_mapbiomas_df_soja <- rbind(count_area_sites_intersected_mapbiomas_df_soja,
                                                                    data.frame(QuadAOO = QuadAOO_id_FALSEorTRUE$QuadAOO_id[QuadAOO_id_FALSEorTRUE$isZero == T],
                                                                               n = 0))
          }
          
          area_km2_soja <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_soja$QuadAOO,
            n = count_area_sites_intersected_mapbiomas_df_soja$n * sites_aggregated_area_km2_num/count_area_sites_intersected_mapbiomas_df$n
          )
          porc_area_km2_soja <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_soja$QuadAOO,
            n = area_km2_soja$n*100/sites_aggregated_area_km2_num
          )
          
          ## Cana-de-açúcar
          count_area_sites_intersected_mapbiomas_df_cana <- sites_intersected_mapbiomas_df_cana %>% dplyr::group_by(QuadAOO) %>% count()
          
          QuadAOO_id_FALSEorTRUE <- NULL
          for(i in QuadAOO_id){
            if(nrow(count_area_sites_intersected_mapbiomas_df_cana %>%
                    filter(QuadAOO == i)) == 0){
              QuadAOO_id_isZero <- T
            } else{
              QuadAOO_id_isZero <- F
            }
            QuadAOO_id_FALSEorTRUE_ <- data.frame(QuadAOO_id = i, isZero = QuadAOO_id_isZero)
            QuadAOO_id_FALSEorTRUE <- rbind(QuadAOO_id_FALSEorTRUE, QuadAOO_id_FALSEorTRUE_)
          }
          if(any(QuadAOO_id_FALSEorTRUE$isZero) == F){} else {
            count_area_sites_intersected_mapbiomas_df_cana <- rbind(count_area_sites_intersected_mapbiomas_df_cana,
                                                                    data.frame(QuadAOO = QuadAOO_id_FALSEorTRUE$QuadAOO_id[QuadAOO_id_FALSEorTRUE$isZero == T],
                                                                               n = 0))
          }
          
          area_km2_cana <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_cana$QuadAOO,
            n = count_area_sites_intersected_mapbiomas_df_cana$n * sites_aggregated_area_km2_num/count_area_sites_intersected_mapbiomas_df$n
          )
          porc_area_km2_cana <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_cana$QuadAOO,
            n = area_km2_cana$n*100/sites_aggregated_area_km2_num
          )
          
          ## Lavouras perenes
          count_area_sites_intersected_mapbiomas_df_lavouras_perenes <- sites_intersected_mapbiomas_df_lavouras_perenes %>% dplyr::group_by(QuadAOO) %>% count()
          
          QuadAOO_id_FALSEorTRUE <- NULL
          for(i in QuadAOO_id){
            if(nrow(count_area_sites_intersected_mapbiomas_df_lavouras_perenes %>%
                    filter(QuadAOO == i)) == 0){
              QuadAOO_id_isZero <- T
            } else{
              QuadAOO_id_isZero <- F
            }
            QuadAOO_id_FALSEorTRUE_ <- data.frame(QuadAOO_id = i, isZero = QuadAOO_id_isZero)
            QuadAOO_id_FALSEorTRUE <- rbind(QuadAOO_id_FALSEorTRUE, QuadAOO_id_FALSEorTRUE_)
          }
          if(any(QuadAOO_id_FALSEorTRUE$isZero) == F){} else {
            count_area_sites_intersected_mapbiomas_df_lavouras_perenes <- rbind(count_area_sites_intersected_mapbiomas_df_lavouras_perenes,
                                                                                data.frame(QuadAOO = QuadAOO_id_FALSEorTRUE$QuadAOO_id[QuadAOO_id_FALSEorTRUE$isZero == T],
                                                                                           n = 0))
          }
          
          area_km2_lavouras_perenes <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_lavouras_perenes$QuadAOO,
            n = count_area_sites_intersected_mapbiomas_df_lavouras_perenes$n * sites_aggregated_area_km2_num/count_area_sites_intersected_mapbiomas_df$n
          )
          porc_area_km2_lavouras_perenes <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_lavouras_perenes$QuadAOO,
            n = area_km2_lavouras_perenes$n*100/sites_aggregated_area_km2_num
          )
          
          ## Pastagem
          count_area_sites_intersected_mapbiomas_df_pastagem <- sites_intersected_mapbiomas_df_pastagem %>% dplyr::group_by(QuadAOO) %>% count()
          
          QuadAOO_id_FALSEorTRUE <- NULL
          for(i in QuadAOO_id){
            if(nrow(count_area_sites_intersected_mapbiomas_df_pastagem %>%
                    filter(QuadAOO == i)) == 0){
              QuadAOO_id_isZero <- T
            } else{
              QuadAOO_id_isZero <- F
            }
            QuadAOO_id_FALSEorTRUE_ <- data.frame(QuadAOO_id = i, isZero = QuadAOO_id_isZero)
            QuadAOO_id_FALSEorTRUE <- rbind(QuadAOO_id_FALSEorTRUE, QuadAOO_id_FALSEorTRUE_)
          }
          if(any(QuadAOO_id_FALSEorTRUE$isZero) == F){} else {
            count_area_sites_intersected_mapbiomas_df_pastagem <- rbind(count_area_sites_intersected_mapbiomas_df_pastagem,
                                                                        data.frame(QuadAOO = QuadAOO_id_FALSEorTRUE$QuadAOO_id[QuadAOO_id_FALSEorTRUE$isZero == T],
                                                                                   n = 0))
          }
          
          area_km2_pastagem <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_pastagem$QuadAOO,
            n = count_area_sites_intersected_mapbiomas_df_pastagem$n * sites_aggregated_area_km2_num/count_area_sites_intersected_mapbiomas_df$n
          )
          porc_area_km2_pastagem <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_pastagem$QuadAOO,
            n = area_km2_pastagem$n*100/sites_aggregated_area_km2_num
          )
          
          ## Mosaico Pastagem e Agricultura
          count_area_sites_intersected_mapbiomas_df_mosaic_past_agric <- sites_intersected_mapbiomas_df_mosaic_past_agric %>% dplyr::group_by(QuadAOO) %>% count()
          
          QuadAOO_id_FALSEorTRUE <- NULL
          for(i in QuadAOO_id){
            if(nrow(count_area_sites_intersected_mapbiomas_df_mosaic_past_agric %>%
                    filter(QuadAOO == i)) == 0){
              QuadAOO_id_isZero <- T
            } else{
              QuadAOO_id_isZero <- F
            }
            QuadAOO_id_FALSEorTRUE_ <- data.frame(QuadAOO_id = i, isZero = QuadAOO_id_isZero)
            QuadAOO_id_FALSEorTRUE <- rbind(QuadAOO_id_FALSEorTRUE, QuadAOO_id_FALSEorTRUE_)
          }
          if(any(QuadAOO_id_FALSEorTRUE$isZero) == F){} else {
            count_area_sites_intersected_mapbiomas_df_mosaic_past_agric <- rbind(count_area_sites_intersected_mapbiomas_df_mosaic_past_agric,
                                                                                 data.frame(QuadAOO = QuadAOO_id_FALSEorTRUE$QuadAOO_id[QuadAOO_id_FALSEorTRUE$isZero == T],
                                                                                            n = 0))
          }
          
          area_km2_mosaic_past_agric <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_mosaic_past_agric$QuadAOO,
            n = count_area_sites_intersected_mapbiomas_df_mosaic_past_agric$n * sites_aggregated_area_km2_num/count_area_sites_intersected_mapbiomas_df$n
          )
          porc_area_km2_mosaic_past_agric <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_mosaic_past_agric$QuadAOO,
            n = area_km2_mosaic_past_agric$n*100/sites_aggregated_area_km2_num
          )
          
          ## Floresta
          count_area_sites_intersected_mapbiomas_df_floresta <- sites_intersected_mapbiomas_df_floresta %>% dplyr::group_by(QuadAOO) %>% count()
          
          QuadAOO_id_FALSEorTRUE <- NULL
          for(i in QuadAOO_id){
            if(nrow(count_area_sites_intersected_mapbiomas_df_floresta %>%
                    filter(QuadAOO == i)) == 0){
              QuadAOO_id_isZero <- T
            } else{
              QuadAOO_id_isZero <- F
            }
            QuadAOO_id_FALSEorTRUE_ <- data.frame(QuadAOO_id = i, isZero = QuadAOO_id_isZero)
            QuadAOO_id_FALSEorTRUE <- rbind(QuadAOO_id_FALSEorTRUE, QuadAOO_id_FALSEorTRUE_)
          }
          if(any(QuadAOO_id_FALSEorTRUE$isZero) == F){} else {
            count_area_sites_intersected_mapbiomas_df_floresta <- rbind(count_area_sites_intersected_mapbiomas_df_floresta,
                                                                        data.frame(QuadAOO = QuadAOO_id_FALSEorTRUE$QuadAOO_id[QuadAOO_id_FALSEorTRUE$isZero == T],
                                                                                   n = 0))
          }
          
          area_km2_floresta <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_floresta$QuadAOO,
            n = count_area_sites_intersected_mapbiomas_df_floresta$n * sites_aggregated_area_km2_num/count_area_sites_intersected_mapbiomas_df$n
          )
          porc_area_km2_floresta <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_floresta$QuadAOO,
            n = area_km2_floresta$n*100/sites_aggregated_area_km2_num
          )
          
          ## Savana
          count_area_sites_intersected_mapbiomas_df_savana <- sites_intersected_mapbiomas_df_savana %>% dplyr::group_by(QuadAOO) %>% count()
          
          QuadAOO_id_FALSEorTRUE <- NULL
          for(i in QuadAOO_id){
            if(nrow(count_area_sites_intersected_mapbiomas_df_savana %>%
                    filter(QuadAOO == i)) == 0){
              QuadAOO_id_isZero <- T
            } else{
              QuadAOO_id_isZero <- F
            }
            QuadAOO_id_FALSEorTRUE_ <- data.frame(QuadAOO_id = i, isZero = QuadAOO_id_isZero)
            QuadAOO_id_FALSEorTRUE <- rbind(QuadAOO_id_FALSEorTRUE, QuadAOO_id_FALSEorTRUE_)
          }
          if(any(QuadAOO_id_FALSEorTRUE$isZero) == F){} else {
            count_area_sites_intersected_mapbiomas_df_savana <- rbind(count_area_sites_intersected_mapbiomas_df_savana,
                                                                      data.frame(QuadAOO = QuadAOO_id_FALSEorTRUE$QuadAOO_id[QuadAOO_id_FALSEorTRUE$isZero == T],
                                                                                 n = 0))
          }
          
          area_km2_savana <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_savana$QuadAOO,
            n = count_area_sites_intersected_mapbiomas_df_savana$n * sites_aggregated_area_km2_num/count_area_sites_intersected_mapbiomas_df$n
          )
          porc_area_km2_savana <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_savana$QuadAOO,
            n = area_km2_savana$n*100/sites_aggregated_area_km2_num
          )
          
          ## Mangue
          count_area_sites_intersected_mapbiomas_df_mangue <- sites_intersected_mapbiomas_df_mangue %>% dplyr::group_by(QuadAOO) %>% count()
          
          QuadAOO_id_FALSEorTRUE <- NULL
          for(i in QuadAOO_id){
            if(nrow(count_area_sites_intersected_mapbiomas_df_mangue %>%
                    filter(QuadAOO == i)) == 0){
              QuadAOO_id_isZero <- T
            } else{
              QuadAOO_id_isZero <- F
            }
            QuadAOO_id_FALSEorTRUE_ <- data.frame(QuadAOO_id = i, isZero = QuadAOO_id_isZero)
            QuadAOO_id_FALSEorTRUE <- rbind(QuadAOO_id_FALSEorTRUE, QuadAOO_id_FALSEorTRUE_)
          }
          if(any(QuadAOO_id_FALSEorTRUE$isZero) == F){} else {
            count_area_sites_intersected_mapbiomas_df_mangue <- rbind(count_area_sites_intersected_mapbiomas_df_mangue,
                                                                      data.frame(QuadAOO = QuadAOO_id_FALSEorTRUE$QuadAOO_id[QuadAOO_id_FALSEorTRUE$isZero == T],
                                                                                 n = 0))
          }
          
          area_km2_mangue <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_mangue$QuadAOO,
            n = count_area_sites_intersected_mapbiomas_df_mangue$n * sites_aggregated_area_km2_num/count_area_sites_intersected_mapbiomas_df$n
          )
          porc_area_km2_mangue <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_mangue$QuadAOO,
            n = area_km2_mangue$n*100/sites_aggregated_area_km2_num
          )
          
          ## Campo Alagado e Área Pantanosa
          count_area_sites_intersected_mapbiomas_df_alagado_pantanosa <- sites_intersected_mapbiomas_df_alagado_pantanosa %>% dplyr::group_by(QuadAOO) %>% count()
          
          QuadAOO_id_FALSEorTRUE <- NULL
          for(i in QuadAOO_id){
            if(nrow(count_area_sites_intersected_mapbiomas_df_alagado_pantanosa %>%
                    filter(QuadAOO == i)) == 0){
              QuadAOO_id_isZero <- T
            } else{
              QuadAOO_id_isZero <- F
            }
            QuadAOO_id_FALSEorTRUE_ <- data.frame(QuadAOO_id = i, isZero = QuadAOO_id_isZero)
            QuadAOO_id_FALSEorTRUE <- rbind(QuadAOO_id_FALSEorTRUE, QuadAOO_id_FALSEorTRUE_)
          }
          if(any(QuadAOO_id_FALSEorTRUE$isZero) == F){} else {
            count_area_sites_intersected_mapbiomas_df_alagado_pantanosa <- rbind(count_area_sites_intersected_mapbiomas_df_alagado_pantanosa,
                                                                                 data.frame(QuadAOO = QuadAOO_id_FALSEorTRUE$QuadAOO_id[QuadAOO_id_FALSEorTRUE$isZero == T],
                                                                                            n = 0))
          }
          
          area_km2_alagado_pantanosa <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_alagado_pantanosa$QuadAOO,
            n = count_area_sites_intersected_mapbiomas_df_alagado_pantanosa$n * sites_aggregated_area_km2_num/count_area_sites_intersected_mapbiomas_df$n
          )
          porc_area_km2_alagado_pantanosa <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_alagado_pantanosa$QuadAOO,
            n = area_km2_alagado_pantanosa$n*100/sites_aggregated_area_km2_num
          )
          
          ## Formação Campestre
          count_area_sites_intersected_mapbiomas_df_campos <- sites_intersected_mapbiomas_df_campos %>% dplyr::group_by(QuadAOO) %>% count()
          
          QuadAOO_id_FALSEorTRUE <- NULL
          for(i in QuadAOO_id){
            if(nrow(count_area_sites_intersected_mapbiomas_df_campos %>%
                    filter(QuadAOO == i)) == 0){
              QuadAOO_id_isZero <- T
            } else{
              QuadAOO_id_isZero <- F
            }
            QuadAOO_id_FALSEorTRUE_ <- data.frame(QuadAOO_id = i, isZero = QuadAOO_id_isZero)
            QuadAOO_id_FALSEorTRUE <- rbind(QuadAOO_id_FALSEorTRUE, QuadAOO_id_FALSEorTRUE_)
          }
          if(any(QuadAOO_id_FALSEorTRUE$isZero) == F){} else {
            count_area_sites_intersected_mapbiomas_df_campos <- rbind(count_area_sites_intersected_mapbiomas_df_campos,
                                                                      data.frame(QuadAOO = QuadAOO_id_FALSEorTRUE$QuadAOO_id[QuadAOO_id_FALSEorTRUE$isZero == T],
                                                                                 n = 0))
          }
          
          area_km2_campos <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_campos$QuadAOO,
            n = count_area_sites_intersected_mapbiomas_df_campos$n * sites_aggregated_area_km2_num/count_area_sites_intersected_mapbiomas_df$n
          )
          porc_area_km2_campos <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_campos$QuadAOO,
            n = area_km2_campos$n*100/sites_aggregated_area_km2_num
          )
          
          ## Outras Formações não Florestais
          count_area_sites_intersected_mapbiomas_df_outras_nao_florestais <- sites_intersected_mapbiomas_df_outras_nao_florestais %>% dplyr::group_by(QuadAOO) %>% count()
          
          QuadAOO_id_FALSEorTRUE <- NULL
          for(i in QuadAOO_id){
            if(nrow(count_area_sites_intersected_mapbiomas_df_outras_nao_florestais %>%
                    filter(QuadAOO == i)) == 0){
              QuadAOO_id_isZero <- T
            } else{
              QuadAOO_id_isZero <- F
            }
            QuadAOO_id_FALSEorTRUE_ <- data.frame(QuadAOO_id = i, isZero = QuadAOO_id_isZero)
            QuadAOO_id_FALSEorTRUE <- rbind(QuadAOO_id_FALSEorTRUE, QuadAOO_id_FALSEorTRUE_)
          }
          if(any(QuadAOO_id_FALSEorTRUE$isZero) == F){} else {
            count_area_sites_intersected_mapbiomas_df_outras_nao_florestais <- rbind(count_area_sites_intersected_mapbiomas_df_outras_nao_florestais,
                                                                                     data.frame(QuadAOO = QuadAOO_id_FALSEorTRUE$QuadAOO_id[QuadAOO_id_FALSEorTRUE$isZero == T],
                                                                                                n = 0))
          }
          
          area_km2_outras_nao_florestais <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_outras_nao_florestais$QuadAOO,
            n = count_area_sites_intersected_mapbiomas_df_outras_nao_florestais$n * sites_aggregated_area_km2_num/count_area_sites_intersected_mapbiomas_df$n
          )
          porc_area_km2_outras_nao_florestais <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_outras_nao_florestais$QuadAOO,
            n = area_km2_outras_nao_florestais$n*100/sites_aggregated_area_km2_num
          )
          
          ## Lavoura Temporária
          count_area_sites_intersected_mapbiomas_df_lavouras_temporarias <- sites_intersected_mapbiomas_df_lavouras_temporarias %>% dplyr::group_by(QuadAOO) %>% count()
          
          QuadAOO_id_FALSEorTRUE <- NULL
          for(i in QuadAOO_id){
            if(nrow(count_area_sites_intersected_mapbiomas_df_lavouras_temporarias %>%
                    filter(QuadAOO == i)) == 0){
              QuadAOO_id_isZero <- T
            } else{
              QuadAOO_id_isZero <- F
            }
            QuadAOO_id_FALSEorTRUE_ <- data.frame(QuadAOO_id = i, isZero = QuadAOO_id_isZero)
            QuadAOO_id_FALSEorTRUE <- rbind(QuadAOO_id_FALSEorTRUE, QuadAOO_id_FALSEorTRUE_)
          }
          if(any(QuadAOO_id_FALSEorTRUE$isZero) == F){} else {
            count_area_sites_intersected_mapbiomas_df_lavouras_temporarias <- rbind(count_area_sites_intersected_mapbiomas_df_lavouras_temporarias,
                                                                                    data.frame(QuadAOO = QuadAOO_id_FALSEorTRUE$QuadAOO_id[QuadAOO_id_FALSEorTRUE$isZero == T],
                                                                                               n = 0))
          }
          
          area_km2_lavouras_temporarias <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_lavouras_temporarias$QuadAOO,
            n = count_area_sites_intersected_mapbiomas_df_lavouras_temporarias$n * sites_aggregated_area_km2_num/count_area_sites_intersected_mapbiomas_df$n
          )
          porc_area_km2_lavouras_temporarias <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_lavouras_temporarias$QuadAOO,
            n = area_km2_lavouras_temporarias$n*100/sites_aggregated_area_km2_num
          )
          
          ## Praia, Duna e Areal
          count_area_sites_intersected_mapbiomas_df_praia_duna_areal <- sites_intersected_mapbiomas_df_praia_duna_areal %>% dplyr::group_by(QuadAOO) %>% count()
          
          QuadAOO_id_FALSEorTRUE <- NULL
          for(i in QuadAOO_id){
            if(nrow(count_area_sites_intersected_mapbiomas_df_praia_duna_areal %>%
                    filter(QuadAOO == i)) == 0){
              QuadAOO_id_isZero <- T
            } else{
              QuadAOO_id_isZero <- F
            }
            QuadAOO_id_FALSEorTRUE_ <- data.frame(QuadAOO_id = i, isZero = QuadAOO_id_isZero)
            QuadAOO_id_FALSEorTRUE <- rbind(QuadAOO_id_FALSEorTRUE, QuadAOO_id_FALSEorTRUE_)
          }
          if(any(QuadAOO_id_FALSEorTRUE$isZero) == F){} else {
            count_area_sites_intersected_mapbiomas_df_praia_duna_areal <- rbind(count_area_sites_intersected_mapbiomas_df_praia_duna_areal,
                                                                                data.frame(QuadAOO = QuadAOO_id_FALSEorTRUE$QuadAOO_id[QuadAOO_id_FALSEorTRUE$isZero == T],
                                                                                           n = 0))
          }
          
          area_km2_praia_duna_areal <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_praia_duna_areal$QuadAOO,
            n = count_area_sites_intersected_mapbiomas_df_praia_duna_areal$n * sites_aggregated_area_km2_num/count_area_sites_intersected_mapbiomas_df$n
          )
          porc_area_km2_praia_duna_areal <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_praia_duna_areal$QuadAOO,
            n = area_km2_praia_duna_areal$n*100/sites_aggregated_area_km2_num
          )
          
          ## Outras Áreas não Vegetadas
          count_area_sites_intersected_mapbiomas_df_outras_nao_vegetadas <- sites_intersected_mapbiomas_df_outras_nao_vegetadas %>% dplyr::group_by(QuadAOO) %>% count()
          
          QuadAOO_id_FALSEorTRUE <- NULL
          for(i in QuadAOO_id){
            if(nrow(count_area_sites_intersected_mapbiomas_df_outras_nao_vegetadas %>%
                    filter(QuadAOO == i)) == 0){
              QuadAOO_id_isZero <- T
            } else{
              QuadAOO_id_isZero <- F
            }
            QuadAOO_id_FALSEorTRUE_ <- data.frame(QuadAOO_id = i, isZero = QuadAOO_id_isZero)
            QuadAOO_id_FALSEorTRUE <- rbind(QuadAOO_id_FALSEorTRUE, QuadAOO_id_FALSEorTRUE_)
          }
          if(any(QuadAOO_id_FALSEorTRUE$isZero) == F){} else {
            count_area_sites_intersected_mapbiomas_df_outras_nao_vegetadas <- rbind(count_area_sites_intersected_mapbiomas_df_outras_nao_vegetadas,
                                                                                    data.frame(QuadAOO = QuadAOO_id_FALSEorTRUE$QuadAOO_id[QuadAOO_id_FALSEorTRUE$isZero == T],
                                                                                               n = 0))
          }
          
          area_km2_outras_nao_vegetadas <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_outras_nao_vegetadas$QuadAOO,
            n = count_area_sites_intersected_mapbiomas_df_outras_nao_vegetadas$n * sites_aggregated_area_km2_num/count_area_sites_intersected_mapbiomas_df$n
          )
          porc_area_km2_outras_nao_vegetadas <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_outras_nao_vegetadas$QuadAOO,
            n = area_km2_outras_nao_vegetadas$n*100/sites_aggregated_area_km2_num
          )
          
          ## Não Observado
          count_area_sites_intersected_mapbiomas_df_nao_observado <- sites_intersected_mapbiomas_df_nao_observado %>% dplyr::group_by(QuadAOO) %>% count()
          
          QuadAOO_id_FALSEorTRUE <- NULL
          for(i in QuadAOO_id){
            if(nrow(count_area_sites_intersected_mapbiomas_df_nao_observado %>%
                    filter(QuadAOO == i)) == 0){
              QuadAOO_id_isZero <- T
            } else{
              QuadAOO_id_isZero <- F
            }
            QuadAOO_id_FALSEorTRUE_ <- data.frame(QuadAOO_id = i, isZero = QuadAOO_id_isZero)
            QuadAOO_id_FALSEorTRUE <- rbind(QuadAOO_id_FALSEorTRUE, QuadAOO_id_FALSEorTRUE_)
          }
          if(any(QuadAOO_id_FALSEorTRUE$isZero) == F){} else {
            count_area_sites_intersected_mapbiomas_df_nao_observado <- rbind(count_area_sites_intersected_mapbiomas_df_nao_observado,
                                                                             data.frame(QuadAOO = QuadAOO_id_FALSEorTRUE$QuadAOO_id[QuadAOO_id_FALSEorTRUE$isZero == T],
                                                                                        n = 0))
          }
          
          area_km2_nao_observado <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_nao_observado$QuadAOO,
            n = count_area_sites_intersected_mapbiomas_df_nao_observado$n * sites_aggregated_area_km2_num/count_area_sites_intersected_mapbiomas_df$n
          )
          porc_area_km2_nao_observado <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_nao_observado$QuadAOO,
            n = area_km2_nao_observado$n*100/sites_aggregated_area_km2_num
          )
          
          ## Afloramento Rochoso
          count_area_sites_intersected_mapbiomas_df_afloramento_rochoso <- sites_intersected_mapbiomas_df_afloramento_rochoso %>% dplyr::group_by(QuadAOO) %>% count()
          
          QuadAOO_id_FALSEorTRUE <- NULL
          for(i in QuadAOO_id){
            if(nrow(count_area_sites_intersected_mapbiomas_df_afloramento_rochoso %>%
                    filter(QuadAOO == i)) == 0){
              QuadAOO_id_isZero <- T
            } else{
              QuadAOO_id_isZero <- F
            }
            QuadAOO_id_FALSEorTRUE_ <- data.frame(QuadAOO_id = i, isZero = QuadAOO_id_isZero)
            QuadAOO_id_FALSEorTRUE <- rbind(QuadAOO_id_FALSEorTRUE, QuadAOO_id_FALSEorTRUE_)
          }
          if(any(QuadAOO_id_FALSEorTRUE$isZero) == F){} else {
            count_area_sites_intersected_mapbiomas_df_afloramento_rochoso <- rbind(count_area_sites_intersected_mapbiomas_df_afloramento_rochoso,
                                                                                   data.frame(QuadAOO = QuadAOO_id_FALSEorTRUE$QuadAOO_id[QuadAOO_id_FALSEorTRUE$isZero == T],
                                                                                              n = 0))
          }
          
          area_km2_afloramento_rochoso <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_afloramento_rochoso$QuadAOO,
            n = count_area_sites_intersected_mapbiomas_df_afloramento_rochoso$n * sites_aggregated_area_km2_num/count_area_sites_intersected_mapbiomas_df$n
          )
          porc_area_km2_afloramento_rochoso <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_afloramento_rochoso$QuadAOO,
            n = area_km2_afloramento_rochoso$n*100/sites_aggregated_area_km2_num
          )
          
          ## Aquicultura
          count_area_sites_intersected_mapbiomas_df_aquicultura <- sites_intersected_mapbiomas_df_aquicultura %>% dplyr::group_by(QuadAOO) %>% count()
          
          QuadAOO_id_FALSEorTRUE <- NULL
          for(i in QuadAOO_id){
            if(nrow(count_area_sites_intersected_mapbiomas_df_aquicultura %>%
                    filter(QuadAOO == i)) == 0){
              QuadAOO_id_isZero <- T
            } else{
              QuadAOO_id_isZero <- F
            }
            QuadAOO_id_FALSEorTRUE_ <- data.frame(QuadAOO_id = i, isZero = QuadAOO_id_isZero)
            QuadAOO_id_FALSEorTRUE <- rbind(QuadAOO_id_FALSEorTRUE, QuadAOO_id_FALSEorTRUE_)
          }
          if(any(QuadAOO_id_FALSEorTRUE$isZero) == F){} else {
            count_area_sites_intersected_mapbiomas_df_aquicultura <- rbind(count_area_sites_intersected_mapbiomas_df_aquicultura,
                                                                           data.frame(QuadAOO = QuadAOO_id_FALSEorTRUE$QuadAOO_id[QuadAOO_id_FALSEorTRUE$isZero == T],
                                                                                      n = 0))
          }
          
          area_km2_aquicultura <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_aquicultura$QuadAOO,
            n = count_area_sites_intersected_mapbiomas_df_aquicultura$n * sites_aggregated_area_km2_num/count_area_sites_intersected_mapbiomas_df$n
          )
          porc_area_km2_aquicultura <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_aquicultura$QuadAOO,
            n = area_km2_aquicultura$n*100/sites_aggregated_area_km2_num
          )
          
          ## Apicum
          count_area_sites_intersected_mapbiomas_df_apicum <- sites_intersected_mapbiomas_df_apicum %>% dplyr::group_by(QuadAOO) %>% count()
          
          QuadAOO_id_FALSEorTRUE <- NULL
          for(i in QuadAOO_id){
            if(nrow(count_area_sites_intersected_mapbiomas_df_apicum %>%
                    filter(QuadAOO == i)) == 0){
              QuadAOO_id_isZero <- T
            } else{
              QuadAOO_id_isZero <- F
            }
            QuadAOO_id_FALSEorTRUE_ <- data.frame(QuadAOO_id = i, isZero = QuadAOO_id_isZero)
            QuadAOO_id_FALSEorTRUE <- rbind(QuadAOO_id_FALSEorTRUE, QuadAOO_id_FALSEorTRUE_)
          }
          if(any(QuadAOO_id_FALSEorTRUE$isZero) == F){} else {
            count_area_sites_intersected_mapbiomas_df_apicum <- rbind(count_area_sites_intersected_mapbiomas_df_apicum,
                                                                      data.frame(QuadAOO = QuadAOO_id_FALSEorTRUE$QuadAOO_id[QuadAOO_id_FALSEorTRUE$isZero == T],
                                                                                 n = 0))
          }
          
          area_km2_apicum <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_apicum$QuadAOO,
            n = count_area_sites_intersected_mapbiomas_df_apicum$n * sites_aggregated_area_km2_num/count_area_sites_intersected_mapbiomas_df$n
          )
          porc_area_km2_apicum <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_apicum$QuadAOO,
            n = area_km2_apicum$n*100/sites_aggregated_area_km2_num
          )
          
          ## Rio, Lago e Oceano
          count_area_sites_intersected_mapbiomas_df_rio_lago_oceano <- sites_intersected_mapbiomas_df_rio_lago_oceano %>% dplyr::group_by(QuadAOO) %>% count()
          
          QuadAOO_id_FALSEorTRUE <- NULL
          for(i in QuadAOO_id){
            if(nrow(count_area_sites_intersected_mapbiomas_df_rio_lago_oceano %>%
                    filter(QuadAOO == i)) == 0){
              QuadAOO_id_isZero <- T
            } else{
              QuadAOO_id_isZero <- F
            }
            QuadAOO_id_FALSEorTRUE_ <- data.frame(QuadAOO_id = i, isZero = QuadAOO_id_isZero)
            QuadAOO_id_FALSEorTRUE <- rbind(QuadAOO_id_FALSEorTRUE, QuadAOO_id_FALSEorTRUE_)
          }
          if(any(QuadAOO_id_FALSEorTRUE$isZero) == F){} else {
            count_area_sites_intersected_mapbiomas_df_rio_lago_oceano <- rbind(count_area_sites_intersected_mapbiomas_df_rio_lago_oceano,
                                                                               data.frame(QuadAOO = QuadAOO_id_FALSEorTRUE$QuadAOO_id[QuadAOO_id_FALSEorTRUE$isZero == T],
                                                                                          n = 0))
          }
          
          area_km2_rio_lago_oceano <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_rio_lago_oceano$QuadAOO,
            n = count_area_sites_intersected_mapbiomas_df_rio_lago_oceano$n * sites_aggregated_area_km2_num/count_area_sites_intersected_mapbiomas_df$n
          )
          porc_area_km2_rio_lago_oceano <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_rio_lago_oceano$QuadAOO,
            n = area_km2_rio_lago_oceano$n*100/sites_aggregated_area_km2_num
          )
          
          ## Arroz
          count_area_sites_intersected_mapbiomas_df_arroz <- sites_intersected_mapbiomas_df_arroz %>% dplyr::group_by(QuadAOO) %>% count()
          
          QuadAOO_id_FALSEorTRUE <- NULL
          for(i in QuadAOO_id){
            if(nrow(count_area_sites_intersected_mapbiomas_df_arroz %>%
                    filter(QuadAOO == i)) == 0){
              QuadAOO_id_isZero <- T
            } else{
              QuadAOO_id_isZero <- F
            }
            QuadAOO_id_FALSEorTRUE_ <- data.frame(QuadAOO_id = i, isZero = QuadAOO_id_isZero)
            QuadAOO_id_FALSEorTRUE <- rbind(QuadAOO_id_FALSEorTRUE, QuadAOO_id_FALSEorTRUE_)
          }
          if(any(QuadAOO_id_FALSEorTRUE$isZero) == F){} else {
            count_area_sites_intersected_mapbiomas_df_arroz <- rbind(count_area_sites_intersected_mapbiomas_df_arroz,
                                                                     data.frame(QuadAOO = QuadAOO_id_FALSEorTRUE$QuadAOO_id[QuadAOO_id_FALSEorTRUE$isZero == T],
                                                                                n = 0))
          }
          
          area_km2_arroz <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_arroz$QuadAOO,
            n = count_area_sites_intersected_mapbiomas_df_arroz$n * sites_aggregated_area_km2_num/count_area_sites_intersected_mapbiomas_df$n
          )
          porc_area_km2_arroz <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_arroz$QuadAOO,
            n = area_km2_arroz$n*100/sites_aggregated_area_km2_num
          )
          
          ## Café
          count_area_sites_intersected_mapbiomas_df_cafe <- sites_intersected_mapbiomas_df_cafe %>% dplyr::group_by(QuadAOO) %>% count()
          
          QuadAOO_id_FALSEorTRUE <- NULL
          for(i in QuadAOO_id){
            if(nrow(count_area_sites_intersected_mapbiomas_df_cafe %>%
                    filter(QuadAOO == i)) == 0){
              QuadAOO_id_isZero <- T
            } else{
              QuadAOO_id_isZero <- F
            }
            QuadAOO_id_FALSEorTRUE_ <- data.frame(QuadAOO_id = i, isZero = QuadAOO_id_isZero)
            QuadAOO_id_FALSEorTRUE <- rbind(QuadAOO_id_FALSEorTRUE, QuadAOO_id_FALSEorTRUE_)
          }
          if(any(QuadAOO_id_FALSEorTRUE$isZero) == F){} else {
            count_area_sites_intersected_mapbiomas_df_cafe <- rbind(count_area_sites_intersected_mapbiomas_df_cafe,
                                                                    data.frame(QuadAOO = QuadAOO_id_FALSEorTRUE$QuadAOO_id[QuadAOO_id_FALSEorTRUE$isZero == T],
                                                                               n = 0))
          }
          
          area_km2_cafe <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_cafe$QuadAOO,
            n = count_area_sites_intersected_mapbiomas_df_cafe$n * sites_aggregated_area_km2_num/count_area_sites_intersected_mapbiomas_df$n
          )
          porc_area_km2_cafe <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_cafe$QuadAOO,
            n = area_km2_cafe$n*100/sites_aggregated_area_km2_num
          )
          
          ## Citrus
          count_area_sites_intersected_mapbiomas_df_citrus <- sites_intersected_mapbiomas_df_citrus %>% dplyr::group_by(QuadAOO) %>% count()
          
          QuadAOO_id_FALSEorTRUE <- NULL
          for(i in QuadAOO_id){
            if(nrow(count_area_sites_intersected_mapbiomas_df_citrus %>%
                    filter(QuadAOO == i)) == 0){
              QuadAOO_id_isZero <- T
            } else{
              QuadAOO_id_isZero <- F
            }
            QuadAOO_id_FALSEorTRUE_ <- data.frame(QuadAOO_id = i, isZero = QuadAOO_id_isZero)
            QuadAOO_id_FALSEorTRUE <- rbind(QuadAOO_id_FALSEorTRUE, QuadAOO_id_FALSEorTRUE_)
          }
          if(any(QuadAOO_id_FALSEorTRUE$isZero) == F){} else {
            count_area_sites_intersected_mapbiomas_df_citrus <- rbind(count_area_sites_intersected_mapbiomas_df_citrus,
                                                                      data.frame(QuadAOO = QuadAOO_id_FALSEorTRUE$QuadAOO_id[QuadAOO_id_FALSEorTRUE$isZero == T],
                                                                                 n = 0))
          }
          
          area_km2_citrus <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_citrus$QuadAOO,
            n = count_area_sites_intersected_mapbiomas_df_citrus$n * sites_aggregated_area_km2_num/count_area_sites_intersected_mapbiomas_df$n
          )
          porc_area_km2_citrus <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_citrus$QuadAOO,
            n = area_km2_citrus$n*100/sites_aggregated_area_km2_num
          )
          
          ## Outras Lavouras Perenes
          count_area_sites_intersected_mapbiomas_df_outras_lavouras_perenes <- sites_intersected_mapbiomas_df_outras_lavouras_perenes %>% dplyr::group_by(QuadAOO) %>% count()
          
          QuadAOO_id_FALSEorTRUE <- NULL
          for(i in QuadAOO_id){
            if(nrow(count_area_sites_intersected_mapbiomas_df_outras_lavouras_perenes %>%
                    filter(QuadAOO == i)) == 0){
              QuadAOO_id_isZero <- T
            } else{
              QuadAOO_id_isZero <- F
            }
            QuadAOO_id_FALSEorTRUE_ <- data.frame(QuadAOO_id = i, isZero = QuadAOO_id_isZero)
            QuadAOO_id_FALSEorTRUE <- rbind(QuadAOO_id_FALSEorTRUE, QuadAOO_id_FALSEorTRUE_)
          }
          if(any(QuadAOO_id_FALSEorTRUE$isZero) == F){} else {
            count_area_sites_intersected_mapbiomas_df_outras_lavouras_perenes <- rbind(count_area_sites_intersected_mapbiomas_df_outras_lavouras_perenes,
                                                                                       data.frame(QuadAOO = QuadAOO_id_FALSEorTRUE$QuadAOO_id[QuadAOO_id_FALSEorTRUE$isZero == T],
                                                                                                  n = 0))
          }
          
          area_km2_outras_lavouras_perenes <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_outras_lavouras_perenes$QuadAOO,
            n = count_area_sites_intersected_mapbiomas_df_outras_lavouras_perenes$n * sites_aggregated_area_km2_num/count_area_sites_intersected_mapbiomas_df$n
          )
          porc_area_km2_outras_lavouras_perenes <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_outras_lavouras_perenes$QuadAOO,
            n = area_km2_outras_lavouras_perenes$n*100/sites_aggregated_area_km2_num
          )
          
          ## Restinga Arborizada
          count_area_sites_intersected_mapbiomas_df_restinga_arborizada <- sites_intersected_mapbiomas_df_restinga_arborizada %>% dplyr::group_by(QuadAOO) %>% count()
          
          QuadAOO_id_FALSEorTRUE <- NULL
          for(i in QuadAOO_id){
            if(nrow(count_area_sites_intersected_mapbiomas_df_restinga_arborizada %>%
                    filter(QuadAOO == i)) == 0){
              QuadAOO_id_isZero <- T
            } else{
              QuadAOO_id_isZero <- F
            }
            QuadAOO_id_FALSEorTRUE_ <- data.frame(QuadAOO_id = i, isZero = QuadAOO_id_isZero)
            QuadAOO_id_FALSEorTRUE <- rbind(QuadAOO_id_FALSEorTRUE, QuadAOO_id_FALSEorTRUE_)
          }
          if(any(QuadAOO_id_FALSEorTRUE$isZero) == F){} else {
            count_area_sites_intersected_mapbiomas_df_restinga_arborizada <- rbind(count_area_sites_intersected_mapbiomas_df_restinga_arborizada,
                                                                                   data.frame(QuadAOO = QuadAOO_id_FALSEorTRUE$QuadAOO_id[QuadAOO_id_FALSEorTRUE$isZero == T],
                                                                                              n = 0))
          }
          
          area_km2_restinga_arborizada <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_restinga_arborizada$QuadAOO,
            n = count_area_sites_intersected_mapbiomas_df_restinga_arborizada$n * sites_aggregated_area_km2_num/count_area_sites_intersected_mapbiomas_df$n
          )
          porc_area_km2_restinga_arborizada <- data.frame(
            Quad_AOO = count_area_sites_intersected_mapbiomas_df_restinga_arborizada$QuadAOO,
            n = area_km2_restinga_arborizada$n*100/sites_aggregated_area_km2_num
          )
          
          
          # Output Mapbiomas final ####
          final_output_mapbiomas_urbano <- data.frame(Species = ESPECIE,
                                                      Quad_AOO = count_area_sites_intersected_mapbiomas_df_urbana$QuadAOO,
                                                      Classe = "Infraestrutura Urbana",
                                                      Area_AOO_sites_km2 = as.numeric(area_km2_urbana$n),
                                                      Area_AOO_km2 = AOO_km2,
                                                      Porcentagem_AOO = round(as.numeric(porc_area_km2_urbana$n), 2),
                                                      AOO_util_km2 = sites_aggregated_area_km2_num,
                                                      Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_urbano)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_urbano)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_mineracao <- data.frame(Species = ESPECIE,
                                                         Quad_AOO = count_area_sites_intersected_mapbiomas_df_mineracao$QuadAOO,
                                                         Classe = "Mineração",
                                                         Area_AOO_sites_km2 = as.numeric(area_km2_mineracao$n),
                                                         Area_AOO_km2 = AOO_km2,
                                                         Porcentagem_AOO = round(as.numeric(porc_area_km2_mineracao$n), 2),
                                                         AOO_util_km2 = sites_aggregated_area_km2_num,
                                                         Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_mineracao)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_mineracao)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_silvicultura <- data.frame(Species = ESPECIE,
                                                            Quad_AOO = count_area_sites_intersected_mapbiomas_df_silvicultura$QuadAOO,
                                                            Classe = "Silvicultura",
                                                            Area_AOO_sites_km2 = as.numeric(area_km2_silvicultura$n),
                                                            Area_AOO_km2 = AOO_km2,
                                                            Porcentagem_AOO = round(as.numeric(porc_area_km2_silvicultura$n), 2),
                                                            AOO_util_km2 = sites_aggregated_area_km2_num,
                                                            Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_silvicultura)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_silvicultura)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_outras_lavouras_temporarias <- data.frame(Species = ESPECIE,
                                                                           Quad_AOO = count_area_sites_intersected_mapbiomas_df_outras_lavouras_temporarias$QuadAOO,
                                                                           Classe = "Outras lavouras temporárias",
                                                                           Area_AOO_sites_km2 = as.numeric(area_km2_outras_lavouras_temporarias$n),
                                                                           Area_AOO_km2 = AOO_km2,
                                                                           Porcentagem_AOO = round(as.numeric(porc_area_km2_outras_lavouras_temporarias$n), 2),
                                                                           AOO_util_km2 = sites_aggregated_area_km2_num,
                                                                           Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_outras_lavouras_temporarias)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_outras_lavouras_temporarias)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_soja <- data.frame(Species = ESPECIE,
                                                    Quad_AOO = count_area_sites_intersected_mapbiomas_df_soja$QuadAOO,
                                                    Classe = "Soja",
                                                    Area_AOO_sites_km2 = as.numeric(area_km2_soja$n),
                                                    Area_AOO_km2 = AOO_km2,
                                                    Porcentagem_AOO = round(as.numeric(porc_area_km2_soja$n), 2),
                                                    AOO_util_km2 = sites_aggregated_area_km2_num,
                                                    Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_soja)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_soja)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_cana <- data.frame(Species = ESPECIE,
                                                    Quad_AOO = count_area_sites_intersected_mapbiomas_df_cana$QuadAOO,
                                                    Classe = "Cana-de-açúcar",
                                                    Area_AOO_sites_km2 = as.numeric(area_km2_cana$n),
                                                    Area_AOO_km2 = AOO_km2,
                                                    Porcentagem_AOO = round(as.numeric(porc_area_km2_cana$n), 2),
                                                    AOO_util_km2 = sites_aggregated_area_km2_num,
                                                    Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_cana)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_cana)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_lavouras_perenes <- data.frame(Species = ESPECIE,
                                                                Quad_AOO = count_area_sites_intersected_mapbiomas_df_lavouras_perenes$QuadAOO,
                                                                Classe = "Lavouras perenes",
                                                                Area_AOO_sites_km2 = as.numeric(area_km2_lavouras_perenes$n),
                                                                Area_AOO_km2 = AOO_km2,
                                                                Porcentagem_AOO = round(as.numeric(porc_area_km2_lavouras_perenes$n), 2),
                                                                AOO_util_km2 = sites_aggregated_area_km2_num,
                                                                Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_lavouras_perenes)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_lavouras_perenes)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_pastagem <- data.frame(Species = ESPECIE,
                                                        Quad_AOO = count_area_sites_intersected_mapbiomas_df_pastagem$QuadAOO,
                                                        Classe = "Pastagem",
                                                        Area_AOO_sites_km2 = as.numeric(area_km2_pastagem$n),
                                                        Area_AOO_km2 = AOO_km2,
                                                        Porcentagem_AOO = round(as.numeric(porc_area_km2_pastagem$n), 2),
                                                        AOO_util_km2 = sites_aggregated_area_km2_num,
                                                        Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_pastagem)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_pastagem)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_mosaic_past_agric <- data.frame(Species = ESPECIE,
                                                                 Quad_AOO = count_area_sites_intersected_mapbiomas_df_mosaic_past_agric$QuadAOO,
                                                                 Classe = "Mosaico Agricultura e Pastagem",
                                                                 Area_AOO_sites_km2 = as.numeric(area_km2_mosaic_past_agric$n),
                                                                 Area_AOO_km2 = AOO_km2,
                                                                 Porcentagem_AOO = round(as.numeric(porc_area_km2_mosaic_past_agric$n), 2),
                                                                 AOO_util_km2 = sites_aggregated_area_km2_num,
                                                                 Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_mosaic_past_agric)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_mosaic_past_agric)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_floresta <- data.frame(Species = ESPECIE,
                                                        Quad_AOO = count_area_sites_intersected_mapbiomas_df_floresta$QuadAOO,
                                                        Classe = "Floresta",
                                                        Area_AOO_sites_km2 = as.numeric(area_km2_floresta$n),
                                                        Area_AOO_km2 = AOO_km2,
                                                        Porcentagem_AOO = round(as.numeric(porc_area_km2_floresta$n), 2),
                                                        AOO_util_km2 = sites_aggregated_area_km2_num,
                                                        Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_floresta)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_floresta)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_savana <- data.frame(Species = ESPECIE,
                                                      Quad_AOO = count_area_sites_intersected_mapbiomas_df_savana$QuadAOO,
                                                      Classe = "Savana",
                                                      Area_AOO_sites_km2 = as.numeric(area_km2_savana$n),
                                                      Area_AOO_km2 = AOO_km2,
                                                      Porcentagem_AOO = round(as.numeric(porc_area_km2_savana$n), 2),
                                                      AOO_util_km2 = sites_aggregated_area_km2_num,
                                                      Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_savana)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_savana)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_mangue <- data.frame(Species = ESPECIE,
                                                      Quad_AOO = count_area_sites_intersected_mapbiomas_df_mangue$QuadAOO,
                                                      Classe = "Mangue",
                                                      Area_AOO_sites_km2 = as.numeric(area_km2_mangue$n),
                                                      Area_AOO_km2 = AOO_km2,
                                                      Porcentagem_AOO = round(as.numeric(porc_area_km2_mangue$n), 2),
                                                      AOO_util_km2 = sites_aggregated_area_km2_num,
                                                      Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_mangue)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_mangue)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_alagado_pantanosa <- data.frame(Species = ESPECIE,
                                                                 Quad_AOO = count_area_sites_intersected_mapbiomas_df_alagado_pantanosa$QuadAOO,
                                                                 Classe = "Campo Alagado e Área Pantanosa",
                                                                 Area_AOO_sites_km2 = as.numeric(area_km2_alagado_pantanosa$n),
                                                                 Area_AOO_km2 = AOO_km2,
                                                                 Porcentagem_AOO = round(as.numeric(porc_area_km2_alagado_pantanosa$n), 2),
                                                                 AOO_util_km2 = sites_aggregated_area_km2_num,
                                                                 Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_alagado_pantanosa)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_alagado_pantanosa)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_campos <- data.frame(Species = ESPECIE,
                                                      Quad_AOO = count_area_sites_intersected_mapbiomas_df_campos$QuadAOO,
                                                      Classe = "Formação Campestre",
                                                      Area_AOO_sites_km2 = as.numeric(area_km2_campos$n),
                                                      Area_AOO_km2 = AOO_km2,
                                                      Porcentagem_AOO = round(as.numeric(porc_area_km2_campos$n), 2),
                                                      AOO_util_km2 = sites_aggregated_area_km2_num,
                                                      Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_campos)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_campos)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_outras_nao_florestais <- data.frame(Species = ESPECIE,
                                                                     Quad_AOO = count_area_sites_intersected_mapbiomas_df_outras_nao_florestais$QuadAOO,
                                                                     Classe = "Outras Formações não Florestais",
                                                                     Area_AOO_sites_km2 = as.numeric(area_km2_outras_nao_florestais$n),
                                                                     Area_AOO_km2 = AOO_km2,
                                                                     Porcentagem_AOO = round(as.numeric(porc_area_km2_outras_nao_florestais$n), 2),
                                                                     AOO_util_km2 = sites_aggregated_area_km2_num,
                                                                     Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_outras_nao_florestais)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_outras_nao_florestais)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_lavouras_temporarias <- data.frame(Species = ESPECIE,
                                                                    Quad_AOO = count_area_sites_intersected_mapbiomas_df_lavouras_temporarias$QuadAOO,
                                                                    Classe = "Lavoura Temporária",
                                                                    Area_AOO_sites_km2 = as.numeric(area_km2_lavouras_temporarias$n),
                                                                    Area_AOO_km2 = AOO_km2,
                                                                    Porcentagem_AOO = round(as.numeric(porc_area_km2_lavouras_temporarias$n), 2),
                                                                    AOO_util_km2 = sites_aggregated_area_km2_num,
                                                                    Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_lavouras_temporarias)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_lavouras_temporarias)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_praia_duna_areal <- data.frame(Species = ESPECIE,
                                                                Quad_AOO = count_area_sites_intersected_mapbiomas_df_praia_duna_areal$QuadAOO,
                                                                Classe = "Praia, Duna e Areal",
                                                                Area_AOO_sites_km2 = as.numeric(area_km2_praia_duna_areal$n),
                                                                Area_AOO_km2 = AOO_km2,
                                                                Porcentagem_AOO = round(as.numeric(porc_area_km2_praia_duna_areal$n), 2),
                                                                AOO_util_km2 = sites_aggregated_area_km2_num,
                                                                Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_praia_duna_areal)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_praia_duna_areal)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_outras_nao_vegetadas <- data.frame(Species = ESPECIE,
                                                                    Quad_AOO = count_area_sites_intersected_mapbiomas_df_outras_nao_vegetadas$QuadAOO,
                                                                    Classe = "Outras Áreas não Vegetadas",
                                                                    Area_AOO_sites_km2 = as.numeric(area_km2_outras_nao_vegetadas$n),
                                                                    Area_AOO_km2 = AOO_km2,
                                                                    Porcentagem_AOO = round(as.numeric(porc_area_km2_outras_nao_vegetadas$n), 2),
                                                                    AOO_util_km2 = sites_aggregated_area_km2_num,
                                                                    Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_outras_nao_vegetadas)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_outras_nao_vegetadas)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_nao_observado <- data.frame(Species = ESPECIE,
                                                             Quad_AOO = count_area_sites_intersected_mapbiomas_df_nao_observado$QuadAOO,
                                                             Classe = "Não Observado",
                                                             Area_AOO_sites_km2 = as.numeric(area_km2_nao_observado$n),
                                                             Area_AOO_km2 = AOO_km2,
                                                             Porcentagem_AOO = round(as.numeric(porc_area_km2_nao_observado$n), 2),
                                                             AOO_util_km2 = sites_aggregated_area_km2_num,
                                                             Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_nao_observado)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_nao_observado)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_afloramento_rochoso <- data.frame(Species = ESPECIE,
                                                                   Quad_AOO = count_area_sites_intersected_mapbiomas_df_afloramento_rochoso$QuadAOO,
                                                                   Classe = "Afloramento Rochoso",
                                                                   Area_AOO_sites_km2 = as.numeric(area_km2_afloramento_rochoso$n),
                                                                   Area_AOO_km2 = AOO_km2,
                                                                   Porcentagem_AOO = round(as.numeric(porc_area_km2_afloramento_rochoso$n), 2),
                                                                   AOO_util_km2 = sites_aggregated_area_km2_num,
                                                                   Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_afloramento_rochoso)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_afloramento_rochoso)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_aquicultura <- data.frame(Species = ESPECIE,
                                                           Quad_AOO = count_area_sites_intersected_mapbiomas_df_aquicultura$QuadAOO,
                                                           Classe = "Aquicultura",
                                                           Area_AOO_sites_km2 = as.numeric(area_km2_aquicultura$n),
                                                           Area_AOO_km2 = AOO_km2,
                                                           Porcentagem_AOO = round(as.numeric(porc_area_km2_aquicultura$n), 2),
                                                           AOO_util_km2 = sites_aggregated_area_km2_num,
                                                           Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_aquicultura)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_aquicultura)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_apicum <- data.frame(Species = ESPECIE,
                                                      Quad_AOO = count_area_sites_intersected_mapbiomas_df_apicum$QuadAOO,
                                                      Classe = "Apicum",
                                                      Area_AOO_sites_km2 = as.numeric(area_km2_apicum$n),
                                                      Area_AOO_km2 = AOO_km2,
                                                      Porcentagem_AOO = round(as.numeric(porc_area_km2_apicum$n), 2),
                                                      AOO_util_km2 = sites_aggregated_area_km2_num,
                                                      Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_apicum)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_apicum)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_rio_lago_oceano <- data.frame(Species = ESPECIE,
                                                               Quad_AOO = count_area_sites_intersected_mapbiomas_df_rio_lago_oceano$QuadAOO,
                                                               Classe = "Rio, Lago e Oceano",
                                                               Area_AOO_sites_km2 = as.numeric(area_km2_rio_lago_oceano$n),
                                                               Area_AOO_km2 = AOO_km2,
                                                               Porcentagem_AOO = round(as.numeric(porc_area_km2_rio_lago_oceano$n), 2),
                                                               Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_rio_lago_oceano)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_rio_lago_oceano)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_arroz <- data.frame(Species = ESPECIE,
                                                     Quad_AOO = count_area_sites_intersected_mapbiomas_df_arroz$QuadAOO,
                                                     Classe = "Arroz",
                                                     Area_AOO_sites_km2 = as.numeric(area_km2_arroz$n),
                                                     Area_AOO_km2 = AOO_km2,
                                                     Porcentagem_AOO = round(as.numeric(porc_area_km2_arroz$n), 2),
                                                     AOO_util_km2 = sites_aggregated_area_km2_num,
                                                     Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_arroz)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_arroz)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_cafe <- data.frame(Species = ESPECIE,
                                                    Quad_AOO = count_area_sites_intersected_mapbiomas_df_cafe$QuadAOO,
                                                    Classe = "Café",
                                                    Area_AOO_sites_km2 = as.numeric(area_km2_cafe$n),
                                                    Area_AOO_km2 = AOO_km2,
                                                    Porcentagem_AOO = round(as.numeric(porc_area_km2_cafe$n), 2),
                                                    AOO_util_km2 = sites_aggregated_area_km2_num,
                                                    Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_cafe)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_cafe)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_citrus <- data.frame(Species = ESPECIE,
                                                      Quad_AOO = count_area_sites_intersected_mapbiomas_df_citrus$QuadAOO,
                                                      Classe = "Citrus",
                                                      Area_AOO_sites_km2 = as.numeric(area_km2_citrus$n),
                                                      Area_AOO_km2 = AOO_km2,
                                                      Porcentagem_AOO = round(as.numeric(porc_area_km2_citrus$n), 2),
                                                      AOO_util_km2 = sites_aggregated_area_km2_num,
                                                      Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_citrus)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_citrus)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_outras_lavouras_perenes <- data.frame(Species = ESPECIE,
                                                                       Quad_AOO = count_area_sites_intersected_mapbiomas_df_outras_lavouras_perenes$QuadAOO,
                                                                       Classe = "Outras Lavouras Perenes",
                                                                       Area_AOO_sites_km2 = as.numeric(area_km2_outras_lavouras_perenes$n),
                                                                       Area_AOO_km2 = AOO_km2,
                                                                       Porcentagem_AOO = round(as.numeric(porc_area_km2_outras_lavouras_perenes$n), 2),
                                                                       AOO_util_km2 = sites_aggregated_area_km2_num,
                                                                       Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_outras_lavouras_perenes)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_outras_lavouras_perenes)[c(3:6)], "_", MapBiomas_ANO)
          
          final_output_mapbiomas_restinga_arborizada <- data.frame(Species = ESPECIE,
                                                                   Quad_AOO = count_area_sites_intersected_mapbiomas_df_restinga_arborizada$QuadAOO,
                                                                   Classe = "Restinga Arborizada",
                                                                   Area_AOO_sites_km2 = as.numeric(area_km2_restinga_arborizada$n),
                                                                   Area_AOO_km2 = AOO_km2,
                                                                   Porcentagem_AOO = round(as.numeric(porc_area_km2_restinga_arborizada$n), 2),
                                                                   AOO_util_km2 = sites_aggregated_area_km2_num,
                                                                   Fonte = "MapBiomas"
          )
          colnames(final_output_mapbiomas_restinga_arborizada)[c(3:6)] <- paste0(colnames(final_output_mapbiomas_restinga_arborizada)[c(3:6)], "_", MapBiomas_ANO)
        }
      }
      
      if(AOO_area_s_centr_mun == 0){
        # Output final ####
        output <- NULL
        
        # Combinação do objeto final
        final_output <- bind_cols(final_output, output)
      } else{
        
        # Output final ####
        output <- bind_rows(final_output_mapbiomas_soja, final_output_mapbiomas_cana, final_output_mapbiomas_lavouras_perenes, final_output_mapbiomas_outras_lavouras_temporarias, final_output_mapbiomas_pastagem, final_output_mapbiomas_mosaic_past_agric, final_output_mapbiomas_urbano, final_output_mapbiomas_mineracao, final_output_mapbiomas_silvicultura, final_output_mapbiomas_floresta, final_output_mapbiomas_savana, final_output_mapbiomas_mangue, final_output_mapbiomas_alagado_pantanosa, final_output_mapbiomas_campos, final_output_mapbiomas_outras_nao_florestais, final_output_mapbiomas_lavouras_temporarias, final_output_mapbiomas_praia_duna_areal, final_output_mapbiomas_outras_nao_vegetadas, final_output_mapbiomas_nao_observado, final_output_mapbiomas_afloramento_rochoso, final_output_mapbiomas_aquicultura, final_output_mapbiomas_apicum, final_output_mapbiomas_rio_lago_oceano, final_output_mapbiomas_arroz, final_output_mapbiomas_cafe, final_output_mapbiomas_citrus, final_output_mapbiomas_outras_lavouras_perenes, final_output_mapbiomas_restinga_arborizada)
        Ameacas <- output %>% dplyr::select(contains("Classe")) %>% unique()
        output_sites_AOO_km2_total <- output %>% dplyr::summarise(sum(get(paste0("Area_AOO_sites_km2_", MapBiomas_ANO))))
        if(exists("output[10,7]")==T){
          if(is.na(output[1,7])==T){
            output[10,7]<-NA
          }
        }
        colnames(output_sites_AOO_km2_total)<-paste0("Area_AOO_sites_km2_", MapBiomas_ANO)
        assign(paste0("output_Porcentagem_AOO_", MapBiomas_ANO, "_total"), output %>% dplyr::summarise(sum(get(paste0("Porcentagem_AOO_", MapBiomas_ANO)))))
        assign(paste0("output_Porcentagem_AOO_", MapBiomas_ANO, "_total"), setNames(get(paste0("output_Porcentagem_AOO_", MapBiomas_ANO, "_total")), paste0("Porcentagem_AOO_", MapBiomas_ANO)))
        
        if(is.na(output$AOO_util_km2[1])==T){sites_aggregated_area_km2<-NA}
        
        output_Quads <- output$Quad_AOO
        output <- output %>% dplyr::select(paste0("Area_AOO_sites_km2_", MapBiomas_ANO),
                                           paste0("Porcentagem_AOO_", MapBiomas_ANO)
        )
        
        # Combinação do objeto final
        final_output <- bind_cols(final_output, output)
        cat(crayon::green(paste0(ESPECIE, ": Ano ", MapBiomas_ANO, " concluído\n")))
      }
    }
    
    if(AOO_area_s_centr_mun == 0){} else{
      Ameacas_quad <- NULL
      for(i in Ameacas[,1]){
        Ameacas_quad_ <- rep(i, length(count_area_sites_intersected_mapbiomas_df$QuadAOO))
        Ameacas_quad <- c(Ameacas_quad, Ameacas_quad_)
      }
    }
    
    if(AOO_area_s_centr_mun == 0){
      
      periodo_MapBiomas <- 1985:2020
      periodo_MapBiomas_n <- 2:(length(periodo_MapBiomas) * 2)
      
      anosMapBiomas <- tribble(~A, "")
      
      for(ano in periodo_MapBiomas_n){
        
        suppressMessages(
          
          anosMapBiomas <- anosMapBiomas %>%
            add_column(
              
              assign(LETTERS[ano], ""),
              .name_repair = "unique"
            )
          
        )
        
      }
      
      colnames_MapBiomas <- NULL
      for(element in periodo_MapBiomas){
        
        colnames_MapBiomas_ <- paste0("Area_AOO_sites_km2_", element)
        colnames_MapBiomas__ <- paste0("Porcentagem_AOO_", element)
        colnames_MapBiomas___ <- c(colnames_MapBiomas_, colnames_MapBiomas__)
        colnames_MapBiomas <- c(colnames_MapBiomas, colnames_MapBiomas___)
        
      }
      
      colnames(anosMapBiomas) <- colnames_MapBiomas
      
      final_output <- data.frame(Species = ESPECIE,
                                 Quad_AOO = "",
                                 Classe = "",
                                 Area_AOO_km2 = AOO_area_c_centr_mun,
                                 AOO_util_km2 = AOO_area_s_centr_mun,
                                 anosMapBiomas,
                                 Fonte=""
      )
      
    } else{
      
      final_output <- data.frame(Species = ESPECIE,
                                 Quad_AOO = output_Quads,
                                 Classe = Ameacas_quad,
                                 Area_AOO_km2 = AOO_km2,
                                 AOO_util_km2 = sites_aggregated_area_km2,
                                 final_output,
                                 Fonte="MapBiomas"
      )
      
    }
    
    if(AOO_area_s_centr_mun == 0){
      cat(crayon::green(paste0(ESPECIE, ": Não há AOO útil\n")))
    } else{
      cat(crayon::green(paste0(ESPECIE, ": concluído\n")))
    }
    
    
    write.csv(
      
      final_output,
      paste0(
        
        sub("Packages/CNCFloraR", "", getwd()),
        "/CNCFlora_data/outputs/overlayAnalysis results/QuadOfGrid/",
        ESPECIE,
        ".csv"
        
      ),
      row.names = F
      
    )
    
    # Finish background log ####
    
    backgroundJobs_log$end <-
      format(Sys.Date(), "%d/%m/%Y")
    
    write.csv2(
      
      backgroundJobs_log,
      paste0(
        
        sub("Packages/CNCFloraR", "", getwd()),
        "/CNCFlora_data/outputs/overlayAnalysis logs/QuadOfGrid/",
        ESPECIE,
        ".csv"
        
      ),
      row.names = F
      
    )
    
  },
  
  error = function(e){
    
    backgroundJobs_log$end <-
      "error"
    
    write.csv2(
      
      backgroundJobs_log,
      paste0(
        
        sub("Packages/CNCFloraR", "", getwd()),
        "/CNCFlora_data/outputs/overlayAnalysis logs/QuadOfGrid/",
        ESPECIE,
        ".csv"
        
      ),
      row.names = F
      
    )
    
  }
  
)
